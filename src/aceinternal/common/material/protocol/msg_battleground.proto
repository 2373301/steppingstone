package typed.protocol;

enum BattleGroundCode
{
	eBGCodeSuccess			=1;		// 成功
	eBGCodeFailed			=2;		// 失败,一般为内部错误
	eBGCodeLevelMismatch	=3;		// 等级不符合
	eBGCodeNotJoin			=4;		// 没有参加
	eBGCodeClosed			=5;		// 非活动时间
	eBGCodeTopLvel			=6;		// 已到最高等级
	eBGCodeBadLuck			=7;		// 运气太差,鼓舞失败
	eBGCodeStaked			=8;		// 已押注
	eBGCodeLackMoney		=9;		// 银两不够
	eBGCodeLackCoin			=10;		// 元宝不够
	eBGCodeLackSeni			=11;	// 阅历不够
	eBGCodeNonClosed		=12;	// 阵营战活动期间
	
}

enum BattleGroundTeam
{	
	eBGTeamNull		=1;	// 莫有队伍
	eBGTeamTian		=2;	// 天
	eBGTeamDi		=3;	// 地
	eBGTeamRen		=4;	// 人
	
}

enum BattleGroundState
{
	eBGStateWaiting		=1; // 等待中
	eBGStateFighting	=2; // 战斗中
	eBGStateCoolingDown	=3; // cd中
	eBGStateOffteam		=4;	// 离队中
	eBGStateNotJoined	=5; // 未参加
}

//阶段通知
message smsg_battleground_phase_notify
{
	required uint32 phase = 1; // 1:结束时间; 2:报名时间; 3:开始时间; 
}

// 打开, 投注信息, 参战与否信息
//cmsg_battleground_open
message smsg_battleground_open
{	
	required BattleGroundCode result		=1;	// 结果
	optional uint32  		  stake			=2; // 投注的金额, 0表示未投注
	optional BattleGroundTeam  stake_team	=3; // 投注的队伍
	optional BattleGroundTeam	 team		=4;	// 所在队伍
	optional uint32 phase					=5; // 当前所处阶段 1:结束时间; 2报名时间; 3:开始时间; 
	
	optional uint32 tian_score				=6; // 阵营天的积分
	optional uint32 di_score				=7; // 阵营地的积分
	optional uint32 ren_score				=8; // 阵营人的积分
}

//请求阵营积分
// cmsg_battleground_scores

message smsg_battleground_scores
{	
	required BattleGroundCode result	=1;	// 结果
	
	optional uint32 tian_score			=2; // 阵营天的积分
	optional uint32 di_score			=3; // 阵营地的积分
	optional uint32 ren_score			=4; // 阵营人的积分	
}

// 参加阵营战
//cmsg_battleground_join
message smsg_battleground_join
{
	required BattleGroundCode result	=1; //结果		eBGCodeSuccess: 成功; eBGCodeLevelMismatch:等级不符合
	optional BattleGroundTeam team		=2; //队伍
}

// 退出队列
//cmsg_battleground_quit
message smsg_battleground_quit
{
	required BattleGroundCode result	=1;	 //eBGCodeSuccess:成功;  eBGCodeNotJoin:没有参加
}

// 个人战斗信息
//cmsg_battleground_personal_info
// 下列情况会被发送
// 1. 主动发送请求
// 2. 自己每场战斗之后会有推送
message smsg_battleground_personal_info
{	

	message personal_state_info
	{
		optional uint32 buff			 =1; // 鼓舞
		optional bool	is_max			 =2; // 鼓舞是否到了最顶层
		optional uint32 debuff			 =3; // 连胜 debuff
		optional BattleGroundTeam team 	 =4; // 所在阵营
		optional BattleGroundState	state		 =5; // 状态
	}
	
	message personal_battle_info
	{
		optional uint32 win			=1;	//胜利次数
		optional uint32 lose		=2;	//失败次数
		optional uint32 hot_streak	=3;	//连胜次数
		optional uint32 terminate	=4;	//终结次数
	}
	
	message personal_reward
	{
		optional uint32 money		=1; //银两
		optional uint32 prestige 	=2; //声望
		optional uint32 reverence	=3; //威望
	}
	
	optional personal_state_info		info  =1;  // 个人的状态信息
	optional personal_battle_info battle_info =2;  // 个人的战斗信息
	optional personal_reward	reward		  =3;  // 个人的奖励信息
	required BattleGroundCode result		  =4;  // eBGCodeSuccess:成功, eBGCodeNotJoin:没参加
}

// 获取阵营成员
// cmsg_battleground_team_list_get
message smsg_battleground_team_list_get
{
	message team_members
	{	
		required uint64 guid				=1;
		optional string	name				=2;
		optional BattleGroundState	state	=3;	//状态码
		optional uint32 role_id				=4;
	}
	
	repeated team_members	tian_team	=1; // 天阵营
	repeated team_members	di_team		=2; // 地阵营
	repeated team_members	ren_team	=3; // 人阵营
}


message smsg_battleground_member_list_update
{
	message state_operation
	{	
		required uint64 guid				=1;
		optional string	name				=2;	// 玩家名称
		optional uint32	opcode				=3;	// 更新码:   1:更新状态; 2:添加成员; 3:删除成员
		optional BattleGroundState	state	=4; // 玩家状态
		optional uint32 role_id				=5;
	}
		
	repeated state_operation tian_op		=1;
	repeated state_operation di_op			=2;
	repeated state_operation ren_op			=3;
}


// 连胜榜
//cmsg_battleground_toplist

// 下列情况会被发送:
// 1. 主动发送请求
// 2. 此消息跟随smsg_battle_ground_personal_info
// 3. 连胜榜变化时自动推送
message smsg_battleground_toplist
{	
	repeated uint32 role_id		=1;
	repeated string	 name 		=2;		// 玩家名
	repeated uint32	 hot_streak =3;		// 连胜数
}


// 投注
message cmsg_battleground_stake
{	
	required BattleGroundTeam team	=1; // 选择的队伍
	required uint32 stake			=2;	// 赌金,选项:(1~3)
}

message smsg_battleground_stake
{
	optional BattleGroundCode result	=1; // eBGCodeNonClosed, eBGCodeStaked, eBGCodeFailed, eBGCodeLackMoney, eBGCodeSuccess
	optional BattleGroundTeam team		=2;
	optional uint32 stake				=3;
}

// 鼓舞, 鼓舞的有效期为整个活动期间
message cmsg_battleground_attach_buff
{
	required uint32 type	=1;		// 消费种类 1: 阅历, 2:元宝
}

message smsg_battleground_attach_buff
{
	required BattleGroundCode result	=1;  //eBGCodeFailed, eBGCodeClosed, eBGCodeTopLvel, eBGCodeLackSeni,eBGCodeLackCoin, eBGCodeBadLuck,eBGCodeSuccess
	optional uint32 type				=2;
	optional uint32 buff_id				=3;
}

//smsg_battleground_scores 阵营积分消息, 应该在每轮战斗之后发送

//> 对战开始
message smsg_battleground_battle_start
{
	optional uint64 player1_guid	=1;
	optional uint64 player2_guid	=2;
}

// 对战结束, 发送对战结果
message smsg_battleground_battle
{	
	optional uint64 player1_guid		=1;
	optional uint64 player2_guid		=2;
	required uint32	result				=3; // 1:成功, 2:失败,3:双输	
}

// 玩家的简略信息
//  cmsg_battleground_short_info
message smsg_battleground_short_info
{
	required uint64 guid				=1;
	optional BattleGroundTeam team		=2;	// 所在阵营	,eBGTeamNull:代表离队...
	optional string name				=3;	// 姓名
	optional BattleGroundState	state	=4;	// 状态
}

// 战报
message smsg_battleground_record
{
	required uint64 player1_guid		=1;
	required string player1_name		=2;
	
	required uint64 player2_guid		=3;
	required string player2_name		=4;
	
	required uint32	result				=5; // 1:成功, 2:失败, 3:双输
	optional uint32 win					=6;	// 胜利方的连胜数
	optional bool  ko					=7;	// 胜利方的终结
	optional uint32 loser_streak		=8; // 失败者被终结时的连胜数
	
	optional uint32 prestige 			=9; // 声望
	optional uint32 money				=10; // 银两
	optional uint32 reverence			=11; // 威望
	
	optional uint32 ko_prestige 		=12; // 终结奖励的声望
	optional uint32 ko_money			=13; // 终结奖励的银两
	optional uint32 ko_reverence		=14; // 终结奖励的威望
}


// 通知服务端战报播放完毕
// cmsg_battleground_playback_over

message smsg_battleground_playback_over
{
	required BattleGroundCode result	=1;	 //eBGCodeSuccess:成功;  eBGCodeNotJoin:没有参加, eBGCodeClosed : 非活动时间
	optional uint32 cd					=2;  //假如cd中, 返回剩余cd时间
}


// 投注奖励通知
message smsg_battleground_bonus_notify
{
	required uint32 type		=1;   // 奖励类型,  1:投注奖励
}


// 请求投注奖励
// 投注奖励走统一领奖
message cmsg_battleground_bonus
{
	required uint32 type	=1;	
}

// 单次战斗奖励, 阵营总奖励主动发放
// 投注奖励通过 cmsg_battleground_bonus 请求,发放
message smsg_battleground_bonus
{
	required uint32 type					=1;	// 1:投注奖励, 2:阵营获胜奖励, 3:单次战斗奖励
	optional BattleGroundCode	result		=2;	// 
	
	optional uint32 money					=3;	// 铜钱
	optional uint32 coin					=4;	//
	optional uint32 seniority				=5;	// 阅历
	optional uint32 prestige				=6;	// 声望
	optional uint32 energy					=7;	// 体力
	optional uint32 reverence				=8;	// 威望
	repeated uint32 item_ids				=9;
	repeated uint32 item_nums				=10;
}

// debuff 信息, 战斗回合结束后有变动才推送
message smsg_battleground_debuff
{
	optional uint32 debuff_id		=1;
}

// 投注通知
message smsg_battleground_stake_online_notify
{
	required uint32 stake		=1;	 // 投注的金额, 0表示未投注
}







