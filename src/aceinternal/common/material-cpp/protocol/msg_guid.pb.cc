// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/msg_guid.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "protocol/msg_guid.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace typed {
namespace protocol {

namespace {

const ::google::protobuf::Descriptor* RequestGuid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RequestGuid_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReturnGuid_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReturnGuid_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_protocol_2fmsg_5fguid_2eproto() {
  protobuf_AddDesc_protocol_2fmsg_5fguid_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "protocol/msg_guid.proto");
  GOOGLE_CHECK(file != NULL);
  RequestGuid_descriptor_ = file->message_type(0);
  static const int RequestGuid_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGuid, request_no_),
  };
  RequestGuid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RequestGuid_descriptor_,
      RequestGuid::default_instance_,
      RequestGuid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGuid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RequestGuid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RequestGuid));
  ReturnGuid_descriptor_ = file->message_type(1);
  static const int ReturnGuid_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnGuid, seed_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnGuid, return_no_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnGuid, start_index_),
  };
  ReturnGuid_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ReturnGuid_descriptor_,
      ReturnGuid::default_instance_,
      ReturnGuid_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnGuid, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReturnGuid, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ReturnGuid));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_protocol_2fmsg_5fguid_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RequestGuid_descriptor_, &RequestGuid::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ReturnGuid_descriptor_, &ReturnGuid::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_protocol_2fmsg_5fguid_2eproto() {
  delete RequestGuid::default_instance_;
  delete RequestGuid_reflection_;
  delete ReturnGuid::default_instance_;
  delete ReturnGuid_reflection_;
}

void protobuf_AddDesc_protocol_2fmsg_5fguid_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027protocol/msg_guid.proto\022\016typed.protoco"
    "l\"!\n\013RequestGuid\022\022\n\nrequest_no\030\001 \002(\r\"H\n\n"
    "ReturnGuid\022\022\n\nseed_value\030\001 \002(\r\022\021\n\treturn"
    "_no\030\002 \002(\r\022\023\n\013start_index\030\003 \002(\004", 150);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "protocol/msg_guid.proto", &protobuf_RegisterTypes);
  RequestGuid::default_instance_ = new RequestGuid();
  ReturnGuid::default_instance_ = new ReturnGuid();
  RequestGuid::default_instance_->InitAsDefaultInstance();
  ReturnGuid::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_protocol_2fmsg_5fguid_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_protocol_2fmsg_5fguid_2eproto {
  StaticDescriptorInitializer_protocol_2fmsg_5fguid_2eproto() {
    protobuf_AddDesc_protocol_2fmsg_5fguid_2eproto();
  }
} static_descriptor_initializer_protocol_2fmsg_5fguid_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int RequestGuid::kRequestNoFieldNumber;
#endif  // !_MSC_VER

RequestGuid::RequestGuid()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:typed.protocol.RequestGuid)
}

void RequestGuid::InitAsDefaultInstance() {
}

RequestGuid::RequestGuid(const RequestGuid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:typed.protocol.RequestGuid)
}

void RequestGuid::SharedCtor() {
  _cached_size_ = 0;
  request_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RequestGuid::~RequestGuid() {
  // @@protoc_insertion_point(destructor:typed.protocol.RequestGuid)
  SharedDtor();
}

void RequestGuid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RequestGuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RequestGuid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RequestGuid_descriptor_;
}

const RequestGuid& RequestGuid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fmsg_5fguid_2eproto();
  return *default_instance_;
}

RequestGuid* RequestGuid::default_instance_ = NULL;

RequestGuid* RequestGuid::New() const {
  return new RequestGuid;
}

void RequestGuid::Clear() {
  request_no_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RequestGuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:typed.protocol.RequestGuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 request_no = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &request_no_)));
          set_has_request_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:typed.protocol.RequestGuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:typed.protocol.RequestGuid)
  return false;
#undef DO_
}

void RequestGuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:typed.protocol.RequestGuid)
  // required uint32 request_no = 1;
  if (has_request_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->request_no(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:typed.protocol.RequestGuid)
}

::google::protobuf::uint8* RequestGuid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:typed.protocol.RequestGuid)
  // required uint32 request_no = 1;
  if (has_request_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->request_no(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:typed.protocol.RequestGuid)
  return target;
}

int RequestGuid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 request_no = 1;
    if (has_request_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->request_no());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RequestGuid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RequestGuid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RequestGuid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RequestGuid::MergeFrom(const RequestGuid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_request_no()) {
      set_request_no(from.request_no());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RequestGuid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestGuid::CopyFrom(const RequestGuid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestGuid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void RequestGuid::Swap(RequestGuid* other) {
  if (other != this) {
    std::swap(request_no_, other->request_no_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RequestGuid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RequestGuid_descriptor_;
  metadata.reflection = RequestGuid_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int ReturnGuid::kSeedValueFieldNumber;
const int ReturnGuid::kReturnNoFieldNumber;
const int ReturnGuid::kStartIndexFieldNumber;
#endif  // !_MSC_VER

ReturnGuid::ReturnGuid()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:typed.protocol.ReturnGuid)
}

void ReturnGuid::InitAsDefaultInstance() {
}

ReturnGuid::ReturnGuid(const ReturnGuid& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:typed.protocol.ReturnGuid)
}

void ReturnGuid::SharedCtor() {
  _cached_size_ = 0;
  seed_value_ = 0u;
  return_no_ = 0u;
  start_index_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReturnGuid::~ReturnGuid() {
  // @@protoc_insertion_point(destructor:typed.protocol.ReturnGuid)
  SharedDtor();
}

void ReturnGuid::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReturnGuid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReturnGuid::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReturnGuid_descriptor_;
}

const ReturnGuid& ReturnGuid::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_protocol_2fmsg_5fguid_2eproto();
  return *default_instance_;
}

ReturnGuid* ReturnGuid::default_instance_ = NULL;

ReturnGuid* ReturnGuid::New() const {
  return new ReturnGuid;
}

void ReturnGuid::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ReturnGuid*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  ZR_(seed_value_, start_index_);

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ReturnGuid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:typed.protocol.ReturnGuid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 seed_value = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seed_value_)));
          set_has_seed_value();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_return_no;
        break;
      }

      // required uint32 return_no = 2;
      case 2: {
        if (tag == 16) {
         parse_return_no:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &return_no_)));
          set_has_return_no();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_start_index;
        break;
      }

      // required uint64 start_index = 3;
      case 3: {
        if (tag == 24) {
         parse_start_index:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &start_index_)));
          set_has_start_index();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:typed.protocol.ReturnGuid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:typed.protocol.ReturnGuid)
  return false;
#undef DO_
}

void ReturnGuid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:typed.protocol.ReturnGuid)
  // required uint32 seed_value = 1;
  if (has_seed_value()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->seed_value(), output);
  }

  // required uint32 return_no = 2;
  if (has_return_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->return_no(), output);
  }

  // required uint64 start_index = 3;
  if (has_start_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->start_index(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:typed.protocol.ReturnGuid)
}

::google::protobuf::uint8* ReturnGuid::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:typed.protocol.ReturnGuid)
  // required uint32 seed_value = 1;
  if (has_seed_value()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->seed_value(), target);
  }

  // required uint32 return_no = 2;
  if (has_return_no()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->return_no(), target);
  }

  // required uint64 start_index = 3;
  if (has_start_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->start_index(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:typed.protocol.ReturnGuid)
  return target;
}

int ReturnGuid::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 seed_value = 1;
    if (has_seed_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seed_value());
    }

    // required uint32 return_no = 2;
    if (has_return_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->return_no());
    }

    // required uint64 start_index = 3;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->start_index());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReturnGuid::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ReturnGuid* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ReturnGuid*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReturnGuid::MergeFrom(const ReturnGuid& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_seed_value()) {
      set_seed_value(from.seed_value());
    }
    if (from.has_return_no()) {
      set_return_no(from.return_no());
    }
    if (from.has_start_index()) {
      set_start_index(from.start_index());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ReturnGuid::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReturnGuid::CopyFrom(const ReturnGuid& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReturnGuid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReturnGuid::Swap(ReturnGuid* other) {
  if (other != this) {
    std::swap(seed_value_, other->seed_value_);
    std::swap(return_no_, other->return_no_);
    std::swap(start_index_, other->start_index_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ReturnGuid::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReturnGuid_descriptor_;
  metadata.reflection = ReturnGuid_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace typed

// @@protoc_insertion_point(global_scope)
