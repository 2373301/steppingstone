// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: protocol/msg_binary.proto

#ifndef PROTOBUF_protocol_2fmsg_5fbinary_2eproto__INCLUDED
#define PROTOBUF_protocol_2fmsg_5fbinary_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protocol {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_protocol_2fmsg_5fbinary_2eproto();
void protobuf_AssignDesc_protocol_2fmsg_5fbinary_2eproto();
void protobuf_ShutdownFile_protocol_2fmsg_5fbinary_2eproto();

class msg_binary_file;
class msg_binary_record;

// ===================================================================

class msg_binary_file : public ::google::protobuf::Message {
 public:
  msg_binary_file();
  virtual ~msg_binary_file();

  msg_binary_file(const msg_binary_file& from);

  inline msg_binary_file& operator=(const msg_binary_file& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_binary_file& default_instance();

  void Swap(msg_binary_file* other);

  // implements Message ----------------------------------------------

  msg_binary_file* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_binary_file& from);
  void MergeFrom(const msg_binary_file& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes cache_addr = 1;
  inline bool has_cache_addr() const;
  inline void clear_cache_addr();
  static const int kCacheAddrFieldNumber = 1;
  inline const ::std::string& cache_addr() const;
  inline void set_cache_addr(const ::std::string& value);
  inline void set_cache_addr(const char* value);
  inline void set_cache_addr(const void* value, size_t size);
  inline ::std::string* mutable_cache_addr();
  inline ::std::string* release_cache_addr();
  inline void set_allocated_cache_addr(::std::string* cache_addr);

  // required bytes binary_file = 2;
  inline bool has_binary_file() const;
  inline void clear_binary_file();
  static const int kBinaryFileFieldNumber = 2;
  inline const ::std::string& binary_file() const;
  inline void set_binary_file(const ::std::string& value);
  inline void set_binary_file(const char* value);
  inline void set_binary_file(const void* value, size_t size);
  inline ::std::string* mutable_binary_file();
  inline ::std::string* release_binary_file();
  inline void set_allocated_binary_file(::std::string* binary_file);

  // @@protoc_insertion_point(class_scope:protocol.msg_binary_file)
 private:
  inline void set_has_cache_addr();
  inline void clear_has_cache_addr();
  inline void set_has_binary_file();
  inline void clear_has_binary_file();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cache_addr_;
  ::std::string* binary_file_;
  friend void  protobuf_AddDesc_protocol_2fmsg_5fbinary_2eproto();
  friend void protobuf_AssignDesc_protocol_2fmsg_5fbinary_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fmsg_5fbinary_2eproto();

  void InitAsDefaultInstance();
  static msg_binary_file* default_instance_;
};
// -------------------------------------------------------------------

class msg_binary_record : public ::google::protobuf::Message {
 public:
  msg_binary_record();
  virtual ~msg_binary_record();

  msg_binary_record(const msg_binary_record& from);

  inline msg_binary_record& operator=(const msg_binary_record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msg_binary_record& default_instance();

  void Swap(msg_binary_record* other);

  // implements Message ----------------------------------------------

  msg_binary_record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const msg_binary_record& from);
  void MergeFrom(const msg_binary_record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required uint64 last_modify_time = 2;
  inline bool has_last_modify_time() const;
  inline void clear_last_modify_time();
  static const int kLastModifyTimeFieldNumber = 2;
  inline ::google::protobuf::uint64 last_modify_time() const;
  inline void set_last_modify_time(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:protocol.msg_binary_record)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_last_modify_time();
  inline void clear_has_last_modify_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 last_modify_time_;
  friend void  protobuf_AddDesc_protocol_2fmsg_5fbinary_2eproto();
  friend void protobuf_AssignDesc_protocol_2fmsg_5fbinary_2eproto();
  friend void protobuf_ShutdownFile_protocol_2fmsg_5fbinary_2eproto();

  void InitAsDefaultInstance();
  static msg_binary_record* default_instance_;
};
// ===================================================================


// ===================================================================

// msg_binary_file

// required bytes cache_addr = 1;
inline bool msg_binary_file::has_cache_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_binary_file::set_has_cache_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_binary_file::clear_has_cache_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_binary_file::clear_cache_addr() {
  if (cache_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cache_addr_->clear();
  }
  clear_has_cache_addr();
}
inline const ::std::string& msg_binary_file::cache_addr() const {
  // @@protoc_insertion_point(field_get:protocol.msg_binary_file.cache_addr)
  return *cache_addr_;
}
inline void msg_binary_file::set_cache_addr(const ::std::string& value) {
  set_has_cache_addr();
  if (cache_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cache_addr_ = new ::std::string;
  }
  cache_addr_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.msg_binary_file.cache_addr)
}
inline void msg_binary_file::set_cache_addr(const char* value) {
  set_has_cache_addr();
  if (cache_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cache_addr_ = new ::std::string;
  }
  cache_addr_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.msg_binary_file.cache_addr)
}
inline void msg_binary_file::set_cache_addr(const void* value, size_t size) {
  set_has_cache_addr();
  if (cache_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cache_addr_ = new ::std::string;
  }
  cache_addr_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.msg_binary_file.cache_addr)
}
inline ::std::string* msg_binary_file::mutable_cache_addr() {
  set_has_cache_addr();
  if (cache_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cache_addr_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.msg_binary_file.cache_addr)
  return cache_addr_;
}
inline ::std::string* msg_binary_file::release_cache_addr() {
  clear_has_cache_addr();
  if (cache_addr_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cache_addr_;
    cache_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void msg_binary_file::set_allocated_cache_addr(::std::string* cache_addr) {
  if (cache_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cache_addr_;
  }
  if (cache_addr) {
    set_has_cache_addr();
    cache_addr_ = cache_addr;
  } else {
    clear_has_cache_addr();
    cache_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.msg_binary_file.cache_addr)
}

// required bytes binary_file = 2;
inline bool msg_binary_file::has_binary_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_binary_file::set_has_binary_file() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_binary_file::clear_has_binary_file() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_binary_file::clear_binary_file() {
  if (binary_file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_file_->clear();
  }
  clear_has_binary_file();
}
inline const ::std::string& msg_binary_file::binary_file() const {
  // @@protoc_insertion_point(field_get:protocol.msg_binary_file.binary_file)
  return *binary_file_;
}
inline void msg_binary_file::set_binary_file(const ::std::string& value) {
  set_has_binary_file();
  if (binary_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_file_ = new ::std::string;
  }
  binary_file_->assign(value);
  // @@protoc_insertion_point(field_set:protocol.msg_binary_file.binary_file)
}
inline void msg_binary_file::set_binary_file(const char* value) {
  set_has_binary_file();
  if (binary_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_file_ = new ::std::string;
  }
  binary_file_->assign(value);
  // @@protoc_insertion_point(field_set_char:protocol.msg_binary_file.binary_file)
}
inline void msg_binary_file::set_binary_file(const void* value, size_t size) {
  set_has_binary_file();
  if (binary_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_file_ = new ::std::string;
  }
  binary_file_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:protocol.msg_binary_file.binary_file)
}
inline ::std::string* msg_binary_file::mutable_binary_file() {
  set_has_binary_file();
  if (binary_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    binary_file_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:protocol.msg_binary_file.binary_file)
  return binary_file_;
}
inline ::std::string* msg_binary_file::release_binary_file() {
  clear_has_binary_file();
  if (binary_file_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = binary_file_;
    binary_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void msg_binary_file::set_allocated_binary_file(::std::string* binary_file) {
  if (binary_file_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete binary_file_;
  }
  if (binary_file) {
    set_has_binary_file();
    binary_file_ = binary_file;
  } else {
    clear_has_binary_file();
    binary_file_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:protocol.msg_binary_file.binary_file)
}

// -------------------------------------------------------------------

// msg_binary_record

// required uint64 guid = 1;
inline bool msg_binary_record::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msg_binary_record::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msg_binary_record::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msg_binary_record::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 msg_binary_record::guid() const {
  // @@protoc_insertion_point(field_get:protocol.msg_binary_record.guid)
  return guid_;
}
inline void msg_binary_record::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:protocol.msg_binary_record.guid)
}

// required uint64 last_modify_time = 2;
inline bool msg_binary_record::has_last_modify_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void msg_binary_record::set_has_last_modify_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void msg_binary_record::clear_has_last_modify_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void msg_binary_record::clear_last_modify_time() {
  last_modify_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_modify_time();
}
inline ::google::protobuf::uint64 msg_binary_record::last_modify_time() const {
  // @@protoc_insertion_point(field_get:protocol.msg_binary_record.last_modify_time)
  return last_modify_time_;
}
inline void msg_binary_record::set_last_modify_time(::google::protobuf::uint64 value) {
  set_has_last_modify_time();
  last_modify_time_ = value;
  // @@protoc_insertion_point(field_set:protocol.msg_binary_record.last_modify_time)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_protocol_2fmsg_5fbinary_2eproto__INCLUDED
