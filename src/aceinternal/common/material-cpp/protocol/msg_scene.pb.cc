// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_scene.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "msg_scene.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* scene_xs2ns_req_online_scenes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scene_xs2ns_req_online_scenes_reflection_ = NULL;
const ::google::protobuf::Descriptor* scene_ns2xs_ack_online_scenes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scene_ns2xs_ack_online_scenes_reflection_ = NULL;
const ::google::protobuf::Descriptor* scene_ns2xs_ntf_new_scenes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scene_ns2xs_ntf_new_scenes_reflection_ = NULL;
const ::google::protobuf::Descriptor* scene_xs2xs_req_connection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scene_xs2xs_req_connection_reflection_ = NULL;
const ::google::protobuf::Descriptor* scene_xs2xs_ack_connection_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  scene_xs2xs_ack_connection_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_msg_5fscene_2eproto() {
  protobuf_AddDesc_msg_5fscene_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "msg_scene.proto");
  GOOGLE_CHECK(file != NULL);
  scene_xs2ns_req_online_scenes_descriptor_ = file->message_type(0);
  static const int scene_xs2ns_req_online_scenes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2ns_req_online_scenes, srv_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2ns_req_online_scenes, srv_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2ns_req_online_scenes, srv_addr_),
  };
  scene_xs2ns_req_online_scenes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      scene_xs2ns_req_online_scenes_descriptor_,
      scene_xs2ns_req_online_scenes::default_instance_,
      scene_xs2ns_req_online_scenes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2ns_req_online_scenes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2ns_req_online_scenes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(scene_xs2ns_req_online_scenes));
  scene_ns2xs_ack_online_scenes_descriptor_ = file->message_type(1);
  static const int scene_ns2xs_ack_online_scenes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ack_online_scenes, srv_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ack_online_scenes, srv_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ack_online_scenes, srv_addrs_),
  };
  scene_ns2xs_ack_online_scenes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      scene_ns2xs_ack_online_scenes_descriptor_,
      scene_ns2xs_ack_online_scenes::default_instance_,
      scene_ns2xs_ack_online_scenes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ack_online_scenes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ack_online_scenes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(scene_ns2xs_ack_online_scenes));
  scene_ns2xs_ntf_new_scenes_descriptor_ = file->message_type(2);
  static const int scene_ns2xs_ntf_new_scenes_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ntf_new_scenes, srv_types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ntf_new_scenes, srv_ids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ntf_new_scenes, srv_addrs_),
  };
  scene_ns2xs_ntf_new_scenes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      scene_ns2xs_ntf_new_scenes_descriptor_,
      scene_ns2xs_ntf_new_scenes::default_instance_,
      scene_ns2xs_ntf_new_scenes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ntf_new_scenes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_ns2xs_ntf_new_scenes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(scene_ns2xs_ntf_new_scenes));
  scene_xs2xs_req_connection_descriptor_ = file->message_type(3);
  static const int scene_xs2xs_req_connection_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_req_connection, srv_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_req_connection, srv_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_req_connection, srv_addr_),
  };
  scene_xs2xs_req_connection_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      scene_xs2xs_req_connection_descriptor_,
      scene_xs2xs_req_connection::default_instance_,
      scene_xs2xs_req_connection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_req_connection, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_req_connection, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(scene_xs2xs_req_connection));
  scene_xs2xs_ack_connection_descriptor_ = file->message_type(4);
  static const int scene_xs2xs_ack_connection_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_ack_connection, srv_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_ack_connection, srv_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_ack_connection, srv_addr_),
  };
  scene_xs2xs_ack_connection_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      scene_xs2xs_ack_connection_descriptor_,
      scene_xs2xs_ack_connection::default_instance_,
      scene_xs2xs_ack_connection_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_ack_connection, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(scene_xs2xs_ack_connection, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(scene_xs2xs_ack_connection));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_msg_5fscene_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    scene_xs2ns_req_online_scenes_descriptor_, &scene_xs2ns_req_online_scenes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    scene_ns2xs_ack_online_scenes_descriptor_, &scene_ns2xs_ack_online_scenes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    scene_ns2xs_ntf_new_scenes_descriptor_, &scene_ns2xs_ntf_new_scenes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    scene_xs2xs_req_connection_descriptor_, &scene_xs2xs_req_connection::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    scene_xs2xs_ack_connection_descriptor_, &scene_xs2xs_ack_connection::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_msg_5fscene_2eproto() {
  delete scene_xs2ns_req_online_scenes::default_instance_;
  delete scene_xs2ns_req_online_scenes_reflection_;
  delete scene_ns2xs_ack_online_scenes::default_instance_;
  delete scene_ns2xs_ack_online_scenes_reflection_;
  delete scene_ns2xs_ntf_new_scenes::default_instance_;
  delete scene_ns2xs_ntf_new_scenes_reflection_;
  delete scene_xs2xs_req_connection::default_instance_;
  delete scene_xs2xs_req_connection_reflection_;
  delete scene_xs2xs_ack_connection::default_instance_;
  delete scene_xs2xs_ack_connection_reflection_;
}

void protobuf_AddDesc_msg_5fscene_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017msg_scene.proto\"S\n\035scene_xs2ns_req_onl"
    "ine_scenes\022\020\n\010srv_type\030\001 \001(\t\022\016\n\006srv_id\030\002"
    " \001(\t\022\020\n\010srv_addr\030\003 \001(\t\"V\n\035scene_ns2xs_ac"
    "k_online_scenes\022\021\n\tsrv_types\030\001 \003(\t\022\017\n\007sr"
    "v_ids\030\002 \003(\t\022\021\n\tsrv_addrs\030\003 \003(\t\"S\n\032scene_"
    "ns2xs_ntf_new_scenes\022\021\n\tsrv_types\030\001 \003(\t\022"
    "\017\n\007srv_ids\030\002 \003(\t\022\021\n\tsrv_addrs\030\003 \003(\t\"P\n\032s"
    "cene_xs2xs_req_connection\022\020\n\010srv_type\030\001 "
    "\001(\t\022\016\n\006srv_id\030\002 \001(\t\022\020\n\010srv_addr\030\003 \001(\t\"P\n"
    "\032scene_xs2xs_ack_connection\022\020\n\010srv_type\030"
    "\001 \001(\t\022\016\n\006srv_id\030\002 \001(\t\022\020\n\010srv_addr\030\003 \001(\t", 439);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "msg_scene.proto", &protobuf_RegisterTypes);
  scene_xs2ns_req_online_scenes::default_instance_ = new scene_xs2ns_req_online_scenes();
  scene_ns2xs_ack_online_scenes::default_instance_ = new scene_ns2xs_ack_online_scenes();
  scene_ns2xs_ntf_new_scenes::default_instance_ = new scene_ns2xs_ntf_new_scenes();
  scene_xs2xs_req_connection::default_instance_ = new scene_xs2xs_req_connection();
  scene_xs2xs_ack_connection::default_instance_ = new scene_xs2xs_ack_connection();
  scene_xs2ns_req_online_scenes::default_instance_->InitAsDefaultInstance();
  scene_ns2xs_ack_online_scenes::default_instance_->InitAsDefaultInstance();
  scene_ns2xs_ntf_new_scenes::default_instance_->InitAsDefaultInstance();
  scene_xs2xs_req_connection::default_instance_->InitAsDefaultInstance();
  scene_xs2xs_ack_connection::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_msg_5fscene_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_msg_5fscene_2eproto {
  StaticDescriptorInitializer_msg_5fscene_2eproto() {
    protobuf_AddDesc_msg_5fscene_2eproto();
  }
} static_descriptor_initializer_msg_5fscene_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int scene_xs2ns_req_online_scenes::kSrvTypeFieldNumber;
const int scene_xs2ns_req_online_scenes::kSrvIdFieldNumber;
const int scene_xs2ns_req_online_scenes::kSrvAddrFieldNumber;
#endif  // !_MSC_VER

scene_xs2ns_req_online_scenes::scene_xs2ns_req_online_scenes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scene_xs2ns_req_online_scenes)
}

void scene_xs2ns_req_online_scenes::InitAsDefaultInstance() {
}

scene_xs2ns_req_online_scenes::scene_xs2ns_req_online_scenes(const scene_xs2ns_req_online_scenes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scene_xs2ns_req_online_scenes)
}

void scene_xs2ns_req_online_scenes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srv_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

scene_xs2ns_req_online_scenes::~scene_xs2ns_req_online_scenes() {
  // @@protoc_insertion_point(destructor:scene_xs2ns_req_online_scenes)
  SharedDtor();
}

void scene_xs2ns_req_online_scenes::SharedDtor() {
  if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_type_;
  }
  if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_id_;
  }
  if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_addr_;
  }
  if (this != default_instance_) {
  }
}

void scene_xs2ns_req_online_scenes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scene_xs2ns_req_online_scenes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scene_xs2ns_req_online_scenes_descriptor_;
}

const scene_xs2ns_req_online_scenes& scene_xs2ns_req_online_scenes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fscene_2eproto();
  return *default_instance_;
}

scene_xs2ns_req_online_scenes* scene_xs2ns_req_online_scenes::default_instance_ = NULL;

scene_xs2ns_req_online_scenes* scene_xs2ns_req_online_scenes::New() const {
  return new scene_xs2ns_req_online_scenes;
}

void scene_xs2ns_req_online_scenes::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_srv_type()) {
      if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_type_->clear();
      }
    }
    if (has_srv_id()) {
      if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_id_->clear();
      }
    }
    if (has_srv_addr()) {
      if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_addr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool scene_xs2ns_req_online_scenes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scene_xs2ns_req_online_scenes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string srv_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_type().data(), this->srv_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srv_id;
        break;
      }

      // optional string srv_id = 2;
      case 2: {
        if (tag == 18) {
         parse_srv_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_id().data(), this->srv_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_srv_addr;
        break;
      }

      // optional string srv_addr = 3;
      case 3: {
        if (tag == 26) {
         parse_srv_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_addr().data(), this->srv_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scene_xs2ns_req_online_scenes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scene_xs2ns_req_online_scenes)
  return false;
#undef DO_
}

void scene_xs2ns_req_online_scenes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scene_xs2ns_req_online_scenes)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srv_type(), output);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srv_id(), output);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->srv_addr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scene_xs2ns_req_online_scenes)
}

::google::protobuf::uint8* scene_xs2ns_req_online_scenes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scene_xs2ns_req_online_scenes)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srv_type(), target);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srv_id(), target);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->srv_addr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scene_xs2ns_req_online_scenes)
  return target;
}

int scene_xs2ns_req_online_scenes::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string srv_type = 1;
    if (has_srv_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_type());
    }

    // optional string srv_id = 2;
    if (has_srv_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_id());
    }

    // optional string srv_addr = 3;
    if (has_srv_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_addr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scene_xs2ns_req_online_scenes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const scene_xs2ns_req_online_scenes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const scene_xs2ns_req_online_scenes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void scene_xs2ns_req_online_scenes::MergeFrom(const scene_xs2ns_req_online_scenes& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srv_type()) {
      set_srv_type(from.srv_type());
    }
    if (from.has_srv_id()) {
      set_srv_id(from.srv_id());
    }
    if (from.has_srv_addr()) {
      set_srv_addr(from.srv_addr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void scene_xs2ns_req_online_scenes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scene_xs2ns_req_online_scenes::CopyFrom(const scene_xs2ns_req_online_scenes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool scene_xs2ns_req_online_scenes::IsInitialized() const {

  return true;
}

void scene_xs2ns_req_online_scenes::Swap(scene_xs2ns_req_online_scenes* other) {
  if (other != this) {
    std::swap(srv_type_, other->srv_type_);
    std::swap(srv_id_, other->srv_id_);
    std::swap(srv_addr_, other->srv_addr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata scene_xs2ns_req_online_scenes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scene_xs2ns_req_online_scenes_descriptor_;
  metadata.reflection = scene_xs2ns_req_online_scenes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int scene_ns2xs_ack_online_scenes::kSrvTypesFieldNumber;
const int scene_ns2xs_ack_online_scenes::kSrvIdsFieldNumber;
const int scene_ns2xs_ack_online_scenes::kSrvAddrsFieldNumber;
#endif  // !_MSC_VER

scene_ns2xs_ack_online_scenes::scene_ns2xs_ack_online_scenes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scene_ns2xs_ack_online_scenes)
}

void scene_ns2xs_ack_online_scenes::InitAsDefaultInstance() {
}

scene_ns2xs_ack_online_scenes::scene_ns2xs_ack_online_scenes(const scene_ns2xs_ack_online_scenes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scene_ns2xs_ack_online_scenes)
}

void scene_ns2xs_ack_online_scenes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

scene_ns2xs_ack_online_scenes::~scene_ns2xs_ack_online_scenes() {
  // @@protoc_insertion_point(destructor:scene_ns2xs_ack_online_scenes)
  SharedDtor();
}

void scene_ns2xs_ack_online_scenes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void scene_ns2xs_ack_online_scenes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scene_ns2xs_ack_online_scenes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scene_ns2xs_ack_online_scenes_descriptor_;
}

const scene_ns2xs_ack_online_scenes& scene_ns2xs_ack_online_scenes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fscene_2eproto();
  return *default_instance_;
}

scene_ns2xs_ack_online_scenes* scene_ns2xs_ack_online_scenes::default_instance_ = NULL;

scene_ns2xs_ack_online_scenes* scene_ns2xs_ack_online_scenes::New() const {
  return new scene_ns2xs_ack_online_scenes;
}

void scene_ns2xs_ack_online_scenes::Clear() {
  srv_types_.Clear();
  srv_ids_.Clear();
  srv_addrs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool scene_ns2xs_ack_online_scenes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scene_ns2xs_ack_online_scenes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string srv_types = 1;
      case 1: {
        if (tag == 10) {
         parse_srv_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_types(this->srv_types_size() - 1).data(),
            this->srv_types(this->srv_types_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_types");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_srv_types;
        if (input->ExpectTag(18)) goto parse_srv_ids;
        break;
      }

      // repeated string srv_ids = 2;
      case 2: {
        if (tag == 18) {
         parse_srv_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_ids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_ids(this->srv_ids_size() - 1).data(),
            this->srv_ids(this->srv_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_ids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srv_ids;
        if (input->ExpectTag(26)) goto parse_srv_addrs;
        break;
      }

      // repeated string srv_addrs = 3;
      case 3: {
        if (tag == 26) {
         parse_srv_addrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_addrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_addrs(this->srv_addrs_size() - 1).data(),
            this->srv_addrs(this->srv_addrs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_addrs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_srv_addrs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scene_ns2xs_ack_online_scenes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scene_ns2xs_ack_online_scenes)
  return false;
#undef DO_
}

void scene_ns2xs_ack_online_scenes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scene_ns2xs_ack_online_scenes)
  // repeated string srv_types = 1;
  for (int i = 0; i < this->srv_types_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_types(i).data(), this->srv_types(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->srv_types(i), output);
  }

  // repeated string srv_ids = 2;
  for (int i = 0; i < this->srv_ids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_ids(i).data(), this->srv_ids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->srv_ids(i), output);
  }

  // repeated string srv_addrs = 3;
  for (int i = 0; i < this->srv_addrs_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_addrs(i).data(), this->srv_addrs(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_addrs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->srv_addrs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scene_ns2xs_ack_online_scenes)
}

::google::protobuf::uint8* scene_ns2xs_ack_online_scenes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scene_ns2xs_ack_online_scenes)
  // repeated string srv_types = 1;
  for (int i = 0; i < this->srv_types_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_types(i).data(), this->srv_types(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->srv_types(i), target);
  }

  // repeated string srv_ids = 2;
  for (int i = 0; i < this->srv_ids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_ids(i).data(), this->srv_ids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->srv_ids(i), target);
  }

  // repeated string srv_addrs = 3;
  for (int i = 0; i < this->srv_addrs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addrs(i).data(), this->srv_addrs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addrs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->srv_addrs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scene_ns2xs_ack_online_scenes)
  return target;
}

int scene_ns2xs_ack_online_scenes::ByteSize() const {
  int total_size = 0;

  // repeated string srv_types = 1;
  total_size += 1 * this->srv_types_size();
  for (int i = 0; i < this->srv_types_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_types(i));
  }

  // repeated string srv_ids = 2;
  total_size += 1 * this->srv_ids_size();
  for (int i = 0; i < this->srv_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_ids(i));
  }

  // repeated string srv_addrs = 3;
  total_size += 1 * this->srv_addrs_size();
  for (int i = 0; i < this->srv_addrs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_addrs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scene_ns2xs_ack_online_scenes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const scene_ns2xs_ack_online_scenes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const scene_ns2xs_ack_online_scenes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void scene_ns2xs_ack_online_scenes::MergeFrom(const scene_ns2xs_ack_online_scenes& from) {
  GOOGLE_CHECK_NE(&from, this);
  srv_types_.MergeFrom(from.srv_types_);
  srv_ids_.MergeFrom(from.srv_ids_);
  srv_addrs_.MergeFrom(from.srv_addrs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void scene_ns2xs_ack_online_scenes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scene_ns2xs_ack_online_scenes::CopyFrom(const scene_ns2xs_ack_online_scenes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool scene_ns2xs_ack_online_scenes::IsInitialized() const {

  return true;
}

void scene_ns2xs_ack_online_scenes::Swap(scene_ns2xs_ack_online_scenes* other) {
  if (other != this) {
    srv_types_.Swap(&other->srv_types_);
    srv_ids_.Swap(&other->srv_ids_);
    srv_addrs_.Swap(&other->srv_addrs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata scene_ns2xs_ack_online_scenes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scene_ns2xs_ack_online_scenes_descriptor_;
  metadata.reflection = scene_ns2xs_ack_online_scenes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int scene_ns2xs_ntf_new_scenes::kSrvTypesFieldNumber;
const int scene_ns2xs_ntf_new_scenes::kSrvIdsFieldNumber;
const int scene_ns2xs_ntf_new_scenes::kSrvAddrsFieldNumber;
#endif  // !_MSC_VER

scene_ns2xs_ntf_new_scenes::scene_ns2xs_ntf_new_scenes()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scene_ns2xs_ntf_new_scenes)
}

void scene_ns2xs_ntf_new_scenes::InitAsDefaultInstance() {
}

scene_ns2xs_ntf_new_scenes::scene_ns2xs_ntf_new_scenes(const scene_ns2xs_ntf_new_scenes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scene_ns2xs_ntf_new_scenes)
}

void scene_ns2xs_ntf_new_scenes::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

scene_ns2xs_ntf_new_scenes::~scene_ns2xs_ntf_new_scenes() {
  // @@protoc_insertion_point(destructor:scene_ns2xs_ntf_new_scenes)
  SharedDtor();
}

void scene_ns2xs_ntf_new_scenes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void scene_ns2xs_ntf_new_scenes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scene_ns2xs_ntf_new_scenes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scene_ns2xs_ntf_new_scenes_descriptor_;
}

const scene_ns2xs_ntf_new_scenes& scene_ns2xs_ntf_new_scenes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fscene_2eproto();
  return *default_instance_;
}

scene_ns2xs_ntf_new_scenes* scene_ns2xs_ntf_new_scenes::default_instance_ = NULL;

scene_ns2xs_ntf_new_scenes* scene_ns2xs_ntf_new_scenes::New() const {
  return new scene_ns2xs_ntf_new_scenes;
}

void scene_ns2xs_ntf_new_scenes::Clear() {
  srv_types_.Clear();
  srv_ids_.Clear();
  srv_addrs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool scene_ns2xs_ntf_new_scenes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scene_ns2xs_ntf_new_scenes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string srv_types = 1;
      case 1: {
        if (tag == 10) {
         parse_srv_types:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_types()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_types(this->srv_types_size() - 1).data(),
            this->srv_types(this->srv_types_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_types");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_srv_types;
        if (input->ExpectTag(18)) goto parse_srv_ids;
        break;
      }

      // repeated string srv_ids = 2;
      case 2: {
        if (tag == 18) {
         parse_srv_ids:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_ids()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_ids(this->srv_ids_size() - 1).data(),
            this->srv_ids(this->srv_ids_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_ids");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srv_ids;
        if (input->ExpectTag(26)) goto parse_srv_addrs;
        break;
      }

      // repeated string srv_addrs = 3;
      case 3: {
        if (tag == 26) {
         parse_srv_addrs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_srv_addrs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_addrs(this->srv_addrs_size() - 1).data(),
            this->srv_addrs(this->srv_addrs_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_addrs");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_srv_addrs;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scene_ns2xs_ntf_new_scenes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scene_ns2xs_ntf_new_scenes)
  return false;
#undef DO_
}

void scene_ns2xs_ntf_new_scenes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scene_ns2xs_ntf_new_scenes)
  // repeated string srv_types = 1;
  for (int i = 0; i < this->srv_types_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_types(i).data(), this->srv_types(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_types");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->srv_types(i), output);
  }

  // repeated string srv_ids = 2;
  for (int i = 0; i < this->srv_ids_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_ids(i).data(), this->srv_ids(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_ids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->srv_ids(i), output);
  }

  // repeated string srv_addrs = 3;
  for (int i = 0; i < this->srv_addrs_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
    this->srv_addrs(i).data(), this->srv_addrs(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE,
    "srv_addrs");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->srv_addrs(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scene_ns2xs_ntf_new_scenes)
}

::google::protobuf::uint8* scene_ns2xs_ntf_new_scenes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scene_ns2xs_ntf_new_scenes)
  // repeated string srv_types = 1;
  for (int i = 0; i < this->srv_types_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_types(i).data(), this->srv_types(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_types");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->srv_types(i), target);
  }

  // repeated string srv_ids = 2;
  for (int i = 0; i < this->srv_ids_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_ids(i).data(), this->srv_ids(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_ids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->srv_ids(i), target);
  }

  // repeated string srv_addrs = 3;
  for (int i = 0; i < this->srv_addrs_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addrs(i).data(), this->srv_addrs(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addrs");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->srv_addrs(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scene_ns2xs_ntf_new_scenes)
  return target;
}

int scene_ns2xs_ntf_new_scenes::ByteSize() const {
  int total_size = 0;

  // repeated string srv_types = 1;
  total_size += 1 * this->srv_types_size();
  for (int i = 0; i < this->srv_types_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_types(i));
  }

  // repeated string srv_ids = 2;
  total_size += 1 * this->srv_ids_size();
  for (int i = 0; i < this->srv_ids_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_ids(i));
  }

  // repeated string srv_addrs = 3;
  total_size += 1 * this->srv_addrs_size();
  for (int i = 0; i < this->srv_addrs_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->srv_addrs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scene_ns2xs_ntf_new_scenes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const scene_ns2xs_ntf_new_scenes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const scene_ns2xs_ntf_new_scenes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void scene_ns2xs_ntf_new_scenes::MergeFrom(const scene_ns2xs_ntf_new_scenes& from) {
  GOOGLE_CHECK_NE(&from, this);
  srv_types_.MergeFrom(from.srv_types_);
  srv_ids_.MergeFrom(from.srv_ids_);
  srv_addrs_.MergeFrom(from.srv_addrs_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void scene_ns2xs_ntf_new_scenes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scene_ns2xs_ntf_new_scenes::CopyFrom(const scene_ns2xs_ntf_new_scenes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool scene_ns2xs_ntf_new_scenes::IsInitialized() const {

  return true;
}

void scene_ns2xs_ntf_new_scenes::Swap(scene_ns2xs_ntf_new_scenes* other) {
  if (other != this) {
    srv_types_.Swap(&other->srv_types_);
    srv_ids_.Swap(&other->srv_ids_);
    srv_addrs_.Swap(&other->srv_addrs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata scene_ns2xs_ntf_new_scenes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scene_ns2xs_ntf_new_scenes_descriptor_;
  metadata.reflection = scene_ns2xs_ntf_new_scenes_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int scene_xs2xs_req_connection::kSrvTypeFieldNumber;
const int scene_xs2xs_req_connection::kSrvIdFieldNumber;
const int scene_xs2xs_req_connection::kSrvAddrFieldNumber;
#endif  // !_MSC_VER

scene_xs2xs_req_connection::scene_xs2xs_req_connection()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scene_xs2xs_req_connection)
}

void scene_xs2xs_req_connection::InitAsDefaultInstance() {
}

scene_xs2xs_req_connection::scene_xs2xs_req_connection(const scene_xs2xs_req_connection& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scene_xs2xs_req_connection)
}

void scene_xs2xs_req_connection::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srv_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

scene_xs2xs_req_connection::~scene_xs2xs_req_connection() {
  // @@protoc_insertion_point(destructor:scene_xs2xs_req_connection)
  SharedDtor();
}

void scene_xs2xs_req_connection::SharedDtor() {
  if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_type_;
  }
  if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_id_;
  }
  if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_addr_;
  }
  if (this != default_instance_) {
  }
}

void scene_xs2xs_req_connection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scene_xs2xs_req_connection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scene_xs2xs_req_connection_descriptor_;
}

const scene_xs2xs_req_connection& scene_xs2xs_req_connection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fscene_2eproto();
  return *default_instance_;
}

scene_xs2xs_req_connection* scene_xs2xs_req_connection::default_instance_ = NULL;

scene_xs2xs_req_connection* scene_xs2xs_req_connection::New() const {
  return new scene_xs2xs_req_connection;
}

void scene_xs2xs_req_connection::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_srv_type()) {
      if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_type_->clear();
      }
    }
    if (has_srv_id()) {
      if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_id_->clear();
      }
    }
    if (has_srv_addr()) {
      if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_addr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool scene_xs2xs_req_connection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scene_xs2xs_req_connection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string srv_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_type().data(), this->srv_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srv_id;
        break;
      }

      // optional string srv_id = 2;
      case 2: {
        if (tag == 18) {
         parse_srv_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_id().data(), this->srv_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_srv_addr;
        break;
      }

      // optional string srv_addr = 3;
      case 3: {
        if (tag == 26) {
         parse_srv_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_addr().data(), this->srv_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scene_xs2xs_req_connection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scene_xs2xs_req_connection)
  return false;
#undef DO_
}

void scene_xs2xs_req_connection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scene_xs2xs_req_connection)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srv_type(), output);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srv_id(), output);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->srv_addr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scene_xs2xs_req_connection)
}

::google::protobuf::uint8* scene_xs2xs_req_connection::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scene_xs2xs_req_connection)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srv_type(), target);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srv_id(), target);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->srv_addr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scene_xs2xs_req_connection)
  return target;
}

int scene_xs2xs_req_connection::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string srv_type = 1;
    if (has_srv_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_type());
    }

    // optional string srv_id = 2;
    if (has_srv_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_id());
    }

    // optional string srv_addr = 3;
    if (has_srv_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_addr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scene_xs2xs_req_connection::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const scene_xs2xs_req_connection* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const scene_xs2xs_req_connection*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void scene_xs2xs_req_connection::MergeFrom(const scene_xs2xs_req_connection& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srv_type()) {
      set_srv_type(from.srv_type());
    }
    if (from.has_srv_id()) {
      set_srv_id(from.srv_id());
    }
    if (from.has_srv_addr()) {
      set_srv_addr(from.srv_addr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void scene_xs2xs_req_connection::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scene_xs2xs_req_connection::CopyFrom(const scene_xs2xs_req_connection& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool scene_xs2xs_req_connection::IsInitialized() const {

  return true;
}

void scene_xs2xs_req_connection::Swap(scene_xs2xs_req_connection* other) {
  if (other != this) {
    std::swap(srv_type_, other->srv_type_);
    std::swap(srv_id_, other->srv_id_);
    std::swap(srv_addr_, other->srv_addr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata scene_xs2xs_req_connection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scene_xs2xs_req_connection_descriptor_;
  metadata.reflection = scene_xs2xs_req_connection_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int scene_xs2xs_ack_connection::kSrvTypeFieldNumber;
const int scene_xs2xs_ack_connection::kSrvIdFieldNumber;
const int scene_xs2xs_ack_connection::kSrvAddrFieldNumber;
#endif  // !_MSC_VER

scene_xs2xs_ack_connection::scene_xs2xs_ack_connection()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:scene_xs2xs_ack_connection)
}

void scene_xs2xs_ack_connection::InitAsDefaultInstance() {
}

scene_xs2xs_ack_connection::scene_xs2xs_ack_connection(const scene_xs2xs_ack_connection& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:scene_xs2xs_ack_connection)
}

void scene_xs2xs_ack_connection::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  srv_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  srv_addr_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

scene_xs2xs_ack_connection::~scene_xs2xs_ack_connection() {
  // @@protoc_insertion_point(destructor:scene_xs2xs_ack_connection)
  SharedDtor();
}

void scene_xs2xs_ack_connection::SharedDtor() {
  if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_type_;
  }
  if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_id_;
  }
  if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete srv_addr_;
  }
  if (this != default_instance_) {
  }
}

void scene_xs2xs_ack_connection::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* scene_xs2xs_ack_connection::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return scene_xs2xs_ack_connection_descriptor_;
}

const scene_xs2xs_ack_connection& scene_xs2xs_ack_connection::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_msg_5fscene_2eproto();
  return *default_instance_;
}

scene_xs2xs_ack_connection* scene_xs2xs_ack_connection::default_instance_ = NULL;

scene_xs2xs_ack_connection* scene_xs2xs_ack_connection::New() const {
  return new scene_xs2xs_ack_connection;
}

void scene_xs2xs_ack_connection::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_srv_type()) {
      if (srv_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_type_->clear();
      }
    }
    if (has_srv_id()) {
      if (srv_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_id_->clear();
      }
    }
    if (has_srv_addr()) {
      if (srv_addr_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        srv_addr_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool scene_xs2xs_ack_connection::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:scene_xs2xs_ack_connection)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string srv_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_type().data(), this->srv_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_type");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_srv_id;
        break;
      }

      // optional string srv_id = 2;
      case 2: {
        if (tag == 18) {
         parse_srv_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_id().data(), this->srv_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_id");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_srv_addr;
        break;
      }

      // optional string srv_addr = 3;
      case 3: {
        if (tag == 26) {
         parse_srv_addr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_srv_addr()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->srv_addr().data(), this->srv_addr().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "srv_addr");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:scene_xs2xs_ack_connection)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:scene_xs2xs_ack_connection)
  return false;
#undef DO_
}

void scene_xs2xs_ack_connection::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:scene_xs2xs_ack_connection)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->srv_type(), output);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->srv_id(), output);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->srv_addr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:scene_xs2xs_ack_connection)
}

::google::protobuf::uint8* scene_xs2xs_ack_connection::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:scene_xs2xs_ack_connection)
  // optional string srv_type = 1;
  if (has_srv_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_type().data(), this->srv_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->srv_type(), target);
  }

  // optional string srv_id = 2;
  if (has_srv_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_id().data(), this->srv_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->srv_id(), target);
  }

  // optional string srv_addr = 3;
  if (has_srv_addr()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->srv_addr().data(), this->srv_addr().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "srv_addr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->srv_addr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scene_xs2xs_ack_connection)
  return target;
}

int scene_xs2xs_ack_connection::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string srv_type = 1;
    if (has_srv_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_type());
    }

    // optional string srv_id = 2;
    if (has_srv_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_id());
    }

    // optional string srv_addr = 3;
    if (has_srv_addr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->srv_addr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void scene_xs2xs_ack_connection::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const scene_xs2xs_ack_connection* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const scene_xs2xs_ack_connection*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void scene_xs2xs_ack_connection::MergeFrom(const scene_xs2xs_ack_connection& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srv_type()) {
      set_srv_type(from.srv_type());
    }
    if (from.has_srv_id()) {
      set_srv_id(from.srv_id());
    }
    if (from.has_srv_addr()) {
      set_srv_addr(from.srv_addr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void scene_xs2xs_ack_connection::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void scene_xs2xs_ack_connection::CopyFrom(const scene_xs2xs_ack_connection& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool scene_xs2xs_ack_connection::IsInitialized() const {

  return true;
}

void scene_xs2xs_ack_connection::Swap(scene_xs2xs_ack_connection* other) {
  if (other != this) {
    std::swap(srv_type_, other->srv_type_);
    std::swap(srv_id_, other->srv_id_);
    std::swap(srv_addr_, other->srv_addr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata scene_xs2xs_ack_connection::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = scene_xs2xs_ack_connection_descriptor_;
  metadata.reflection = scene_xs2xs_ack_connection_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
