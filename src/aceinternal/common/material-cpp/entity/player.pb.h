// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: entity/player.proto

#ifndef PROTOBUF_entity_2fplayer_2eproto__INCLUDED
#define PROTOBUF_entity_2fplayer_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace typed {
namespace entity {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_entity_2fplayer_2eproto();
void protobuf_AssignDesc_entity_2fplayer_2eproto();
void protobuf_ShutdownFile_entity_2fplayer_2eproto();

class Player;
class Role;
class Coin;

// ===================================================================

class Player : public ::google::protobuf::Message {
 public:
  Player();
  virtual ~Player();

  Player(const Player& from);

  inline Player& operator=(const Player& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Player& default_instance();

  void Swap(Player* other);

  // implements Message ----------------------------------------------

  Player* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Player& from);
  void MergeFrom(const Player& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 4;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 4;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 profession = 6;
  inline bool has_profession() const;
  inline void clear_profession();
  static const int kProfessionFieldNumber = 6;
  inline ::google::protobuf::uint32 profession() const;
  inline void set_profession(::google::protobuf::uint32 value);

  // optional uint32 money = 7;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 7;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // optional uint32 coin = 8;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 8;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional int32 src_x = 9;
  inline bool has_src_x() const;
  inline void clear_src_x();
  static const int kSrcXFieldNumber = 9;
  inline ::google::protobuf::int32 src_x() const;
  inline void set_src_x(::google::protobuf::int32 value);

  // optional int32 src_y = 10;
  inline bool has_src_y() const;
  inline void clear_src_y();
  static const int kSrcYFieldNumber = 10;
  inline ::google::protobuf::int32 src_y() const;
  inline void set_src_y(::google::protobuf::int32 value);

  // optional int32 dst_x = 11;
  inline bool has_dst_x() const;
  inline void clear_dst_x();
  static const int kDstXFieldNumber = 11;
  inline ::google::protobuf::int32 dst_x() const;
  inline void set_dst_x(::google::protobuf::int32 value);

  // optional int32 dst_y = 12;
  inline bool has_dst_y() const;
  inline void clear_dst_y();
  static const int kDstYFieldNumber = 12;
  inline ::google::protobuf::int32 dst_y() const;
  inline void set_dst_y(::google::protobuf::int32 value);

  // optional uint32 seniority = 13;
  inline bool has_seniority() const;
  inline void clear_seniority();
  static const int kSeniorityFieldNumber = 13;
  inline ::google::protobuf::uint32 seniority() const;
  inline void set_seniority(::google::protobuf::uint32 value);

  // optional uint32 vip_level = 14;
  inline bool has_vip_level() const;
  inline void clear_vip_level();
  static const int kVipLevelFieldNumber = 14;
  inline ::google::protobuf::uint32 vip_level() const;
  inline void set_vip_level(::google::protobuf::uint32 value);

  // optional uint32 coin_exp = 15;
  inline bool has_coin_exp() const;
  inline void clear_coin_exp();
  static const int kCoinExpFieldNumber = 15;
  inline ::google::protobuf::uint32 coin_exp() const;
  inline void set_coin_exp(::google::protobuf::uint32 value);

  // optional uint32 prestige = 16;
  inline bool has_prestige() const;
  inline void clear_prestige();
  static const int kPrestigeFieldNumber = 16;
  inline ::google::protobuf::uint32 prestige() const;
  inline void set_prestige(::google::protobuf::uint32 value);

  // optional uint32 energy = 17;
  inline bool has_energy() const;
  inline void clear_energy();
  static const int kEnergyFieldNumber = 17;
  inline ::google::protobuf::uint32 energy() const;
  inline void set_energy(::google::protobuf::uint32 value);

  // optional uint32 power = 18;
  inline bool has_power() const;
  inline void clear_power();
  static const int kPowerFieldNumber = 18;
  inline ::google::protobuf::uint32 power() const;
  inline void set_power(::google::protobuf::uint32 value);

  // optional uint32 training_slot = 19;
  inline bool has_training_slot() const;
  inline void clear_training_slot();
  static const int kTrainingSlotFieldNumber = 19;
  inline ::google::protobuf::uint32 training_slot() const;
  inline void set_training_slot(::google::protobuf::uint32 value);

  // optional uint32 member_slot = 20;
  inline bool has_member_slot() const;
  inline void clear_member_slot();
  static const int kMemberSlotFieldNumber = 20;
  inline ::google::protobuf::uint32 member_slot() const;
  inline void set_member_slot(::google::protobuf::uint32 value);

  // optional uint32 map_id = 21;
  inline bool has_map_id() const;
  inline void clear_map_id();
  static const int kMapIdFieldNumber = 21;
  inline ::google::protobuf::uint32 map_id() const;
  inline void set_map_id(::google::protobuf::uint32 value);

  // optional uint32 line_no = 22;
  inline bool has_line_no() const;
  inline void clear_line_no();
  static const int kLineNoFieldNumber = 22;
  inline ::google::protobuf::uint32 line_no() const;
  inline void set_line_no(::google::protobuf::uint32 value);

  // optional uint64 stage = 23;
  inline bool has_stage() const;
  inline void clear_stage();
  static const int kStageFieldNumber = 23;
  inline ::google::protobuf::uint64 stage() const;
  inline void set_stage(::google::protobuf::uint64 value);

  // optional int32 direction = 24;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 24;
  inline ::google::protobuf::int32 direction() const;
  inline void set_direction(::google::protobuf::int32 value);

  // optional uint64 form = 25;
  inline bool has_form() const;
  inline void clear_form();
  static const int kFormFieldNumber = 25;
  inline ::google::protobuf::uint64 form() const;
  inline void set_form(::google::protobuf::uint64 value);

  // optional uint32 rank = 26;
  inline bool has_rank() const;
  inline void clear_rank();
  static const int kRankFieldNumber = 26;
  inline ::google::protobuf::uint32 rank() const;
  inline void set_rank(::google::protobuf::uint32 value);

  // optional uint64 guild = 27;
  inline bool has_guild() const;
  inline void clear_guild();
  static const int kGuildFieldNumber = 27;
  inline ::google::protobuf::uint64 guild() const;
  inline void set_guild(::google::protobuf::uint64 value);

  // optional string guild_name = 28;
  inline bool has_guild_name() const;
  inline void clear_guild_name();
  static const int kGuildNameFieldNumber = 28;
  inline const ::std::string& guild_name() const;
  inline void set_guild_name(const ::std::string& value);
  inline void set_guild_name(const char* value);
  inline void set_guild_name(const char* value, size_t size);
  inline ::std::string* mutable_guild_name();
  inline ::std::string* release_guild_name();
  inline void set_allocated_guild_name(::std::string* guild_name);

  // repeated uint32 wonder_skill = 29;
  inline int wonder_skill_size() const;
  inline void clear_wonder_skill();
  static const int kWonderSkillFieldNumber = 29;
  inline ::google::protobuf::uint32 wonder_skill(int index) const;
  inline void set_wonder_skill(int index, ::google::protobuf::uint32 value);
  inline void add_wonder_skill(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      wonder_skill() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_wonder_skill();

  // repeated uint64 buffers = 30;
  inline int buffers_size() const;
  inline void clear_buffers();
  static const int kBuffersFieldNumber = 30;
  inline ::google::protobuf::uint64 buffers(int index) const;
  inline void set_buffers(int index, ::google::protobuf::uint64 value);
  inline void add_buffers(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      buffers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_buffers();

  // repeated uint64 roles = 31;
  inline int roles_size() const;
  inline void clear_roles();
  static const int kRolesFieldNumber = 31;
  inline ::google::protobuf::uint64 roles(int index) const;
  inline void set_roles(int index, ::google::protobuf::uint64 value);
  inline void add_roles(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      roles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_roles();

  // repeated uint64 bag = 32;
  inline int bag_size() const;
  inline void clear_bag();
  static const int kBagFieldNumber = 32;
  inline ::google::protobuf::uint64 bag(int index) const;
  inline void set_bag(int index, ::google::protobuf::uint64 value);
  inline void add_bag(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      bag() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_bag();

  // repeated uint64 storehouse = 33;
  inline int storehouse_size() const;
  inline void clear_storehouse();
  static const int kStorehouseFieldNumber = 33;
  inline ::google::protobuf::uint64 storehouse(int index) const;
  inline void set_storehouse(int index, ::google::protobuf::uint64 value);
  inline void add_storehouse(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      storehouse() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_storehouse();

  // repeated uint32 hunt_master_state = 34;
  inline int hunt_master_state_size() const;
  inline void clear_hunt_master_state();
  static const int kHuntMasterStateFieldNumber = 34;
  inline ::google::protobuf::uint32 hunt_master_state(int index) const;
  inline void set_hunt_master_state(int index, ::google::protobuf::uint32 value);
  inline void add_hunt_master_state(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      hunt_master_state() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_hunt_master_state();

  // repeated uint32 can_recruit_roles = 35;
  inline int can_recruit_roles_size() const;
  inline void clear_can_recruit_roles();
  static const int kCanRecruitRolesFieldNumber = 35;
  inline ::google::protobuf::uint32 can_recruit_roles(int index) const;
  inline void set_can_recruit_roles(int index, ::google::protobuf::uint32 value);
  inline void add_can_recruit_roles(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      can_recruit_roles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_can_recruit_roles();

  // repeated uint64 leave_team_roles = 36;
  inline int leave_team_roles_size() const;
  inline void clear_leave_team_roles();
  static const int kLeaveTeamRolesFieldNumber = 36;
  inline ::google::protobuf::uint64 leave_team_roles(int index) const;
  inline void set_leave_team_roles(int index, ::google::protobuf::uint64 value);
  inline void add_leave_team_roles(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      leave_team_roles() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_leave_team_roles();

  // optional uint64 sect = 37;
  inline bool has_sect() const;
  inline void clear_sect();
  static const int kSectFieldNumber = 37;
  inline ::google::protobuf::uint64 sect() const;
  inline void set_sect(::google::protobuf::uint64 value);

  // optional uint64 law = 38;
  inline bool has_law() const;
  inline void clear_law();
  static const int kLawFieldNumber = 38;
  inline ::google::protobuf::uint64 law() const;
  inline void set_law(::google::protobuf::uint64 value);

  // optional uint32 sthen_will_succ = 39;
  inline bool has_sthen_will_succ() const;
  inline void clear_sthen_will_succ();
  static const int kSthenWillSuccFieldNumber = 39;
  inline ::google::protobuf::uint32 sthen_will_succ() const;
  inline void set_sthen_will_succ(::google::protobuf::uint32 value);

  // repeated uint64 sthen_queue_stamp = 40;
  inline int sthen_queue_stamp_size() const;
  inline void clear_sthen_queue_stamp();
  static const int kSthenQueueStampFieldNumber = 40;
  inline ::google::protobuf::uint64 sthen_queue_stamp(int index) const;
  inline void set_sthen_queue_stamp(int index, ::google::protobuf::uint64 value);
  inline void add_sthen_queue_stamp(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      sthen_queue_stamp() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_sthen_queue_stamp();

  // repeated uint32 sthen_queue_times = 51;
  inline int sthen_queue_times_size() const;
  inline void clear_sthen_queue_times();
  static const int kSthenQueueTimesFieldNumber = 51;
  inline ::google::protobuf::uint32 sthen_queue_times(int index) const;
  inline void set_sthen_queue_times(int index, ::google::protobuf::uint32 value);
  inline void add_sthen_queue_times(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sthen_queue_times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sthen_queue_times();

  // repeated uint32 sthen_queue_flags = 52;
  inline int sthen_queue_flags_size() const;
  inline void clear_sthen_queue_flags();
  static const int kSthenQueueFlagsFieldNumber = 52;
  inline ::google::protobuf::uint32 sthen_queue_flags(int index) const;
  inline void set_sthen_queue_flags(int index, ::google::protobuf::uint32 value);
  inline void add_sthen_queue_flags(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      sthen_queue_flags() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_sthen_queue_flags();

  // optional uint64 stheno_hire_checksum = 41;
  inline bool has_stheno_hire_checksum() const;
  inline void clear_stheno_hire_checksum();
  static const int kSthenoHireChecksumFieldNumber = 41;
  inline ::google::protobuf::uint64 stheno_hire_checksum() const;
  inline void set_stheno_hire_checksum(::google::protobuf::uint64 value);

  // repeated uint32 stheno_hire_list = 42;
  inline int stheno_hire_list_size() const;
  inline void clear_stheno_hire_list();
  static const int kSthenoHireListFieldNumber = 42;
  inline ::google::protobuf::uint32 stheno_hire_list(int index) const;
  inline void set_stheno_hire_list(int index, ::google::protobuf::uint32 value);
  inline void add_stheno_hire_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      stheno_hire_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_stheno_hire_list();

  // repeated uint64 stheno_idle_list = 43;
  inline int stheno_idle_list_size() const;
  inline void clear_stheno_idle_list();
  static const int kSthenoIdleListFieldNumber = 43;
  inline ::google::protobuf::uint64 stheno_idle_list(int index) const;
  inline void set_stheno_idle_list(int index, ::google::protobuf::uint64 value);
  inline void add_stheno_idle_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stheno_idle_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stheno_idle_list();

  // repeated uint64 stheno_equip_list = 44;
  inline int stheno_equip_list_size() const;
  inline void clear_stheno_equip_list();
  static const int kSthenoEquipListFieldNumber = 44;
  inline ::google::protobuf::uint64 stheno_equip_list(int index) const;
  inline void set_stheno_equip_list(int index, ::google::protobuf::uint64 value);
  inline void add_stheno_equip_list(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      stheno_equip_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_stheno_equip_list();

  // optional uint64 announce = 45;
  inline bool has_announce() const;
  inline void clear_announce();
  static const int kAnnounceFieldNumber = 45;
  inline ::google::protobuf::uint64 announce() const;
  inline void set_announce(::google::protobuf::uint64 value);

  // optional uint64 task_brief = 46;
  inline bool has_task_brief() const;
  inline void clear_task_brief();
  static const int kTaskBriefFieldNumber = 46;
  inline ::google::protobuf::uint64 task_brief() const;
  inline void set_task_brief(::google::protobuf::uint64 value);

  // repeated uint32 attributes = 47;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 47;
  inline ::google::protobuf::uint32 attributes(int index) const;
  inline void set_attributes(int index, ::google::protobuf::uint32 value);
  inline void add_attributes(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      attributes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_attributes();

  // optional uint32 level_limit = 48;
  inline bool has_level_limit() const;
  inline void clear_level_limit();
  static const int kLevelLimitFieldNumber = 48;
  inline ::google::protobuf::uint32 level_limit() const;
  inline void set_level_limit(::google::protobuf::uint32 value);

  // repeated uint64 town_stage = 49;
  inline int town_stage_size() const;
  inline void clear_town_stage();
  static const int kTownStageFieldNumber = 49;
  inline ::google::protobuf::uint64 town_stage(int index) const;
  inline void set_town_stage(int index, ::google::protobuf::uint64 value);
  inline void add_town_stage(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      town_stage() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_town_stage();

  // optional uint64 educate = 50;
  inline bool has_educate() const;
  inline void clear_educate();
  static const int kEducateFieldNumber = 50;
  inline ::google::protobuf::uint64 educate() const;
  inline void set_educate(::google::protobuf::uint64 value);

  // optional uint64 attach = 53;
  inline bool has_attach() const;
  inline void clear_attach();
  static const int kAttachFieldNumber = 53;
  inline ::google::protobuf::uint64 attach() const;
  inline void set_attach(::google::protobuf::uint64 value);

  // optional uint64 specshop = 54;
  inline bool has_specshop() const;
  inline void clear_specshop();
  static const int kSpecshopFieldNumber = 54;
  inline ::google::protobuf::uint64 specshop() const;
  inline void set_specshop(::google::protobuf::uint64 value);

  // optional uint64 chakra = 55;
  inline bool has_chakra() const;
  inline void clear_chakra();
  static const int kChakraFieldNumber = 55;
  inline ::google::protobuf::uint64 chakra() const;
  inline void set_chakra(::google::protobuf::uint64 value);

  // optional uint64 last_clean_day_relational_time = 56;
  inline bool has_last_clean_day_relational_time() const;
  inline void clear_last_clean_day_relational_time();
  static const int kLastCleanDayRelationalTimeFieldNumber = 56;
  inline ::google::protobuf::uint64 last_clean_day_relational_time() const;
  inline void set_last_clean_day_relational_time(::google::protobuf::uint64 value);

  // optional uint64 last_login_time = 57;
  inline bool has_last_login_time() const;
  inline void clear_last_login_time();
  static const int kLastLoginTimeFieldNumber = 57;
  inline ::google::protobuf::uint64 last_login_time() const;
  inline void set_last_login_time(::google::protobuf::uint64 value);

  // optional uint64 last_logoff_time = 58;
  inline bool has_last_logoff_time() const;
  inline void clear_last_logoff_time();
  static const int kLastLogoffTimeFieldNumber = 58;
  inline ::google::protobuf::uint64 last_logoff_time() const;
  inline void set_last_logoff_time(::google::protobuf::uint64 value);

  // optional uint64 worship = 59;
  inline bool has_worship() const;
  inline void clear_worship();
  static const int kWorshipFieldNumber = 59;
  inline ::google::protobuf::uint64 worship() const;
  inline void set_worship(::google::protobuf::uint64 value);

  // optional uint64 role_id = 60;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 60;
  inline ::google::protobuf::uint64 role_id() const;
  inline void set_role_id(::google::protobuf::uint64 value);

  // optional uint64 first_role = 61;
  inline bool has_first_role() const;
  inline void clear_first_role();
  static const int kFirstRoleFieldNumber = 61;
  inline ::google::protobuf::uint64 first_role() const;
  inline void set_first_role(::google::protobuf::uint64 value);

  // optional uint64 last_clean_week_relational_time = 62;
  inline bool has_last_clean_week_relational_time() const;
  inline void clear_last_clean_week_relational_time();
  static const int kLastCleanWeekRelationalTimeFieldNumber = 62;
  inline ::google::protobuf::uint64 last_clean_week_relational_time() const;
  inline void set_last_clean_week_relational_time(::google::protobuf::uint64 value);

  // optional uint64 eggs = 63;
  inline bool has_eggs() const;
  inline void clear_eggs();
  static const int kEggsFieldNumber = 63;
  inline ::google::protobuf::uint64 eggs() const;
  inline void set_eggs(::google::protobuf::uint64 value);

  // optional uint64 condor = 64;
  inline bool has_condor() const;
  inline void clear_condor();
  static const int kCondorFieldNumber = 64;
  inline ::google::protobuf::uint64 condor() const;
  inline void set_condor(::google::protobuf::uint64 value);

  // optional uint32 reverence = 65;
  inline bool has_reverence() const;
  inline void clear_reverence();
  static const int kReverenceFieldNumber = 65;
  inline ::google::protobuf::uint32 reverence() const;
  inline void set_reverence(::google::protobuf::uint32 value);

  // optional uint32 vip_exp = 66;
  inline bool has_vip_exp() const;
  inline void clear_vip_exp();
  static const int kVipExpFieldNumber = 66;
  inline ::google::protobuf::uint32 vip_exp() const;
  inline void set_vip_exp(::google::protobuf::uint32 value);

  // optional uint64 boss = 67;
  inline bool has_boss() const;
  inline void clear_boss();
  static const int kBossFieldNumber = 67;
  inline ::google::protobuf::uint64 boss() const;
  inline void set_boss(::google::protobuf::uint64 value);

  // optional uint64 answer = 68;
  inline bool has_answer() const;
  inline void clear_answer();
  static const int kAnswerFieldNumber = 68;
  inline ::google::protobuf::uint64 answer() const;
  inline void set_answer(::google::protobuf::uint64 value);

  // optional uint64 addiction = 69;
  inline bool has_addiction() const;
  inline void clear_addiction();
  static const int kAddictionFieldNumber = 69;
  inline ::google::protobuf::uint64 addiction() const;
  inline void set_addiction(::google::protobuf::uint64 value);

  // optional uint32 is_addiction = 70;
  inline bool has_is_addiction() const;
  inline void clear_is_addiction();
  static const int kIsAddictionFieldNumber = 70;
  inline ::google::protobuf::uint32 is_addiction() const;
  inline void set_is_addiction(::google::protobuf::uint32 value);

  // optional uint32 addiction_status = 71;
  inline bool has_addiction_status() const;
  inline void clear_addiction_status();
  static const int kAddictionStatusFieldNumber = 71;
  inline ::google::protobuf::uint32 addiction_status() const;
  inline void set_addiction_status(::google::protobuf::uint32 value);

  // optional uint64 gift = 72;
  inline bool has_gift() const;
  inline void clear_gift();
  static const int kGiftFieldNumber = 72;
  inline ::google::protobuf::uint64 gift() const;
  inline void set_gift(::google::protobuf::uint64 value);

  // optional uint64 vip = 73;
  inline bool has_vip() const;
  inline void clear_vip();
  static const int kVipFieldNumber = 73;
  inline ::google::protobuf::uint64 vip() const;
  inline void set_vip(::google::protobuf::uint64 value);

  // optional uint32 sthen_flags = 74;
  inline bool has_sthen_flags() const;
  inline void clear_sthen_flags();
  static const int kSthenFlagsFieldNumber = 74;
  inline ::google::protobuf::uint32 sthen_flags() const;
  inline void set_sthen_flags(::google::protobuf::uint32 value);

  // optional string account = 75;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 75;
  inline const ::std::string& account() const;
  inline void set_account(const ::std::string& value);
  inline void set_account(const char* value);
  inline void set_account(const char* value, size_t size);
  inline ::std::string* mutable_account();
  inline ::std::string* release_account();
  inline void set_allocated_account(::std::string* account);

  // optional uint32 super_gm = 76;
  inline bool has_super_gm() const;
  inline void clear_super_gm();
  static const int kSuperGmFieldNumber = 76;
  inline ::google::protobuf::uint32 super_gm() const;
  inline void set_super_gm(::google::protobuf::uint32 value);

  // optional uint64 achievement = 77;
  inline bool has_achievement() const;
  inline void clear_achievement();
  static const int kAchievementFieldNumber = 77;
  inline ::google::protobuf::uint64 achievement() const;
  inline void set_achievement(::google::protobuf::uint64 value);

  // optional uint64 practice = 78;
  inline bool has_practice() const;
  inline void clear_practice();
  static const int kPracticeFieldNumber = 78;
  inline ::google::protobuf::uint64 practice() const;
  inline void set_practice(::google::protobuf::uint64 value);

  // optional uint32 flower_rank = 79;
  inline bool has_flower_rank() const;
  inline void clear_flower_rank();
  static const int kFlowerRankFieldNumber = 79;
  inline ::google::protobuf::uint32 flower_rank() const;
  inline void set_flower_rank(::google::protobuf::uint32 value);

  // optional uint64 daily_points = 80;
  inline bool has_daily_points() const;
  inline void clear_daily_points();
  static const int kDailyPointsFieldNumber = 80;
  inline ::google::protobuf::uint64 daily_points() const;
  inline void set_daily_points(::google::protobuf::uint64 value);

  // optional uint64 tower = 81;
  inline bool has_tower() const;
  inline void clear_tower();
  static const int kTowerFieldNumber = 81;
  inline ::google::protobuf::uint64 tower() const;
  inline void set_tower(::google::protobuf::uint64 value);

  // optional uint32 start_stheno = 82;
  inline bool has_start_stheno() const;
  inline void clear_start_stheno();
  static const int kStartSthenoFieldNumber = 82;
  inline ::google::protobuf::uint32 start_stheno() const;
  inline void set_start_stheno(::google::protobuf::uint32 value);

  // optional uint64 tavern = 83;
  inline bool has_tavern() const;
  inline void clear_tavern();
  static const int kTavernFieldNumber = 83;
  inline ::google::protobuf::uint64 tavern() const;
  inline void set_tavern(::google::protobuf::uint64 value);

  // optional uint64 fish = 84;
  inline bool has_fish() const;
  inline void clear_fish();
  static const int kFishFieldNumber = 84;
  inline ::google::protobuf::uint64 fish() const;
  inline void set_fish(::google::protobuf::uint64 value);

  // optional uint64 dodge = 85;
  inline bool has_dodge() const;
  inline void clear_dodge();
  static const int kDodgeFieldNumber = 85;
  inline ::google::protobuf::uint64 dodge() const;
  inline void set_dodge(::google::protobuf::uint64 value);

  // optional uint32 guild_icon = 86;
  inline bool has_guild_icon() const;
  inline void clear_guild_icon();
  static const int kGuildIconFieldNumber = 86;
  inline ::google::protobuf::uint32 guild_icon() const;
  inline void set_guild_icon(::google::protobuf::uint32 value);

  // repeated uint64 wifes = 87;
  inline int wifes_size() const;
  inline void clear_wifes();
  static const int kWifesFieldNumber = 87;
  inline ::google::protobuf::uint64 wifes(int index) const;
  inline void set_wifes(int index, ::google::protobuf::uint64 value);
  inline void add_wifes(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      wifes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_wifes();

  // optional uint64 player_wife = 88;
  inline bool has_player_wife() const;
  inline void clear_player_wife();
  static const int kPlayerWifeFieldNumber = 88;
  inline ::google::protobuf::uint64 player_wife() const;
  inline void set_player_wife(::google::protobuf::uint64 value);

  // optional uint64 player_activies = 89;
  inline bool has_player_activies() const;
  inline void clear_player_activies();
  static const int kPlayerActiviesFieldNumber = 89;
  inline ::google::protobuf::uint64 player_activies() const;
  inline void set_player_activies(::google::protobuf::uint64 value);

  // optional uint64 last_energy_reward_time = 90;
  inline bool has_last_energy_reward_time() const;
  inline void clear_last_energy_reward_time();
  static const int kLastEnergyRewardTimeFieldNumber = 90;
  inline ::google::protobuf::uint64 last_energy_reward_time() const;
  inline void set_last_energy_reward_time(::google::protobuf::uint64 value);

  // optional uint32 left_energy_reward = 91;
  inline bool has_left_energy_reward() const;
  inline void clear_left_energy_reward();
  static const int kLeftEnergyRewardFieldNumber = 91;
  inline ::google::protobuf::uint32 left_energy_reward() const;
  inline void set_left_energy_reward(::google::protobuf::uint32 value);

  // optional uint64 maze = 92;
  inline bool has_maze() const;
  inline void clear_maze();
  static const int kMazeFieldNumber = 92;
  inline ::google::protobuf::uint64 maze() const;
  inline void set_maze(::google::protobuf::uint64 value);

  // optional uint64 open_activity = 93;
  inline bool has_open_activity() const;
  inline void clear_open_activity();
  static const int kOpenActivityFieldNumber = 93;
  inline ::google::protobuf::uint64 open_activity() const;
  inline void set_open_activity(::google::protobuf::uint64 value);

  // optional uint64 open_act = 94;
  inline bool has_open_act() const;
  inline void clear_open_act();
  static const int kOpenActFieldNumber = 94;
  inline ::google::protobuf::uint64 open_act() const;
  inline void set_open_act(::google::protobuf::uint64 value);

  // optional uint64 coin_guid = 95;
  inline bool has_coin_guid() const;
  inline void clear_coin_guid();
  static const int kCoinGuidFieldNumber = 95;
  inline ::google::protobuf::uint64 coin_guid() const;
  inline void set_coin_guid(::google::protobuf::uint64 value);

  // optional string last_logoff_time_str = 96;
  inline bool has_last_logoff_time_str() const;
  inline void clear_last_logoff_time_str();
  static const int kLastLogoffTimeStrFieldNumber = 96;
  inline const ::std::string& last_logoff_time_str() const;
  inline void set_last_logoff_time_str(const ::std::string& value);
  inline void set_last_logoff_time_str(const char* value);
  inline void set_last_logoff_time_str(const char* value, size_t size);
  inline ::std::string* mutable_last_logoff_time_str();
  inline ::std::string* release_last_logoff_time_str();
  inline void set_allocated_last_logoff_time_str(::std::string* last_logoff_time_str);

  // repeated uint32 give_equip = 97;
  inline int give_equip_size() const;
  inline void clear_give_equip();
  static const int kGiveEquipFieldNumber = 97;
  inline ::google::protobuf::uint32 give_equip(int index) const;
  inline void set_give_equip(int index, ::google::protobuf::uint32 value);
  inline void add_give_equip(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      give_equip() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_give_equip();

  // repeated uint32 equip_reward = 98;
  inline int equip_reward_size() const;
  inline void clear_equip_reward();
  static const int kEquipRewardFieldNumber = 98;
  inline ::google::protobuf::uint32 equip_reward(int index) const;
  inline void set_equip_reward(int index, ::google::protobuf::uint32 value);
  inline void add_equip_reward(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      equip_reward() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_equip_reward();

  // optional uint32 follow_role_id = 99;
  inline bool has_follow_role_id() const;
  inline void clear_follow_role_id();
  static const int kFollowRoleIdFieldNumber = 99;
  inline ::google::protobuf::uint32 follow_role_id() const;
  inline void set_follow_role_id(::google::protobuf::uint32 value);

  // optional uint32 max_power = 100;
  inline bool has_max_power() const;
  inline void clear_max_power();
  static const int kMaxPowerFieldNumber = 100;
  inline ::google::protobuf::uint32 max_power() const;
  inline void set_max_power(::google::protobuf::uint32 value);

  // repeated uint32 item_id = 101;
  inline int item_id_size() const;
  inline void clear_item_id();
  static const int kItemIdFieldNumber = 101;
  inline ::google::protobuf::uint32 item_id(int index) const;
  inline void set_item_id(int index, ::google::protobuf::uint32 value);
  inline void add_item_id(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_id() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_id();

  // repeated uint32 item_num = 102;
  inline int item_num_size() const;
  inline void clear_item_num();
  static const int kItemNumFieldNumber = 102;
  inline ::google::protobuf::uint32 item_num(int index) const;
  inline void set_item_num(int index, ::google::protobuf::uint32 value);
  inline void add_item_num(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      item_num() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_item_num();

  // repeated uint32 current_title = 103;
  inline int current_title_size() const;
  inline void clear_current_title();
  static const int kCurrentTitleFieldNumber = 103;
  inline ::google::protobuf::uint32 current_title(int index) const;
  inline void set_current_title(int index, ::google::protobuf::uint32 value);
  inline void add_current_title(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      current_title() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_current_title();

  // optional uint32 enable_title = 104;
  inline bool has_enable_title() const;
  inline void clear_enable_title();
  static const int kEnableTitleFieldNumber = 104;
  inline ::google::protobuf::uint32 enable_title() const;
  inline void set_enable_title(::google::protobuf::uint32 value);

  // repeated uint32 push_id_list = 105;
  inline int push_id_list_size() const;
  inline void clear_push_id_list();
  static const int kPushIdListFieldNumber = 105;
  inline ::google::protobuf::uint32 push_id_list(int index) const;
  inline void set_push_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_push_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      push_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_push_id_list();

  // repeated uint32 push_status_list = 106;
  inline int push_status_list_size() const;
  inline void clear_push_status_list();
  static const int kPushStatusListFieldNumber = 106;
  inline ::google::protobuf::uint32 push_status_list(int index) const;
  inline void set_push_status_list(int index, ::google::protobuf::uint32 value);
  inline void add_push_status_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      push_status_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_push_status_list();

  // optional uint32 jifen = 107;
  inline bool has_jifen() const;
  inline void clear_jifen();
  static const int kJifenFieldNumber = 107;
  inline ::google::protobuf::uint32 jifen() const;
  inline void set_jifen(::google::protobuf::uint32 value);

  // optional uint64 total_money_cost = 108;
  inline bool has_total_money_cost() const;
  inline void clear_total_money_cost();
  static const int kTotalMoneyCostFieldNumber = 108;
  inline ::google::protobuf::uint64 total_money_cost() const;
  inline void set_total_money_cost(::google::protobuf::uint64 value);

  // optional uint64 total_coin_cost = 109;
  inline bool has_total_coin_cost() const;
  inline void clear_total_coin_cost();
  static const int kTotalCoinCostFieldNumber = 109;
  inline ::google::protobuf::uint64 total_coin_cost() const;
  inline void set_total_coin_cost(::google::protobuf::uint64 value);

  // optional uint64 total_seni_cost = 110;
  inline bool has_total_seni_cost() const;
  inline void clear_total_seni_cost();
  static const int kTotalSeniCostFieldNumber = 110;
  inline ::google::protobuf::uint64 total_seni_cost() const;
  inline void set_total_seni_cost(::google::protobuf::uint64 value);

  // optional uint32 charge_quest = 111;
  inline bool has_charge_quest() const;
  inline void clear_charge_quest();
  static const int kChargeQuestFieldNumber = 111;
  inline ::google::protobuf::uint32 charge_quest() const;
  inline void set_charge_quest(::google::protobuf::uint32 value);

  // optional uint64 trial = 112;
  inline bool has_trial() const;
  inline void clear_trial();
  static const int kTrialFieldNumber = 112;
  inline ::google::protobuf::uint64 trial() const;
  inline void set_trial(::google::protobuf::uint64 value);

  // optional uint64 runes = 113;
  inline bool has_runes() const;
  inline void clear_runes();
  static const int kRunesFieldNumber = 113;
  inline ::google::protobuf::uint64 runes() const;
  inline void set_runes(::google::protobuf::uint64 value);

  // optional uint64 shl_switch = 114;
  inline bool has_shl_switch() const;
  inline void clear_shl_switch();
  static const int kShlSwitchFieldNumber = 114;
  inline ::google::protobuf::uint64 shl_switch() const;
  inline void set_shl_switch(::google::protobuf::uint64 value);

  // optional uint64 doubleexp = 115;
  inline bool has_doubleexp() const;
  inline void clear_doubleexp();
  static const int kDoubleexpFieldNumber = 115;
  inline ::google::protobuf::uint64 doubleexp() const;
  inline void set_doubleexp(::google::protobuf::uint64 value);

  // optional uint64 soul_pve_guid = 116;
  inline bool has_soul_pve_guid() const;
  inline void clear_soul_pve_guid();
  static const int kSoulPveGuidFieldNumber = 116;
  inline ::google::protobuf::uint64 soul_pve_guid() const;
  inline void set_soul_pve_guid(::google::protobuf::uint64 value);

  // optional uint64 soul = 117;
  inline bool has_soul() const;
  inline void clear_soul();
  static const int kSoulFieldNumber = 117;
  inline ::google::protobuf::uint64 soul() const;
  inline void set_soul(::google::protobuf::uint64 value);

  // optional uint32 soul_frag = 118;
  inline bool has_soul_frag() const;
  inline void clear_soul_frag();
  static const int kSoulFragFieldNumber = 118;
  inline ::google::protobuf::uint32 soul_frag() const;
  inline void set_soul_frag(::google::protobuf::uint32 value);

  // optional uint64 login_gift = 119;
  inline bool has_login_gift() const;
  inline void clear_login_gift();
  static const int kLoginGiftFieldNumber = 119;
  inline ::google::protobuf::uint64 login_gift() const;
  inline void set_login_gift(::google::protobuf::uint64 value);

  // optional uint64 super_power = 120;
  inline bool has_super_power() const;
  inline void clear_super_power();
  static const int kSuperPowerFieldNumber = 120;
  inline ::google::protobuf::uint64 super_power() const;
  inline void set_super_power(::google::protobuf::uint64 value);

  // optional string platform = 121;
  inline bool has_platform() const;
  inline void clear_platform();
  static const int kPlatformFieldNumber = 121;
  inline const ::std::string& platform() const;
  inline void set_platform(const ::std::string& value);
  inline void set_platform(const char* value);
  inline void set_platform(const char* value, size_t size);
  inline ::std::string* mutable_platform();
  inline ::std::string* release_platform();
  inline void set_allocated_platform(::std::string* platform);

  // optional uint64 goldcard = 122;
  inline bool has_goldcard() const;
  inline void clear_goldcard();
  static const int kGoldcardFieldNumber = 122;
  inline ::google::protobuf::uint64 goldcard() const;
  inline void set_goldcard(::google::protobuf::uint64 value);

  // optional uint32 special_right = 123;
  inline bool has_special_right() const;
  inline void clear_special_right();
  static const int kSpecialRightFieldNumber = 123;
  inline ::google::protobuf::uint32 special_right() const;
  inline void set_special_right(::google::protobuf::uint32 value);

  // optional uint64 talent = 124;
  inline bool has_talent() const;
  inline void clear_talent();
  static const int kTalentFieldNumber = 124;
  inline ::google::protobuf::uint64 talent() const;
  inline void set_talent(::google::protobuf::uint64 value);

  // optional uint32 turntable_accrun = 125;
  inline bool has_turntable_accrun() const;
  inline void clear_turntable_accrun();
  static const int kTurntableAccrunFieldNumber = 125;
  inline ::google::protobuf::uint32 turntable_accrun() const;
  inline void set_turntable_accrun(::google::protobuf::uint32 value);

  // repeated uint64 touch_times = 126;
  inline int touch_times_size() const;
  inline void clear_touch_times();
  static const int kTouchTimesFieldNumber = 126;
  inline ::google::protobuf::uint64 touch_times(int index) const;
  inline void set_touch_times(int index, ::google::protobuf::uint64 value);
  inline void add_touch_times(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      touch_times() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_touch_times();

  // optional string validate_str = 127;
  inline bool has_validate_str() const;
  inline void clear_validate_str();
  static const int kValidateStrFieldNumber = 127;
  inline const ::std::string& validate_str() const;
  inline void set_validate_str(const ::std::string& value);
  inline void set_validate_str(const char* value);
  inline void set_validate_str(const char* value, size_t size);
  inline ::std::string* mutable_validate_str();
  inline ::std::string* release_validate_str();
  inline void set_allocated_validate_str(::std::string* validate_str);

  // optional uint32 vip_level_init = 128;
  inline bool has_vip_level_init() const;
  inline void clear_vip_level_init();
  static const int kVipLevelInitFieldNumber = 128;
  inline ::google::protobuf::uint32 vip_level_init() const;
  inline void set_vip_level_init(::google::protobuf::uint32 value);

  // optional uint32 year_card = 129;
  inline bool has_year_card() const;
  inline void clear_year_card();
  static const int kYearCardFieldNumber = 129;
  inline ::google::protobuf::uint32 year_card() const;
  inline void set_year_card(::google::protobuf::uint32 value);

  // optional uint32 time_stamp = 130;
  inline bool has_time_stamp() const;
  inline void clear_time_stamp();
  static const int kTimeStampFieldNumber = 130;
  inline ::google::protobuf::uint32 time_stamp() const;
  inline void set_time_stamp(::google::protobuf::uint32 value);

  // optional uint64 horse = 131;
  inline bool has_horse() const;
  inline void clear_horse();
  static const int kHorseFieldNumber = 131;
  inline ::google::protobuf::uint64 horse() const;
  inline void set_horse(::google::protobuf::uint64 value);

  // optional string robot_validate = 132;
  inline bool has_robot_validate() const;
  inline void clear_robot_validate();
  static const int kRobotValidateFieldNumber = 132;
  inline const ::std::string& robot_validate() const;
  inline void set_robot_validate(const ::std::string& value);
  inline void set_robot_validate(const char* value);
  inline void set_robot_validate(const char* value, size_t size);
  inline ::std::string* mutable_robot_validate();
  inline ::std::string* release_robot_validate();
  inline void set_allocated_robot_validate(::std::string* robot_validate);

  // optional uint32 robot_id = 133;
  inline bool has_robot_id() const;
  inline void clear_robot_id();
  static const int kRobotIdFieldNumber = 133;
  inline ::google::protobuf::uint32 robot_id() const;
  inline void set_robot_id(::google::protobuf::uint32 value);

  // optional uint32 horse_id = 134;
  inline bool has_horse_id() const;
  inline void clear_horse_id();
  static const int kHorseIdFieldNumber = 134;
  inline ::google::protobuf::uint32 horse_id() const;
  inline void set_horse_id(::google::protobuf::uint32 value);

  // optional uint32 wife_follow = 135;
  inline bool has_wife_follow() const;
  inline void clear_wife_follow();
  static const int kWifeFollowFieldNumber = 135;
  inline ::google::protobuf::uint32 wife_follow() const;
  inline void set_wife_follow(::google::protobuf::uint32 value);

  // optional uint32 is_yellow_vip = 136;
  inline bool has_is_yellow_vip() const;
  inline void clear_is_yellow_vip();
  static const int kIsYellowVipFieldNumber = 136;
  inline ::google::protobuf::uint32 is_yellow_vip() const;
  inline void set_is_yellow_vip(::google::protobuf::uint32 value);

  // optional uint32 is_yelow_year_vip = 137;
  inline bool has_is_yelow_year_vip() const;
  inline void clear_is_yelow_year_vip();
  static const int kIsYelowYearVipFieldNumber = 137;
  inline ::google::protobuf::uint32 is_yelow_year_vip() const;
  inline void set_is_yelow_year_vip(::google::protobuf::uint32 value);

  // optional uint32 yellow_vip_level = 138;
  inline bool has_yellow_vip_level() const;
  inline void clear_yellow_vip_level();
  static const int kYellowVipLevelFieldNumber = 138;
  inline ::google::protobuf::uint32 yellow_vip_level() const;
  inline void set_yellow_vip_level(::google::protobuf::uint32 value);

  // optional uint32 is_yellow_high_vip = 139;
  inline bool has_is_yellow_high_vip() const;
  inline void clear_is_yellow_high_vip();
  static const int kIsYellowHighVipFieldNumber = 139;
  inline ::google::protobuf::uint32 is_yellow_high_vip() const;
  inline void set_is_yellow_high_vip(::google::protobuf::uint32 value);

  // optional string open_id_qq = 140;
  inline bool has_open_id_qq() const;
  inline void clear_open_id_qq();
  static const int kOpenIdQqFieldNumber = 140;
  inline const ::std::string& open_id_qq() const;
  inline void set_open_id_qq(const ::std::string& value);
  inline void set_open_id_qq(const char* value);
  inline void set_open_id_qq(const char* value, size_t size);
  inline ::std::string* mutable_open_id_qq();
  inline ::std::string* release_open_id_qq();
  inline void set_allocated_open_id_qq(::std::string* open_id_qq);

  // optional string open_id_referrer = 141;
  inline bool has_open_id_referrer() const;
  inline void clear_open_id_referrer();
  static const int kOpenIdReferrerFieldNumber = 141;
  inline const ::std::string& open_id_referrer() const;
  inline void set_open_id_referrer(const ::std::string& value);
  inline void set_open_id_referrer(const char* value);
  inline void set_open_id_referrer(const char* value, size_t size);
  inline ::std::string* mutable_open_id_referrer();
  inline ::std::string* release_open_id_referrer();
  inline void set_allocated_open_id_referrer(::std::string* open_id_referrer);

  // optional uint64 qqspreadsen = 142;
  inline bool has_qqspreadsen() const;
  inline void clear_qqspreadsen();
  static const int kQqspreadsenFieldNumber = 142;
  inline ::google::protobuf::uint64 qqspreadsen() const;
  inline void set_qqspreadsen(::google::protobuf::uint64 value);

  // optional uint32 wf_fatepoint = 143;
  inline bool has_wf_fatepoint() const;
  inline void clear_wf_fatepoint();
  static const int kWfFatepointFieldNumber = 143;
  inline ::google::protobuf::uint32 wf_fatepoint() const;
  inline void set_wf_fatepoint(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:typed.entity.Player)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_profession();
  inline void clear_has_profession();
  inline void set_has_money();
  inline void clear_has_money();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_src_x();
  inline void clear_has_src_x();
  inline void set_has_src_y();
  inline void clear_has_src_y();
  inline void set_has_dst_x();
  inline void clear_has_dst_x();
  inline void set_has_dst_y();
  inline void clear_has_dst_y();
  inline void set_has_seniority();
  inline void clear_has_seniority();
  inline void set_has_vip_level();
  inline void clear_has_vip_level();
  inline void set_has_coin_exp();
  inline void clear_has_coin_exp();
  inline void set_has_prestige();
  inline void clear_has_prestige();
  inline void set_has_energy();
  inline void clear_has_energy();
  inline void set_has_power();
  inline void clear_has_power();
  inline void set_has_training_slot();
  inline void clear_has_training_slot();
  inline void set_has_member_slot();
  inline void clear_has_member_slot();
  inline void set_has_map_id();
  inline void clear_has_map_id();
  inline void set_has_line_no();
  inline void clear_has_line_no();
  inline void set_has_stage();
  inline void clear_has_stage();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_form();
  inline void clear_has_form();
  inline void set_has_rank();
  inline void clear_has_rank();
  inline void set_has_guild();
  inline void clear_has_guild();
  inline void set_has_guild_name();
  inline void clear_has_guild_name();
  inline void set_has_sect();
  inline void clear_has_sect();
  inline void set_has_law();
  inline void clear_has_law();
  inline void set_has_sthen_will_succ();
  inline void clear_has_sthen_will_succ();
  inline void set_has_stheno_hire_checksum();
  inline void clear_has_stheno_hire_checksum();
  inline void set_has_announce();
  inline void clear_has_announce();
  inline void set_has_task_brief();
  inline void clear_has_task_brief();
  inline void set_has_level_limit();
  inline void clear_has_level_limit();
  inline void set_has_educate();
  inline void clear_has_educate();
  inline void set_has_attach();
  inline void clear_has_attach();
  inline void set_has_specshop();
  inline void clear_has_specshop();
  inline void set_has_chakra();
  inline void clear_has_chakra();
  inline void set_has_last_clean_day_relational_time();
  inline void clear_has_last_clean_day_relational_time();
  inline void set_has_last_login_time();
  inline void clear_has_last_login_time();
  inline void set_has_last_logoff_time();
  inline void clear_has_last_logoff_time();
  inline void set_has_worship();
  inline void clear_has_worship();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_first_role();
  inline void clear_has_first_role();
  inline void set_has_last_clean_week_relational_time();
  inline void clear_has_last_clean_week_relational_time();
  inline void set_has_eggs();
  inline void clear_has_eggs();
  inline void set_has_condor();
  inline void clear_has_condor();
  inline void set_has_reverence();
  inline void clear_has_reverence();
  inline void set_has_vip_exp();
  inline void clear_has_vip_exp();
  inline void set_has_boss();
  inline void clear_has_boss();
  inline void set_has_answer();
  inline void clear_has_answer();
  inline void set_has_addiction();
  inline void clear_has_addiction();
  inline void set_has_is_addiction();
  inline void clear_has_is_addiction();
  inline void set_has_addiction_status();
  inline void clear_has_addiction_status();
  inline void set_has_gift();
  inline void clear_has_gift();
  inline void set_has_vip();
  inline void clear_has_vip();
  inline void set_has_sthen_flags();
  inline void clear_has_sthen_flags();
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_super_gm();
  inline void clear_has_super_gm();
  inline void set_has_achievement();
  inline void clear_has_achievement();
  inline void set_has_practice();
  inline void clear_has_practice();
  inline void set_has_flower_rank();
  inline void clear_has_flower_rank();
  inline void set_has_daily_points();
  inline void clear_has_daily_points();
  inline void set_has_tower();
  inline void clear_has_tower();
  inline void set_has_start_stheno();
  inline void clear_has_start_stheno();
  inline void set_has_tavern();
  inline void clear_has_tavern();
  inline void set_has_fish();
  inline void clear_has_fish();
  inline void set_has_dodge();
  inline void clear_has_dodge();
  inline void set_has_guild_icon();
  inline void clear_has_guild_icon();
  inline void set_has_player_wife();
  inline void clear_has_player_wife();
  inline void set_has_player_activies();
  inline void clear_has_player_activies();
  inline void set_has_last_energy_reward_time();
  inline void clear_has_last_energy_reward_time();
  inline void set_has_left_energy_reward();
  inline void clear_has_left_energy_reward();
  inline void set_has_maze();
  inline void clear_has_maze();
  inline void set_has_open_activity();
  inline void clear_has_open_activity();
  inline void set_has_open_act();
  inline void clear_has_open_act();
  inline void set_has_coin_guid();
  inline void clear_has_coin_guid();
  inline void set_has_last_logoff_time_str();
  inline void clear_has_last_logoff_time_str();
  inline void set_has_follow_role_id();
  inline void clear_has_follow_role_id();
  inline void set_has_max_power();
  inline void clear_has_max_power();
  inline void set_has_enable_title();
  inline void clear_has_enable_title();
  inline void set_has_jifen();
  inline void clear_has_jifen();
  inline void set_has_total_money_cost();
  inline void clear_has_total_money_cost();
  inline void set_has_total_coin_cost();
  inline void clear_has_total_coin_cost();
  inline void set_has_total_seni_cost();
  inline void clear_has_total_seni_cost();
  inline void set_has_charge_quest();
  inline void clear_has_charge_quest();
  inline void set_has_trial();
  inline void clear_has_trial();
  inline void set_has_runes();
  inline void clear_has_runes();
  inline void set_has_shl_switch();
  inline void clear_has_shl_switch();
  inline void set_has_doubleexp();
  inline void clear_has_doubleexp();
  inline void set_has_soul_pve_guid();
  inline void clear_has_soul_pve_guid();
  inline void set_has_soul();
  inline void clear_has_soul();
  inline void set_has_soul_frag();
  inline void clear_has_soul_frag();
  inline void set_has_login_gift();
  inline void clear_has_login_gift();
  inline void set_has_super_power();
  inline void clear_has_super_power();
  inline void set_has_platform();
  inline void clear_has_platform();
  inline void set_has_goldcard();
  inline void clear_has_goldcard();
  inline void set_has_special_right();
  inline void clear_has_special_right();
  inline void set_has_talent();
  inline void clear_has_talent();
  inline void set_has_turntable_accrun();
  inline void clear_has_turntable_accrun();
  inline void set_has_validate_str();
  inline void clear_has_validate_str();
  inline void set_has_vip_level_init();
  inline void clear_has_vip_level_init();
  inline void set_has_year_card();
  inline void clear_has_year_card();
  inline void set_has_time_stamp();
  inline void clear_has_time_stamp();
  inline void set_has_horse();
  inline void clear_has_horse();
  inline void set_has_robot_validate();
  inline void clear_has_robot_validate();
  inline void set_has_robot_id();
  inline void clear_has_robot_id();
  inline void set_has_horse_id();
  inline void clear_has_horse_id();
  inline void set_has_wife_follow();
  inline void clear_has_wife_follow();
  inline void set_has_is_yellow_vip();
  inline void clear_has_is_yellow_vip();
  inline void set_has_is_yelow_year_vip();
  inline void clear_has_is_yelow_year_vip();
  inline void set_has_yellow_vip_level();
  inline void clear_has_yellow_vip_level();
  inline void set_has_is_yellow_high_vip();
  inline void clear_has_is_yellow_high_vip();
  inline void set_has_open_id_qq();
  inline void clear_has_open_id_qq();
  inline void set_has_open_id_referrer();
  inline void clear_has_open_id_referrer();
  inline void set_has_qqspreadsen();
  inline void clear_has_qqspreadsen();
  inline void set_has_wf_fatepoint();
  inline void clear_has_wf_fatepoint();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[5];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::std::string* name_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 profession_;
  ::google::protobuf::uint32 money_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::int32 src_x_;
  ::google::protobuf::int32 src_y_;
  ::google::protobuf::int32 dst_x_;
  ::google::protobuf::int32 dst_y_;
  ::google::protobuf::uint32 seniority_;
  ::google::protobuf::uint32 vip_level_;
  ::google::protobuf::uint32 coin_exp_;
  ::google::protobuf::uint32 prestige_;
  ::google::protobuf::uint32 energy_;
  ::google::protobuf::uint32 power_;
  ::google::protobuf::uint32 training_slot_;
  ::google::protobuf::uint32 member_slot_;
  ::google::protobuf::uint32 map_id_;
  ::google::protobuf::uint32 line_no_;
  ::google::protobuf::uint64 stage_;
  ::google::protobuf::uint64 form_;
  ::google::protobuf::int32 direction_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint64 guild_;
  ::std::string* guild_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > wonder_skill_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > buffers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > bag_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > storehouse_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > hunt_master_state_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > can_recruit_roles_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > leave_team_roles_;
  ::google::protobuf::uint64 sect_;
  ::google::protobuf::uint64 law_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > sthen_queue_stamp_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sthen_queue_times_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > sthen_queue_flags_;
  ::google::protobuf::uint64 stheno_hire_checksum_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > stheno_hire_list_;
  ::google::protobuf::uint32 sthen_will_succ_;
  ::google::protobuf::uint32 level_limit_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stheno_idle_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > stheno_equip_list_;
  ::google::protobuf::uint64 announce_;
  ::google::protobuf::uint64 task_brief_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > attributes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > town_stage_;
  ::google::protobuf::uint64 educate_;
  ::google::protobuf::uint64 attach_;
  ::google::protobuf::uint64 specshop_;
  ::google::protobuf::uint64 chakra_;
  ::google::protobuf::uint64 last_clean_day_relational_time_;
  ::google::protobuf::uint64 last_login_time_;
  ::google::protobuf::uint64 last_logoff_time_;
  ::google::protobuf::uint64 worship_;
  ::google::protobuf::uint64 role_id_;
  ::google::protobuf::uint64 first_role_;
  ::google::protobuf::uint64 last_clean_week_relational_time_;
  ::google::protobuf::uint64 eggs_;
  ::google::protobuf::uint64 condor_;
  ::google::protobuf::uint32 reverence_;
  ::google::protobuf::uint32 vip_exp_;
  ::google::protobuf::uint64 boss_;
  ::google::protobuf::uint64 answer_;
  ::google::protobuf::uint64 addiction_;
  ::google::protobuf::uint32 is_addiction_;
  ::google::protobuf::uint32 addiction_status_;
  ::google::protobuf::uint64 gift_;
  ::google::protobuf::uint64 vip_;
  ::std::string* account_;
  ::google::protobuf::uint32 sthen_flags_;
  ::google::protobuf::uint32 super_gm_;
  ::google::protobuf::uint64 achievement_;
  ::google::protobuf::uint64 practice_;
  ::google::protobuf::uint64 daily_points_;
  ::google::protobuf::uint32 flower_rank_;
  ::google::protobuf::uint32 start_stheno_;
  ::google::protobuf::uint64 tower_;
  ::google::protobuf::uint64 tavern_;
  ::google::protobuf::uint64 fish_;
  ::google::protobuf::uint64 dodge_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > wifes_;
  ::google::protobuf::uint64 player_wife_;
  ::google::protobuf::uint32 guild_icon_;
  ::google::protobuf::uint32 left_energy_reward_;
  ::google::protobuf::uint64 player_activies_;
  ::google::protobuf::uint64 last_energy_reward_time_;
  ::google::protobuf::uint64 maze_;
  ::google::protobuf::uint64 open_activity_;
  ::google::protobuf::uint64 open_act_;
  ::google::protobuf::uint64 coin_guid_;
  ::std::string* last_logoff_time_str_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > give_equip_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > equip_reward_;
  ::google::protobuf::uint32 follow_role_id_;
  ::google::protobuf::uint32 max_power_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > item_num_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > current_title_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > push_id_list_;
  ::google::protobuf::uint32 enable_title_;
  ::google::protobuf::uint32 jifen_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > push_status_list_;
  ::google::protobuf::uint64 total_money_cost_;
  ::google::protobuf::uint64 total_coin_cost_;
  ::google::protobuf::uint64 total_seni_cost_;
  ::google::protobuf::uint64 trial_;
  ::google::protobuf::uint64 runes_;
  ::google::protobuf::uint64 shl_switch_;
  ::google::protobuf::uint32 charge_quest_;
  ::google::protobuf::uint32 soul_frag_;
  ::google::protobuf::uint64 doubleexp_;
  ::google::protobuf::uint64 soul_pve_guid_;
  ::google::protobuf::uint64 soul_;
  ::google::protobuf::uint64 login_gift_;
  ::google::protobuf::uint64 super_power_;
  ::std::string* platform_;
  ::google::protobuf::uint64 goldcard_;
  ::google::protobuf::uint64 talent_;
  ::google::protobuf::uint32 special_right_;
  ::google::protobuf::uint32 turntable_accrun_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > touch_times_;
  ::std::string* validate_str_;
  ::google::protobuf::uint32 vip_level_init_;
  ::google::protobuf::uint32 year_card_;
  ::google::protobuf::uint64 horse_;
  ::google::protobuf::uint32 time_stamp_;
  ::google::protobuf::uint32 robot_id_;
  ::std::string* robot_validate_;
  ::google::protobuf::uint32 horse_id_;
  ::google::protobuf::uint32 wife_follow_;
  ::google::protobuf::uint32 is_yellow_vip_;
  ::google::protobuf::uint32 is_yelow_year_vip_;
  ::google::protobuf::uint32 yellow_vip_level_;
  ::google::protobuf::uint32 is_yellow_high_vip_;
  ::std::string* open_id_qq_;
  ::std::string* open_id_referrer_;
  ::google::protobuf::uint64 qqspreadsen_;
  ::google::protobuf::uint32 wf_fatepoint_;
  friend void  protobuf_AddDesc_entity_2fplayer_2eproto();
  friend void protobuf_AssignDesc_entity_2fplayer_2eproto();
  friend void protobuf_ShutdownFile_entity_2fplayer_2eproto();

  void InitAsDefaultInstance();
  static Player* default_instance_;
};
// -------------------------------------------------------------------

class Role : public ::google::protobuf::Message {
 public:
  Role();
  virtual ~Role();

  Role(const Role& from);

  inline Role& operator=(const Role& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Role& default_instance();

  void Swap(Role* other);

  // implements Message ----------------------------------------------

  Role* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Role& from);
  void MergeFrom(const Role& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required uint64 player = 2;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline ::google::protobuf::uint64 player() const;
  inline void set_player(::google::protobuf::uint64 value);

  // optional uint32 role_id = 3;
  inline bool has_role_id() const;
  inline void clear_role_id();
  static const int kRoleIdFieldNumber = 3;
  inline ::google::protobuf::uint32 role_id() const;
  inline void set_role_id(::google::protobuf::uint32 value);

  // optional string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint32 sex = 5;
  inline bool has_sex() const;
  inline void clear_sex();
  static const int kSexFieldNumber = 5;
  inline ::google::protobuf::uint32 sex() const;
  inline void set_sex(::google::protobuf::uint32 value);

  // optional uint32 job = 6;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 6;
  inline ::google::protobuf::uint32 job() const;
  inline void set_job(::google::protobuf::uint32 value);

  // optional uint32 faction = 7;
  inline bool has_faction() const;
  inline void clear_faction();
  static const int kFactionFieldNumber = 7;
  inline ::google::protobuf::uint32 faction() const;
  inline void set_faction(::google::protobuf::uint32 value);

  // optional uint32 level = 8;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 exp = 9;
  inline bool has_exp() const;
  inline void clear_exp();
  static const int kExpFieldNumber = 9;
  inline ::google::protobuf::uint32 exp() const;
  inline void set_exp(::google::protobuf::uint32 value);

  // optional uint32 postion = 10;
  inline bool has_postion() const;
  inline void clear_postion();
  static const int kPostionFieldNumber = 10;
  inline ::google::protobuf::uint32 postion() const;
  inline void set_postion(::google::protobuf::uint32 value);

  // optional uint32 normal_skill = 11;
  inline bool has_normal_skill() const;
  inline void clear_normal_skill();
  static const int kNormalSkillFieldNumber = 11;
  inline ::google::protobuf::uint32 normal_skill() const;
  inline void set_normal_skill(::google::protobuf::uint32 value);

  // optional uint32 extremely_skill = 12;
  inline bool has_extremely_skill() const;
  inline void clear_extremely_skill();
  static const int kExtremelySkillFieldNumber = 12;
  inline ::google::protobuf::uint32 extremely_skill() const;
  inline void set_extremely_skill(::google::protobuf::uint32 value);

  // optional uint32 char_ability = 13;
  inline bool has_char_ability() const;
  inline void clear_char_ability();
  static const int kCharAbilityFieldNumber = 13;
  inline ::google::protobuf::uint32 char_ability() const;
  inline void set_char_ability(::google::protobuf::uint32 value);

  // repeated uint32 culture = 14;
  inline int culture_size() const;
  inline void clear_culture();
  static const int kCultureFieldNumber = 14;
  inline ::google::protobuf::uint32 culture(int index) const;
  inline void set_culture(int index, ::google::protobuf::uint32 value);
  inline void add_culture(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      culture() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_culture();

  // repeated uint32 pellet1 = 15;
  inline int pellet1_size() const;
  inline void clear_pellet1();
  static const int kPellet1FieldNumber = 15;
  inline ::google::protobuf::uint32 pellet1(int index) const;
  inline void set_pellet1(int index, ::google::protobuf::uint32 value);
  inline void add_pellet1(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pellet1() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pellet1();

  // repeated uint32 pellet_no = 16;
  inline int pellet_no_size() const;
  inline void clear_pellet_no();
  static const int kPelletNoFieldNumber = 16;
  inline ::google::protobuf::uint32 pellet_no(int index) const;
  inline void set_pellet_no(int index, ::google::protobuf::uint32 value);
  inline void add_pellet_no(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      pellet_no() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_pellet_no();

  // repeated int32 attributes = 17;
  inline int attributes_size() const;
  inline void clear_attributes();
  static const int kAttributesFieldNumber = 17;
  inline ::google::protobuf::int32 attributes(int index) const;
  inline void set_attributes(int index, ::google::protobuf::int32 value);
  inline void add_attributes(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      attributes() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_attributes();

  // repeated uint64 buffers = 18;
  inline int buffers_size() const;
  inline void clear_buffers();
  static const int kBuffersFieldNumber = 18;
  inline ::google::protobuf::uint64 buffers(int index) const;
  inline void set_buffers(int index, ::google::protobuf::uint64 value);
  inline void add_buffers(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      buffers() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_buffers();

  // repeated uint64 equipments = 19;
  inline int equipments_size() const;
  inline void clear_equipments();
  static const int kEquipmentsFieldNumber = 19;
  inline ::google::protobuf::uint64 equipments(int index) const;
  inline void set_equipments(int index, ::google::protobuf::uint64 value);
  inline void add_equipments(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      equipments() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_equipments();

  // repeated uint64 hunt = 20;
  inline int hunt_size() const;
  inline void clear_hunt();
  static const int kHuntFieldNumber = 20;
  inline ::google::protobuf::uint64 hunt(int index) const;
  inline void set_hunt(int index, ::google::protobuf::uint64 value);
  inline void add_hunt(::google::protobuf::uint64 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      hunt() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_hunt();

  // optional uint32 hire_id = 21;
  inline bool has_hire_id() const;
  inline void clear_hire_id();
  static const int kHireIdFieldNumber = 21;
  inline ::google::protobuf::uint32 hire_id() const;
  inline void set_hire_id(::google::protobuf::uint32 value);

  // optional uint32 avatar_id = 22;
  inline bool has_avatar_id() const;
  inline void clear_avatar_id();
  static const int kAvatarIdFieldNumber = 22;
  inline ::google::protobuf::uint32 avatar_id() const;
  inline void set_avatar_id(::google::protobuf::uint32 value);

  // optional uint64 educate = 23;
  inline bool has_educate() const;
  inline void clear_educate();
  static const int kEducateFieldNumber = 23;
  inline ::google::protobuf::uint64 educate() const;
  inline void set_educate(::google::protobuf::uint64 value);

  // optional uint32 stomach_start_time = 24;
  inline bool has_stomach_start_time() const;
  inline void clear_stomach_start_time();
  static const int kStomachStartTimeFieldNumber = 24;
  inline ::google::protobuf::uint32 stomach_start_time() const;
  inline void set_stomach_start_time(::google::protobuf::uint32 value);

  // optional uint32 quality = 25;
  inline bool has_quality() const;
  inline void clear_quality();
  static const int kQualityFieldNumber = 25;
  inline ::google::protobuf::uint32 quality() const;
  inline void set_quality(::google::protobuf::uint32 value);

  // optional uint32 training_level = 26;
  inline bool has_training_level() const;
  inline void clear_training_level();
  static const int kTrainingLevelFieldNumber = 26;
  inline ::google::protobuf::uint32 training_level() const;
  inline void set_training_level(::google::protobuf::uint32 value);

  // optional uint32 dodge_skill_id = 27;
  inline bool has_dodge_skill_id() const;
  inline void clear_dodge_skill_id();
  static const int kDodgeSkillIdFieldNumber = 27;
  inline ::google::protobuf::uint32 dodge_skill_id() const;
  inline void set_dodge_skill_id(::google::protobuf::uint32 value);

  // optional uint64 wife = 28;
  inline bool has_wife() const;
  inline void clear_wife();
  static const int kWifeFieldNumber = 28;
  inline ::google::protobuf::uint64 wife() const;
  inline void set_wife(::google::protobuf::uint64 value);

  // optional uint64 pellet = 29;
  inline bool has_pellet() const;
  inline void clear_pellet();
  static const int kPelletFieldNumber = 29;
  inline ::google::protobuf::uint64 pellet() const;
  inline void set_pellet(::google::protobuf::uint64 value);

  // optional uint32 inherit_to = 30;
  inline bool has_inherit_to() const;
  inline void clear_inherit_to();
  static const int kInheritToFieldNumber = 30;
  inline ::google::protobuf::uint32 inherit_to() const;
  inline void set_inherit_to(::google::protobuf::uint32 value);

  // optional uint32 inherit_from = 31;
  inline bool has_inherit_from() const;
  inline void clear_inherit_from();
  static const int kInheritFromFieldNumber = 31;
  inline ::google::protobuf::uint32 inherit_from() const;
  inline void set_inherit_from(::google::protobuf::uint32 value);

  // optional uint64 shl_owner = 32;
  inline bool has_shl_owner() const;
  inline void clear_shl_owner();
  static const int kShlOwnerFieldNumber = 32;
  inline ::google::protobuf::uint64 shl_owner() const;
  inline void set_shl_owner(::google::protobuf::uint64 value);

  // optional uint64 update_fight_power = 33;
  inline bool has_update_fight_power() const;
  inline void clear_update_fight_power();
  static const int kUpdateFightPowerFieldNumber = 33;
  inline ::google::protobuf::uint64 update_fight_power() const;
  inline void set_update_fight_power(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:typed.entity.Role)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_player();
  inline void clear_has_player();
  inline void set_has_role_id();
  inline void clear_has_role_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_sex();
  inline void clear_has_sex();
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_faction();
  inline void clear_has_faction();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_exp();
  inline void clear_has_exp();
  inline void set_has_postion();
  inline void clear_has_postion();
  inline void set_has_normal_skill();
  inline void clear_has_normal_skill();
  inline void set_has_extremely_skill();
  inline void clear_has_extremely_skill();
  inline void set_has_char_ability();
  inline void clear_has_char_ability();
  inline void set_has_hire_id();
  inline void clear_has_hire_id();
  inline void set_has_avatar_id();
  inline void clear_has_avatar_id();
  inline void set_has_educate();
  inline void clear_has_educate();
  inline void set_has_stomach_start_time();
  inline void clear_has_stomach_start_time();
  inline void set_has_quality();
  inline void clear_has_quality();
  inline void set_has_training_level();
  inline void clear_has_training_level();
  inline void set_has_dodge_skill_id();
  inline void clear_has_dodge_skill_id();
  inline void set_has_wife();
  inline void clear_has_wife();
  inline void set_has_pellet();
  inline void clear_has_pellet();
  inline void set_has_inherit_to();
  inline void clear_has_inherit_to();
  inline void set_has_inherit_from();
  inline void clear_has_inherit_from();
  inline void set_has_shl_owner();
  inline void clear_has_shl_owner();
  inline void set_has_update_fight_power();
  inline void clear_has_update_fight_power();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[2];
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_;
  ::std::string* name_;
  ::google::protobuf::uint32 role_id_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 job_;
  ::google::protobuf::uint32 faction_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 exp_;
  ::google::protobuf::uint32 postion_;
  ::google::protobuf::uint32 normal_skill_;
  ::google::protobuf::uint32 extremely_skill_;
  ::google::protobuf::uint32 char_ability_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > culture_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pellet1_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > pellet_no_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > attributes_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > buffers_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > equipments_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > hunt_;
  ::google::protobuf::uint32 hire_id_;
  ::google::protobuf::uint32 avatar_id_;
  ::google::protobuf::uint64 educate_;
  ::google::protobuf::uint32 stomach_start_time_;
  ::google::protobuf::uint32 quality_;
  ::google::protobuf::uint32 training_level_;
  ::google::protobuf::uint32 dodge_skill_id_;
  ::google::protobuf::uint64 wife_;
  ::google::protobuf::uint64 pellet_;
  ::google::protobuf::uint32 inherit_to_;
  ::google::protobuf::uint32 inherit_from_;
  ::google::protobuf::uint64 shl_owner_;
  ::google::protobuf::uint64 update_fight_power_;
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_entity_2fplayer_2eproto();
  friend void protobuf_AssignDesc_entity_2fplayer_2eproto();
  friend void protobuf_ShutdownFile_entity_2fplayer_2eproto();

  void InitAsDefaultInstance();
  static Role* default_instance_;
};
// -------------------------------------------------------------------

class Coin : public ::google::protobuf::Message {
 public:
  Coin();
  virtual ~Coin();

  Coin(const Coin& from);

  inline Coin& operator=(const Coin& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Coin& default_instance();

  void Swap(Coin* other);

  // implements Message ----------------------------------------------

  Coin* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Coin& from);
  void MergeFrom(const Coin& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline ::google::protobuf::uint64 guid() const;
  inline void set_guid(::google::protobuf::uint64 value);

  // required uint64 player = 2;
  inline bool has_player() const;
  inline void clear_player();
  static const int kPlayerFieldNumber = 2;
  inline ::google::protobuf::uint64 player() const;
  inline void set_player(::google::protobuf::uint64 value);

  // optional uint32 coin = 3;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 3;
  inline ::google::protobuf::uint32 coin() const;
  inline void set_coin(::google::protobuf::uint32 value);

  // optional uint32 money = 4;
  inline bool has_money() const;
  inline void clear_money();
  static const int kMoneyFieldNumber = 4;
  inline ::google::protobuf::uint32 money() const;
  inline void set_money(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:typed.entity.Coin)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_player();
  inline void clear_has_player();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_money();
  inline void clear_has_money();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 guid_;
  ::google::protobuf::uint64 player_;
  ::google::protobuf::uint32 coin_;
  ::google::protobuf::uint32 money_;
  friend void  protobuf_AddDesc_entity_2fplayer_2eproto();
  friend void protobuf_AssignDesc_entity_2fplayer_2eproto();
  friend void protobuf_ShutdownFile_entity_2fplayer_2eproto();

  void InitAsDefaultInstance();
  static Coin* default_instance_;
};
// ===================================================================


// ===================================================================

// Player

// required uint64 guid = 1;
inline bool Player::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Player::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Player::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Player::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 Player::guid() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.guid)
  return guid_;
}
inline void Player::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.guid)
}

// optional string name = 2;
inline bool Player::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Player::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Player::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Player::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Player::name() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.name)
  return *name_;
}
inline void Player::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.name)
}
inline void Player::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.name)
}
inline void Player::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.name)
}
inline ::std::string* Player::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.name)
  return name_;
}
inline ::std::string* Player::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.name)
}

// optional uint32 level = 3;
inline bool Player::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Player::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Player::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Player::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Player::level() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.level)
  return level_;
}
inline void Player::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.level)
}

// optional uint32 exp = 4;
inline bool Player::has_exp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Player::set_has_exp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Player::clear_has_exp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Player::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 Player::exp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.exp)
  return exp_;
}
inline void Player::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.exp)
}

// optional uint32 sex = 5;
inline bool Player::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Player::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Player::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Player::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 Player::sex() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sex)
  return sex_;
}
inline void Player::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.sex)
}

// optional uint32 profession = 6;
inline bool Player::has_profession() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Player::set_has_profession() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Player::clear_has_profession() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Player::clear_profession() {
  profession_ = 0u;
  clear_has_profession();
}
inline ::google::protobuf::uint32 Player::profession() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.profession)
  return profession_;
}
inline void Player::set_profession(::google::protobuf::uint32 value) {
  set_has_profession();
  profession_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.profession)
}

// optional uint32 money = 7;
inline bool Player::has_money() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Player::set_has_money() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Player::clear_has_money() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Player::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 Player::money() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.money)
  return money_;
}
inline void Player::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.money)
}

// optional uint32 coin = 8;
inline bool Player::has_coin() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Player::set_has_coin() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Player::clear_has_coin() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Player::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Player::coin() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.coin)
  return coin_;
}
inline void Player::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.coin)
}

// optional int32 src_x = 9;
inline bool Player::has_src_x() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Player::set_has_src_x() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Player::clear_has_src_x() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Player::clear_src_x() {
  src_x_ = 0;
  clear_has_src_x();
}
inline ::google::protobuf::int32 Player::src_x() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.src_x)
  return src_x_;
}
inline void Player::set_src_x(::google::protobuf::int32 value) {
  set_has_src_x();
  src_x_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.src_x)
}

// optional int32 src_y = 10;
inline bool Player::has_src_y() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Player::set_has_src_y() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Player::clear_has_src_y() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Player::clear_src_y() {
  src_y_ = 0;
  clear_has_src_y();
}
inline ::google::protobuf::int32 Player::src_y() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.src_y)
  return src_y_;
}
inline void Player::set_src_y(::google::protobuf::int32 value) {
  set_has_src_y();
  src_y_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.src_y)
}

// optional int32 dst_x = 11;
inline bool Player::has_dst_x() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Player::set_has_dst_x() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Player::clear_has_dst_x() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Player::clear_dst_x() {
  dst_x_ = 0;
  clear_has_dst_x();
}
inline ::google::protobuf::int32 Player::dst_x() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.dst_x)
  return dst_x_;
}
inline void Player::set_dst_x(::google::protobuf::int32 value) {
  set_has_dst_x();
  dst_x_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.dst_x)
}

// optional int32 dst_y = 12;
inline bool Player::has_dst_y() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Player::set_has_dst_y() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Player::clear_has_dst_y() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Player::clear_dst_y() {
  dst_y_ = 0;
  clear_has_dst_y();
}
inline ::google::protobuf::int32 Player::dst_y() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.dst_y)
  return dst_y_;
}
inline void Player::set_dst_y(::google::protobuf::int32 value) {
  set_has_dst_y();
  dst_y_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.dst_y)
}

// optional uint32 seniority = 13;
inline bool Player::has_seniority() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Player::set_has_seniority() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Player::clear_has_seniority() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Player::clear_seniority() {
  seniority_ = 0u;
  clear_has_seniority();
}
inline ::google::protobuf::uint32 Player::seniority() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.seniority)
  return seniority_;
}
inline void Player::set_seniority(::google::protobuf::uint32 value) {
  set_has_seniority();
  seniority_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.seniority)
}

// optional uint32 vip_level = 14;
inline bool Player::has_vip_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void Player::set_has_vip_level() {
  _has_bits_[0] |= 0x00002000u;
}
inline void Player::clear_has_vip_level() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void Player::clear_vip_level() {
  vip_level_ = 0u;
  clear_has_vip_level();
}
inline ::google::protobuf::uint32 Player::vip_level() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.vip_level)
  return vip_level_;
}
inline void Player::set_vip_level(::google::protobuf::uint32 value) {
  set_has_vip_level();
  vip_level_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.vip_level)
}

// optional uint32 coin_exp = 15;
inline bool Player::has_coin_exp() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void Player::set_has_coin_exp() {
  _has_bits_[0] |= 0x00004000u;
}
inline void Player::clear_has_coin_exp() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void Player::clear_coin_exp() {
  coin_exp_ = 0u;
  clear_has_coin_exp();
}
inline ::google::protobuf::uint32 Player::coin_exp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.coin_exp)
  return coin_exp_;
}
inline void Player::set_coin_exp(::google::protobuf::uint32 value) {
  set_has_coin_exp();
  coin_exp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.coin_exp)
}

// optional uint32 prestige = 16;
inline bool Player::has_prestige() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void Player::set_has_prestige() {
  _has_bits_[0] |= 0x00008000u;
}
inline void Player::clear_has_prestige() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void Player::clear_prestige() {
  prestige_ = 0u;
  clear_has_prestige();
}
inline ::google::protobuf::uint32 Player::prestige() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.prestige)
  return prestige_;
}
inline void Player::set_prestige(::google::protobuf::uint32 value) {
  set_has_prestige();
  prestige_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.prestige)
}

// optional uint32 energy = 17;
inline bool Player::has_energy() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void Player::set_has_energy() {
  _has_bits_[0] |= 0x00010000u;
}
inline void Player::clear_has_energy() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void Player::clear_energy() {
  energy_ = 0u;
  clear_has_energy();
}
inline ::google::protobuf::uint32 Player::energy() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.energy)
  return energy_;
}
inline void Player::set_energy(::google::protobuf::uint32 value) {
  set_has_energy();
  energy_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.energy)
}

// optional uint32 power = 18;
inline bool Player::has_power() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void Player::set_has_power() {
  _has_bits_[0] |= 0x00020000u;
}
inline void Player::clear_has_power() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void Player::clear_power() {
  power_ = 0u;
  clear_has_power();
}
inline ::google::protobuf::uint32 Player::power() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.power)
  return power_;
}
inline void Player::set_power(::google::protobuf::uint32 value) {
  set_has_power();
  power_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.power)
}

// optional uint32 training_slot = 19;
inline bool Player::has_training_slot() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void Player::set_has_training_slot() {
  _has_bits_[0] |= 0x00040000u;
}
inline void Player::clear_has_training_slot() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void Player::clear_training_slot() {
  training_slot_ = 0u;
  clear_has_training_slot();
}
inline ::google::protobuf::uint32 Player::training_slot() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.training_slot)
  return training_slot_;
}
inline void Player::set_training_slot(::google::protobuf::uint32 value) {
  set_has_training_slot();
  training_slot_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.training_slot)
}

// optional uint32 member_slot = 20;
inline bool Player::has_member_slot() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void Player::set_has_member_slot() {
  _has_bits_[0] |= 0x00080000u;
}
inline void Player::clear_has_member_slot() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void Player::clear_member_slot() {
  member_slot_ = 0u;
  clear_has_member_slot();
}
inline ::google::protobuf::uint32 Player::member_slot() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.member_slot)
  return member_slot_;
}
inline void Player::set_member_slot(::google::protobuf::uint32 value) {
  set_has_member_slot();
  member_slot_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.member_slot)
}

// optional uint32 map_id = 21;
inline bool Player::has_map_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Player::set_has_map_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Player::clear_has_map_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Player::clear_map_id() {
  map_id_ = 0u;
  clear_has_map_id();
}
inline ::google::protobuf::uint32 Player::map_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.map_id)
  return map_id_;
}
inline void Player::set_map_id(::google::protobuf::uint32 value) {
  set_has_map_id();
  map_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.map_id)
}

// optional uint32 line_no = 22;
inline bool Player::has_line_no() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Player::set_has_line_no() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Player::clear_has_line_no() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Player::clear_line_no() {
  line_no_ = 0u;
  clear_has_line_no();
}
inline ::google::protobuf::uint32 Player::line_no() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.line_no)
  return line_no_;
}
inline void Player::set_line_no(::google::protobuf::uint32 value) {
  set_has_line_no();
  line_no_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.line_no)
}

// optional uint64 stage = 23;
inline bool Player::has_stage() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Player::set_has_stage() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Player::clear_has_stage() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Player::clear_stage() {
  stage_ = GOOGLE_ULONGLONG(0);
  clear_has_stage();
}
inline ::google::protobuf::uint64 Player::stage() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.stage)
  return stage_;
}
inline void Player::set_stage(::google::protobuf::uint64 value) {
  set_has_stage();
  stage_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.stage)
}

// optional int32 direction = 24;
inline bool Player::has_direction() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Player::set_has_direction() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Player::clear_has_direction() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Player::clear_direction() {
  direction_ = 0;
  clear_has_direction();
}
inline ::google::protobuf::int32 Player::direction() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.direction)
  return direction_;
}
inline void Player::set_direction(::google::protobuf::int32 value) {
  set_has_direction();
  direction_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.direction)
}

// optional uint64 form = 25;
inline bool Player::has_form() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Player::set_has_form() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Player::clear_has_form() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Player::clear_form() {
  form_ = GOOGLE_ULONGLONG(0);
  clear_has_form();
}
inline ::google::protobuf::uint64 Player::form() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.form)
  return form_;
}
inline void Player::set_form(::google::protobuf::uint64 value) {
  set_has_form();
  form_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.form)
}

// optional uint32 rank = 26;
inline bool Player::has_rank() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Player::set_has_rank() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Player::clear_has_rank() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Player::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 Player::rank() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.rank)
  return rank_;
}
inline void Player::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.rank)
}

// optional uint64 guild = 27;
inline bool Player::has_guild() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Player::set_has_guild() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Player::clear_has_guild() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Player::clear_guild() {
  guild_ = GOOGLE_ULONGLONG(0);
  clear_has_guild();
}
inline ::google::protobuf::uint64 Player::guild() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.guild)
  return guild_;
}
inline void Player::set_guild(::google::protobuf::uint64 value) {
  set_has_guild();
  guild_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.guild)
}

// optional string guild_name = 28;
inline bool Player::has_guild_name() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Player::set_has_guild_name() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Player::clear_has_guild_name() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Player::clear_guild_name() {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_->clear();
  }
  clear_has_guild_name();
}
inline const ::std::string& Player::guild_name() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.guild_name)
  return *guild_name_;
}
inline void Player::set_guild_name(const ::std::string& value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.guild_name)
}
inline void Player::set_guild_name(const char* value) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.guild_name)
}
inline void Player::set_guild_name(const char* value, size_t size) {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  guild_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.guild_name)
}
inline ::std::string* Player::mutable_guild_name() {
  set_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    guild_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.guild_name)
  return guild_name_;
}
inline ::std::string* Player::release_guild_name() {
  clear_has_guild_name();
  if (guild_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = guild_name_;
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_guild_name(::std::string* guild_name) {
  if (guild_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete guild_name_;
  }
  if (guild_name) {
    set_has_guild_name();
    guild_name_ = guild_name;
  } else {
    clear_has_guild_name();
    guild_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.guild_name)
}

// repeated uint32 wonder_skill = 29;
inline int Player::wonder_skill_size() const {
  return wonder_skill_.size();
}
inline void Player::clear_wonder_skill() {
  wonder_skill_.Clear();
}
inline ::google::protobuf::uint32 Player::wonder_skill(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.wonder_skill)
  return wonder_skill_.Get(index);
}
inline void Player::set_wonder_skill(int index, ::google::protobuf::uint32 value) {
  wonder_skill_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.wonder_skill)
}
inline void Player::add_wonder_skill(::google::protobuf::uint32 value) {
  wonder_skill_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.wonder_skill)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::wonder_skill() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.wonder_skill)
  return wonder_skill_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_wonder_skill() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.wonder_skill)
  return &wonder_skill_;
}

// repeated uint64 buffers = 30;
inline int Player::buffers_size() const {
  return buffers_.size();
}
inline void Player::clear_buffers() {
  buffers_.Clear();
}
inline ::google::protobuf::uint64 Player::buffers(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.buffers)
  return buffers_.Get(index);
}
inline void Player::set_buffers(int index, ::google::protobuf::uint64 value) {
  buffers_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.buffers)
}
inline void Player::add_buffers(::google::protobuf::uint64 value) {
  buffers_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.buffers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::buffers() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.buffers)
  return buffers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_buffers() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.buffers)
  return &buffers_;
}

// repeated uint64 roles = 31;
inline int Player::roles_size() const {
  return roles_.size();
}
inline void Player::clear_roles() {
  roles_.Clear();
}
inline ::google::protobuf::uint64 Player::roles(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.roles)
  return roles_.Get(index);
}
inline void Player::set_roles(int index, ::google::protobuf::uint64 value) {
  roles_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.roles)
}
inline void Player::add_roles(::google::protobuf::uint64 value) {
  roles_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.roles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::roles() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.roles)
  return roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.roles)
  return &roles_;
}

// repeated uint64 bag = 32;
inline int Player::bag_size() const {
  return bag_.size();
}
inline void Player::clear_bag() {
  bag_.Clear();
}
inline ::google::protobuf::uint64 Player::bag(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.bag)
  return bag_.Get(index);
}
inline void Player::set_bag(int index, ::google::protobuf::uint64 value) {
  bag_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.bag)
}
inline void Player::add_bag(::google::protobuf::uint64 value) {
  bag_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.bag)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::bag() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.bag)
  return bag_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_bag() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.bag)
  return &bag_;
}

// repeated uint64 storehouse = 33;
inline int Player::storehouse_size() const {
  return storehouse_.size();
}
inline void Player::clear_storehouse() {
  storehouse_.Clear();
}
inline ::google::protobuf::uint64 Player::storehouse(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.storehouse)
  return storehouse_.Get(index);
}
inline void Player::set_storehouse(int index, ::google::protobuf::uint64 value) {
  storehouse_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.storehouse)
}
inline void Player::add_storehouse(::google::protobuf::uint64 value) {
  storehouse_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.storehouse)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::storehouse() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.storehouse)
  return storehouse_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_storehouse() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.storehouse)
  return &storehouse_;
}

// repeated uint32 hunt_master_state = 34;
inline int Player::hunt_master_state_size() const {
  return hunt_master_state_.size();
}
inline void Player::clear_hunt_master_state() {
  hunt_master_state_.Clear();
}
inline ::google::protobuf::uint32 Player::hunt_master_state(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.hunt_master_state)
  return hunt_master_state_.Get(index);
}
inline void Player::set_hunt_master_state(int index, ::google::protobuf::uint32 value) {
  hunt_master_state_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.hunt_master_state)
}
inline void Player::add_hunt_master_state(::google::protobuf::uint32 value) {
  hunt_master_state_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.hunt_master_state)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::hunt_master_state() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.hunt_master_state)
  return hunt_master_state_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_hunt_master_state() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.hunt_master_state)
  return &hunt_master_state_;
}

// repeated uint32 can_recruit_roles = 35;
inline int Player::can_recruit_roles_size() const {
  return can_recruit_roles_.size();
}
inline void Player::clear_can_recruit_roles() {
  can_recruit_roles_.Clear();
}
inline ::google::protobuf::uint32 Player::can_recruit_roles(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.can_recruit_roles)
  return can_recruit_roles_.Get(index);
}
inline void Player::set_can_recruit_roles(int index, ::google::protobuf::uint32 value) {
  can_recruit_roles_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.can_recruit_roles)
}
inline void Player::add_can_recruit_roles(::google::protobuf::uint32 value) {
  can_recruit_roles_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.can_recruit_roles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::can_recruit_roles() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.can_recruit_roles)
  return can_recruit_roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_can_recruit_roles() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.can_recruit_roles)
  return &can_recruit_roles_;
}

// repeated uint64 leave_team_roles = 36;
inline int Player::leave_team_roles_size() const {
  return leave_team_roles_.size();
}
inline void Player::clear_leave_team_roles() {
  leave_team_roles_.Clear();
}
inline ::google::protobuf::uint64 Player::leave_team_roles(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.leave_team_roles)
  return leave_team_roles_.Get(index);
}
inline void Player::set_leave_team_roles(int index, ::google::protobuf::uint64 value) {
  leave_team_roles_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.leave_team_roles)
}
inline void Player::add_leave_team_roles(::google::protobuf::uint64 value) {
  leave_team_roles_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.leave_team_roles)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::leave_team_roles() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.leave_team_roles)
  return leave_team_roles_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_leave_team_roles() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.leave_team_roles)
  return &leave_team_roles_;
}

// optional uint64 sect = 37;
inline bool Player::has_sect() const {
  return (_has_bits_[1] & 0x00000010u) != 0;
}
inline void Player::set_has_sect() {
  _has_bits_[1] |= 0x00000010u;
}
inline void Player::clear_has_sect() {
  _has_bits_[1] &= ~0x00000010u;
}
inline void Player::clear_sect() {
  sect_ = GOOGLE_ULONGLONG(0);
  clear_has_sect();
}
inline ::google::protobuf::uint64 Player::sect() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sect)
  return sect_;
}
inline void Player::set_sect(::google::protobuf::uint64 value) {
  set_has_sect();
  sect_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.sect)
}

// optional uint64 law = 38;
inline bool Player::has_law() const {
  return (_has_bits_[1] & 0x00000020u) != 0;
}
inline void Player::set_has_law() {
  _has_bits_[1] |= 0x00000020u;
}
inline void Player::clear_has_law() {
  _has_bits_[1] &= ~0x00000020u;
}
inline void Player::clear_law() {
  law_ = GOOGLE_ULONGLONG(0);
  clear_has_law();
}
inline ::google::protobuf::uint64 Player::law() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.law)
  return law_;
}
inline void Player::set_law(::google::protobuf::uint64 value) {
  set_has_law();
  law_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.law)
}

// optional uint32 sthen_will_succ = 39;
inline bool Player::has_sthen_will_succ() const {
  return (_has_bits_[1] & 0x00000040u) != 0;
}
inline void Player::set_has_sthen_will_succ() {
  _has_bits_[1] |= 0x00000040u;
}
inline void Player::clear_has_sthen_will_succ() {
  _has_bits_[1] &= ~0x00000040u;
}
inline void Player::clear_sthen_will_succ() {
  sthen_will_succ_ = 0u;
  clear_has_sthen_will_succ();
}
inline ::google::protobuf::uint32 Player::sthen_will_succ() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sthen_will_succ)
  return sthen_will_succ_;
}
inline void Player::set_sthen_will_succ(::google::protobuf::uint32 value) {
  set_has_sthen_will_succ();
  sthen_will_succ_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.sthen_will_succ)
}

// repeated uint64 sthen_queue_stamp = 40;
inline int Player::sthen_queue_stamp_size() const {
  return sthen_queue_stamp_.size();
}
inline void Player::clear_sthen_queue_stamp() {
  sthen_queue_stamp_.Clear();
}
inline ::google::protobuf::uint64 Player::sthen_queue_stamp(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sthen_queue_stamp)
  return sthen_queue_stamp_.Get(index);
}
inline void Player::set_sthen_queue_stamp(int index, ::google::protobuf::uint64 value) {
  sthen_queue_stamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.sthen_queue_stamp)
}
inline void Player::add_sthen_queue_stamp(::google::protobuf::uint64 value) {
  sthen_queue_stamp_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.sthen_queue_stamp)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::sthen_queue_stamp() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.sthen_queue_stamp)
  return sthen_queue_stamp_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_sthen_queue_stamp() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.sthen_queue_stamp)
  return &sthen_queue_stamp_;
}

// repeated uint32 sthen_queue_times = 51;
inline int Player::sthen_queue_times_size() const {
  return sthen_queue_times_.size();
}
inline void Player::clear_sthen_queue_times() {
  sthen_queue_times_.Clear();
}
inline ::google::protobuf::uint32 Player::sthen_queue_times(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sthen_queue_times)
  return sthen_queue_times_.Get(index);
}
inline void Player::set_sthen_queue_times(int index, ::google::protobuf::uint32 value) {
  sthen_queue_times_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.sthen_queue_times)
}
inline void Player::add_sthen_queue_times(::google::protobuf::uint32 value) {
  sthen_queue_times_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.sthen_queue_times)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::sthen_queue_times() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.sthen_queue_times)
  return sthen_queue_times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_sthen_queue_times() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.sthen_queue_times)
  return &sthen_queue_times_;
}

// repeated uint32 sthen_queue_flags = 52;
inline int Player::sthen_queue_flags_size() const {
  return sthen_queue_flags_.size();
}
inline void Player::clear_sthen_queue_flags() {
  sthen_queue_flags_.Clear();
}
inline ::google::protobuf::uint32 Player::sthen_queue_flags(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sthen_queue_flags)
  return sthen_queue_flags_.Get(index);
}
inline void Player::set_sthen_queue_flags(int index, ::google::protobuf::uint32 value) {
  sthen_queue_flags_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.sthen_queue_flags)
}
inline void Player::add_sthen_queue_flags(::google::protobuf::uint32 value) {
  sthen_queue_flags_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.sthen_queue_flags)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::sthen_queue_flags() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.sthen_queue_flags)
  return sthen_queue_flags_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_sthen_queue_flags() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.sthen_queue_flags)
  return &sthen_queue_flags_;
}

// optional uint64 stheno_hire_checksum = 41;
inline bool Player::has_stheno_hire_checksum() const {
  return (_has_bits_[1] & 0x00000400u) != 0;
}
inline void Player::set_has_stheno_hire_checksum() {
  _has_bits_[1] |= 0x00000400u;
}
inline void Player::clear_has_stheno_hire_checksum() {
  _has_bits_[1] &= ~0x00000400u;
}
inline void Player::clear_stheno_hire_checksum() {
  stheno_hire_checksum_ = GOOGLE_ULONGLONG(0);
  clear_has_stheno_hire_checksum();
}
inline ::google::protobuf::uint64 Player::stheno_hire_checksum() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.stheno_hire_checksum)
  return stheno_hire_checksum_;
}
inline void Player::set_stheno_hire_checksum(::google::protobuf::uint64 value) {
  set_has_stheno_hire_checksum();
  stheno_hire_checksum_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.stheno_hire_checksum)
}

// repeated uint32 stheno_hire_list = 42;
inline int Player::stheno_hire_list_size() const {
  return stheno_hire_list_.size();
}
inline void Player::clear_stheno_hire_list() {
  stheno_hire_list_.Clear();
}
inline ::google::protobuf::uint32 Player::stheno_hire_list(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.stheno_hire_list)
  return stheno_hire_list_.Get(index);
}
inline void Player::set_stheno_hire_list(int index, ::google::protobuf::uint32 value) {
  stheno_hire_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.stheno_hire_list)
}
inline void Player::add_stheno_hire_list(::google::protobuf::uint32 value) {
  stheno_hire_list_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.stheno_hire_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::stheno_hire_list() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.stheno_hire_list)
  return stheno_hire_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_stheno_hire_list() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.stheno_hire_list)
  return &stheno_hire_list_;
}

// repeated uint64 stheno_idle_list = 43;
inline int Player::stheno_idle_list_size() const {
  return stheno_idle_list_.size();
}
inline void Player::clear_stheno_idle_list() {
  stheno_idle_list_.Clear();
}
inline ::google::protobuf::uint64 Player::stheno_idle_list(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.stheno_idle_list)
  return stheno_idle_list_.Get(index);
}
inline void Player::set_stheno_idle_list(int index, ::google::protobuf::uint64 value) {
  stheno_idle_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.stheno_idle_list)
}
inline void Player::add_stheno_idle_list(::google::protobuf::uint64 value) {
  stheno_idle_list_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.stheno_idle_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::stheno_idle_list() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.stheno_idle_list)
  return stheno_idle_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_stheno_idle_list() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.stheno_idle_list)
  return &stheno_idle_list_;
}

// repeated uint64 stheno_equip_list = 44;
inline int Player::stheno_equip_list_size() const {
  return stheno_equip_list_.size();
}
inline void Player::clear_stheno_equip_list() {
  stheno_equip_list_.Clear();
}
inline ::google::protobuf::uint64 Player::stheno_equip_list(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.stheno_equip_list)
  return stheno_equip_list_.Get(index);
}
inline void Player::set_stheno_equip_list(int index, ::google::protobuf::uint64 value) {
  stheno_equip_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.stheno_equip_list)
}
inline void Player::add_stheno_equip_list(::google::protobuf::uint64 value) {
  stheno_equip_list_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.stheno_equip_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::stheno_equip_list() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.stheno_equip_list)
  return stheno_equip_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_stheno_equip_list() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.stheno_equip_list)
  return &stheno_equip_list_;
}

// optional uint64 announce = 45;
inline bool Player::has_announce() const {
  return (_has_bits_[1] & 0x00004000u) != 0;
}
inline void Player::set_has_announce() {
  _has_bits_[1] |= 0x00004000u;
}
inline void Player::clear_has_announce() {
  _has_bits_[1] &= ~0x00004000u;
}
inline void Player::clear_announce() {
  announce_ = GOOGLE_ULONGLONG(0);
  clear_has_announce();
}
inline ::google::protobuf::uint64 Player::announce() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.announce)
  return announce_;
}
inline void Player::set_announce(::google::protobuf::uint64 value) {
  set_has_announce();
  announce_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.announce)
}

// optional uint64 task_brief = 46;
inline bool Player::has_task_brief() const {
  return (_has_bits_[1] & 0x00008000u) != 0;
}
inline void Player::set_has_task_brief() {
  _has_bits_[1] |= 0x00008000u;
}
inline void Player::clear_has_task_brief() {
  _has_bits_[1] &= ~0x00008000u;
}
inline void Player::clear_task_brief() {
  task_brief_ = GOOGLE_ULONGLONG(0);
  clear_has_task_brief();
}
inline ::google::protobuf::uint64 Player::task_brief() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.task_brief)
  return task_brief_;
}
inline void Player::set_task_brief(::google::protobuf::uint64 value) {
  set_has_task_brief();
  task_brief_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.task_brief)
}

// repeated uint32 attributes = 47;
inline int Player::attributes_size() const {
  return attributes_.size();
}
inline void Player::clear_attributes() {
  attributes_.Clear();
}
inline ::google::protobuf::uint32 Player::attributes(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.attributes)
  return attributes_.Get(index);
}
inline void Player::set_attributes(int index, ::google::protobuf::uint32 value) {
  attributes_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.attributes)
}
inline void Player::add_attributes(::google::protobuf::uint32 value) {
  attributes_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.attributes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::attributes() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.attributes)
  return attributes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.attributes)
  return &attributes_;
}

// optional uint32 level_limit = 48;
inline bool Player::has_level_limit() const {
  return (_has_bits_[1] & 0x00020000u) != 0;
}
inline void Player::set_has_level_limit() {
  _has_bits_[1] |= 0x00020000u;
}
inline void Player::clear_has_level_limit() {
  _has_bits_[1] &= ~0x00020000u;
}
inline void Player::clear_level_limit() {
  level_limit_ = 0u;
  clear_has_level_limit();
}
inline ::google::protobuf::uint32 Player::level_limit() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.level_limit)
  return level_limit_;
}
inline void Player::set_level_limit(::google::protobuf::uint32 value) {
  set_has_level_limit();
  level_limit_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.level_limit)
}

// repeated uint64 town_stage = 49;
inline int Player::town_stage_size() const {
  return town_stage_.size();
}
inline void Player::clear_town_stage() {
  town_stage_.Clear();
}
inline ::google::protobuf::uint64 Player::town_stage(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.town_stage)
  return town_stage_.Get(index);
}
inline void Player::set_town_stage(int index, ::google::protobuf::uint64 value) {
  town_stage_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.town_stage)
}
inline void Player::add_town_stage(::google::protobuf::uint64 value) {
  town_stage_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.town_stage)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::town_stage() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.town_stage)
  return town_stage_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_town_stage() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.town_stage)
  return &town_stage_;
}

// optional uint64 educate = 50;
inline bool Player::has_educate() const {
  return (_has_bits_[1] & 0x00080000u) != 0;
}
inline void Player::set_has_educate() {
  _has_bits_[1] |= 0x00080000u;
}
inline void Player::clear_has_educate() {
  _has_bits_[1] &= ~0x00080000u;
}
inline void Player::clear_educate() {
  educate_ = GOOGLE_ULONGLONG(0);
  clear_has_educate();
}
inline ::google::protobuf::uint64 Player::educate() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.educate)
  return educate_;
}
inline void Player::set_educate(::google::protobuf::uint64 value) {
  set_has_educate();
  educate_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.educate)
}

// optional uint64 attach = 53;
inline bool Player::has_attach() const {
  return (_has_bits_[1] & 0x00100000u) != 0;
}
inline void Player::set_has_attach() {
  _has_bits_[1] |= 0x00100000u;
}
inline void Player::clear_has_attach() {
  _has_bits_[1] &= ~0x00100000u;
}
inline void Player::clear_attach() {
  attach_ = GOOGLE_ULONGLONG(0);
  clear_has_attach();
}
inline ::google::protobuf::uint64 Player::attach() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.attach)
  return attach_;
}
inline void Player::set_attach(::google::protobuf::uint64 value) {
  set_has_attach();
  attach_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.attach)
}

// optional uint64 specshop = 54;
inline bool Player::has_specshop() const {
  return (_has_bits_[1] & 0x00200000u) != 0;
}
inline void Player::set_has_specshop() {
  _has_bits_[1] |= 0x00200000u;
}
inline void Player::clear_has_specshop() {
  _has_bits_[1] &= ~0x00200000u;
}
inline void Player::clear_specshop() {
  specshop_ = GOOGLE_ULONGLONG(0);
  clear_has_specshop();
}
inline ::google::protobuf::uint64 Player::specshop() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.specshop)
  return specshop_;
}
inline void Player::set_specshop(::google::protobuf::uint64 value) {
  set_has_specshop();
  specshop_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.specshop)
}

// optional uint64 chakra = 55;
inline bool Player::has_chakra() const {
  return (_has_bits_[1] & 0x00400000u) != 0;
}
inline void Player::set_has_chakra() {
  _has_bits_[1] |= 0x00400000u;
}
inline void Player::clear_has_chakra() {
  _has_bits_[1] &= ~0x00400000u;
}
inline void Player::clear_chakra() {
  chakra_ = GOOGLE_ULONGLONG(0);
  clear_has_chakra();
}
inline ::google::protobuf::uint64 Player::chakra() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.chakra)
  return chakra_;
}
inline void Player::set_chakra(::google::protobuf::uint64 value) {
  set_has_chakra();
  chakra_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.chakra)
}

// optional uint64 last_clean_day_relational_time = 56;
inline bool Player::has_last_clean_day_relational_time() const {
  return (_has_bits_[1] & 0x00800000u) != 0;
}
inline void Player::set_has_last_clean_day_relational_time() {
  _has_bits_[1] |= 0x00800000u;
}
inline void Player::clear_has_last_clean_day_relational_time() {
  _has_bits_[1] &= ~0x00800000u;
}
inline void Player::clear_last_clean_day_relational_time() {
  last_clean_day_relational_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_clean_day_relational_time();
}
inline ::google::protobuf::uint64 Player::last_clean_day_relational_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_clean_day_relational_time)
  return last_clean_day_relational_time_;
}
inline void Player::set_last_clean_day_relational_time(::google::protobuf::uint64 value) {
  set_has_last_clean_day_relational_time();
  last_clean_day_relational_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_clean_day_relational_time)
}

// optional uint64 last_login_time = 57;
inline bool Player::has_last_login_time() const {
  return (_has_bits_[1] & 0x01000000u) != 0;
}
inline void Player::set_has_last_login_time() {
  _has_bits_[1] |= 0x01000000u;
}
inline void Player::clear_has_last_login_time() {
  _has_bits_[1] &= ~0x01000000u;
}
inline void Player::clear_last_login_time() {
  last_login_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_login_time();
}
inline ::google::protobuf::uint64 Player::last_login_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_login_time)
  return last_login_time_;
}
inline void Player::set_last_login_time(::google::protobuf::uint64 value) {
  set_has_last_login_time();
  last_login_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_login_time)
}

// optional uint64 last_logoff_time = 58;
inline bool Player::has_last_logoff_time() const {
  return (_has_bits_[1] & 0x02000000u) != 0;
}
inline void Player::set_has_last_logoff_time() {
  _has_bits_[1] |= 0x02000000u;
}
inline void Player::clear_has_last_logoff_time() {
  _has_bits_[1] &= ~0x02000000u;
}
inline void Player::clear_last_logoff_time() {
  last_logoff_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_logoff_time();
}
inline ::google::protobuf::uint64 Player::last_logoff_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_logoff_time)
  return last_logoff_time_;
}
inline void Player::set_last_logoff_time(::google::protobuf::uint64 value) {
  set_has_last_logoff_time();
  last_logoff_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_logoff_time)
}

// optional uint64 worship = 59;
inline bool Player::has_worship() const {
  return (_has_bits_[1] & 0x04000000u) != 0;
}
inline void Player::set_has_worship() {
  _has_bits_[1] |= 0x04000000u;
}
inline void Player::clear_has_worship() {
  _has_bits_[1] &= ~0x04000000u;
}
inline void Player::clear_worship() {
  worship_ = GOOGLE_ULONGLONG(0);
  clear_has_worship();
}
inline ::google::protobuf::uint64 Player::worship() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.worship)
  return worship_;
}
inline void Player::set_worship(::google::protobuf::uint64 value) {
  set_has_worship();
  worship_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.worship)
}

// optional uint64 role_id = 60;
inline bool Player::has_role_id() const {
  return (_has_bits_[1] & 0x08000000u) != 0;
}
inline void Player::set_has_role_id() {
  _has_bits_[1] |= 0x08000000u;
}
inline void Player::clear_has_role_id() {
  _has_bits_[1] &= ~0x08000000u;
}
inline void Player::clear_role_id() {
  role_id_ = GOOGLE_ULONGLONG(0);
  clear_has_role_id();
}
inline ::google::protobuf::uint64 Player::role_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.role_id)
  return role_id_;
}
inline void Player::set_role_id(::google::protobuf::uint64 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.role_id)
}

// optional uint64 first_role = 61;
inline bool Player::has_first_role() const {
  return (_has_bits_[1] & 0x10000000u) != 0;
}
inline void Player::set_has_first_role() {
  _has_bits_[1] |= 0x10000000u;
}
inline void Player::clear_has_first_role() {
  _has_bits_[1] &= ~0x10000000u;
}
inline void Player::clear_first_role() {
  first_role_ = GOOGLE_ULONGLONG(0);
  clear_has_first_role();
}
inline ::google::protobuf::uint64 Player::first_role() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.first_role)
  return first_role_;
}
inline void Player::set_first_role(::google::protobuf::uint64 value) {
  set_has_first_role();
  first_role_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.first_role)
}

// optional uint64 last_clean_week_relational_time = 62;
inline bool Player::has_last_clean_week_relational_time() const {
  return (_has_bits_[1] & 0x20000000u) != 0;
}
inline void Player::set_has_last_clean_week_relational_time() {
  _has_bits_[1] |= 0x20000000u;
}
inline void Player::clear_has_last_clean_week_relational_time() {
  _has_bits_[1] &= ~0x20000000u;
}
inline void Player::clear_last_clean_week_relational_time() {
  last_clean_week_relational_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_clean_week_relational_time();
}
inline ::google::protobuf::uint64 Player::last_clean_week_relational_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_clean_week_relational_time)
  return last_clean_week_relational_time_;
}
inline void Player::set_last_clean_week_relational_time(::google::protobuf::uint64 value) {
  set_has_last_clean_week_relational_time();
  last_clean_week_relational_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_clean_week_relational_time)
}

// optional uint64 eggs = 63;
inline bool Player::has_eggs() const {
  return (_has_bits_[1] & 0x40000000u) != 0;
}
inline void Player::set_has_eggs() {
  _has_bits_[1] |= 0x40000000u;
}
inline void Player::clear_has_eggs() {
  _has_bits_[1] &= ~0x40000000u;
}
inline void Player::clear_eggs() {
  eggs_ = GOOGLE_ULONGLONG(0);
  clear_has_eggs();
}
inline ::google::protobuf::uint64 Player::eggs() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.eggs)
  return eggs_;
}
inline void Player::set_eggs(::google::protobuf::uint64 value) {
  set_has_eggs();
  eggs_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.eggs)
}

// optional uint64 condor = 64;
inline bool Player::has_condor() const {
  return (_has_bits_[1] & 0x80000000u) != 0;
}
inline void Player::set_has_condor() {
  _has_bits_[1] |= 0x80000000u;
}
inline void Player::clear_has_condor() {
  _has_bits_[1] &= ~0x80000000u;
}
inline void Player::clear_condor() {
  condor_ = GOOGLE_ULONGLONG(0);
  clear_has_condor();
}
inline ::google::protobuf::uint64 Player::condor() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.condor)
  return condor_;
}
inline void Player::set_condor(::google::protobuf::uint64 value) {
  set_has_condor();
  condor_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.condor)
}

// optional uint32 reverence = 65;
inline bool Player::has_reverence() const {
  return (_has_bits_[2] & 0x00000001u) != 0;
}
inline void Player::set_has_reverence() {
  _has_bits_[2] |= 0x00000001u;
}
inline void Player::clear_has_reverence() {
  _has_bits_[2] &= ~0x00000001u;
}
inline void Player::clear_reverence() {
  reverence_ = 0u;
  clear_has_reverence();
}
inline ::google::protobuf::uint32 Player::reverence() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.reverence)
  return reverence_;
}
inline void Player::set_reverence(::google::protobuf::uint32 value) {
  set_has_reverence();
  reverence_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.reverence)
}

// optional uint32 vip_exp = 66;
inline bool Player::has_vip_exp() const {
  return (_has_bits_[2] & 0x00000002u) != 0;
}
inline void Player::set_has_vip_exp() {
  _has_bits_[2] |= 0x00000002u;
}
inline void Player::clear_has_vip_exp() {
  _has_bits_[2] &= ~0x00000002u;
}
inline void Player::clear_vip_exp() {
  vip_exp_ = 0u;
  clear_has_vip_exp();
}
inline ::google::protobuf::uint32 Player::vip_exp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.vip_exp)
  return vip_exp_;
}
inline void Player::set_vip_exp(::google::protobuf::uint32 value) {
  set_has_vip_exp();
  vip_exp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.vip_exp)
}

// optional uint64 boss = 67;
inline bool Player::has_boss() const {
  return (_has_bits_[2] & 0x00000004u) != 0;
}
inline void Player::set_has_boss() {
  _has_bits_[2] |= 0x00000004u;
}
inline void Player::clear_has_boss() {
  _has_bits_[2] &= ~0x00000004u;
}
inline void Player::clear_boss() {
  boss_ = GOOGLE_ULONGLONG(0);
  clear_has_boss();
}
inline ::google::protobuf::uint64 Player::boss() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.boss)
  return boss_;
}
inline void Player::set_boss(::google::protobuf::uint64 value) {
  set_has_boss();
  boss_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.boss)
}

// optional uint64 answer = 68;
inline bool Player::has_answer() const {
  return (_has_bits_[2] & 0x00000008u) != 0;
}
inline void Player::set_has_answer() {
  _has_bits_[2] |= 0x00000008u;
}
inline void Player::clear_has_answer() {
  _has_bits_[2] &= ~0x00000008u;
}
inline void Player::clear_answer() {
  answer_ = GOOGLE_ULONGLONG(0);
  clear_has_answer();
}
inline ::google::protobuf::uint64 Player::answer() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.answer)
  return answer_;
}
inline void Player::set_answer(::google::protobuf::uint64 value) {
  set_has_answer();
  answer_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.answer)
}

// optional uint64 addiction = 69;
inline bool Player::has_addiction() const {
  return (_has_bits_[2] & 0x00000010u) != 0;
}
inline void Player::set_has_addiction() {
  _has_bits_[2] |= 0x00000010u;
}
inline void Player::clear_has_addiction() {
  _has_bits_[2] &= ~0x00000010u;
}
inline void Player::clear_addiction() {
  addiction_ = GOOGLE_ULONGLONG(0);
  clear_has_addiction();
}
inline ::google::protobuf::uint64 Player::addiction() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.addiction)
  return addiction_;
}
inline void Player::set_addiction(::google::protobuf::uint64 value) {
  set_has_addiction();
  addiction_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.addiction)
}

// optional uint32 is_addiction = 70;
inline bool Player::has_is_addiction() const {
  return (_has_bits_[2] & 0x00000020u) != 0;
}
inline void Player::set_has_is_addiction() {
  _has_bits_[2] |= 0x00000020u;
}
inline void Player::clear_has_is_addiction() {
  _has_bits_[2] &= ~0x00000020u;
}
inline void Player::clear_is_addiction() {
  is_addiction_ = 0u;
  clear_has_is_addiction();
}
inline ::google::protobuf::uint32 Player::is_addiction() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.is_addiction)
  return is_addiction_;
}
inline void Player::set_is_addiction(::google::protobuf::uint32 value) {
  set_has_is_addiction();
  is_addiction_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.is_addiction)
}

// optional uint32 addiction_status = 71;
inline bool Player::has_addiction_status() const {
  return (_has_bits_[2] & 0x00000040u) != 0;
}
inline void Player::set_has_addiction_status() {
  _has_bits_[2] |= 0x00000040u;
}
inline void Player::clear_has_addiction_status() {
  _has_bits_[2] &= ~0x00000040u;
}
inline void Player::clear_addiction_status() {
  addiction_status_ = 0u;
  clear_has_addiction_status();
}
inline ::google::protobuf::uint32 Player::addiction_status() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.addiction_status)
  return addiction_status_;
}
inline void Player::set_addiction_status(::google::protobuf::uint32 value) {
  set_has_addiction_status();
  addiction_status_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.addiction_status)
}

// optional uint64 gift = 72;
inline bool Player::has_gift() const {
  return (_has_bits_[2] & 0x00000080u) != 0;
}
inline void Player::set_has_gift() {
  _has_bits_[2] |= 0x00000080u;
}
inline void Player::clear_has_gift() {
  _has_bits_[2] &= ~0x00000080u;
}
inline void Player::clear_gift() {
  gift_ = GOOGLE_ULONGLONG(0);
  clear_has_gift();
}
inline ::google::protobuf::uint64 Player::gift() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.gift)
  return gift_;
}
inline void Player::set_gift(::google::protobuf::uint64 value) {
  set_has_gift();
  gift_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.gift)
}

// optional uint64 vip = 73;
inline bool Player::has_vip() const {
  return (_has_bits_[2] & 0x00000100u) != 0;
}
inline void Player::set_has_vip() {
  _has_bits_[2] |= 0x00000100u;
}
inline void Player::clear_has_vip() {
  _has_bits_[2] &= ~0x00000100u;
}
inline void Player::clear_vip() {
  vip_ = GOOGLE_ULONGLONG(0);
  clear_has_vip();
}
inline ::google::protobuf::uint64 Player::vip() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.vip)
  return vip_;
}
inline void Player::set_vip(::google::protobuf::uint64 value) {
  set_has_vip();
  vip_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.vip)
}

// optional uint32 sthen_flags = 74;
inline bool Player::has_sthen_flags() const {
  return (_has_bits_[2] & 0x00000200u) != 0;
}
inline void Player::set_has_sthen_flags() {
  _has_bits_[2] |= 0x00000200u;
}
inline void Player::clear_has_sthen_flags() {
  _has_bits_[2] &= ~0x00000200u;
}
inline void Player::clear_sthen_flags() {
  sthen_flags_ = 0u;
  clear_has_sthen_flags();
}
inline ::google::protobuf::uint32 Player::sthen_flags() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.sthen_flags)
  return sthen_flags_;
}
inline void Player::set_sthen_flags(::google::protobuf::uint32 value) {
  set_has_sthen_flags();
  sthen_flags_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.sthen_flags)
}

// optional string account = 75;
inline bool Player::has_account() const {
  return (_has_bits_[2] & 0x00000400u) != 0;
}
inline void Player::set_has_account() {
  _has_bits_[2] |= 0x00000400u;
}
inline void Player::clear_has_account() {
  _has_bits_[2] &= ~0x00000400u;
}
inline void Player::clear_account() {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_->clear();
  }
  clear_has_account();
}
inline const ::std::string& Player::account() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.account)
  return *account_;
}
inline void Player::set_account(const ::std::string& value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.account)
}
inline void Player::set_account(const char* value) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.account)
}
inline void Player::set_account(const char* value, size_t size) {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  account_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.account)
}
inline ::std::string* Player::mutable_account() {
  set_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    account_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.account)
  return account_;
}
inline ::std::string* Player::release_account() {
  clear_has_account();
  if (account_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = account_;
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_account(::std::string* account) {
  if (account_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete account_;
  }
  if (account) {
    set_has_account();
    account_ = account;
  } else {
    clear_has_account();
    account_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.account)
}

// optional uint32 super_gm = 76;
inline bool Player::has_super_gm() const {
  return (_has_bits_[2] & 0x00000800u) != 0;
}
inline void Player::set_has_super_gm() {
  _has_bits_[2] |= 0x00000800u;
}
inline void Player::clear_has_super_gm() {
  _has_bits_[2] &= ~0x00000800u;
}
inline void Player::clear_super_gm() {
  super_gm_ = 0u;
  clear_has_super_gm();
}
inline ::google::protobuf::uint32 Player::super_gm() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.super_gm)
  return super_gm_;
}
inline void Player::set_super_gm(::google::protobuf::uint32 value) {
  set_has_super_gm();
  super_gm_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.super_gm)
}

// optional uint64 achievement = 77;
inline bool Player::has_achievement() const {
  return (_has_bits_[2] & 0x00001000u) != 0;
}
inline void Player::set_has_achievement() {
  _has_bits_[2] |= 0x00001000u;
}
inline void Player::clear_has_achievement() {
  _has_bits_[2] &= ~0x00001000u;
}
inline void Player::clear_achievement() {
  achievement_ = GOOGLE_ULONGLONG(0);
  clear_has_achievement();
}
inline ::google::protobuf::uint64 Player::achievement() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.achievement)
  return achievement_;
}
inline void Player::set_achievement(::google::protobuf::uint64 value) {
  set_has_achievement();
  achievement_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.achievement)
}

// optional uint64 practice = 78;
inline bool Player::has_practice() const {
  return (_has_bits_[2] & 0x00002000u) != 0;
}
inline void Player::set_has_practice() {
  _has_bits_[2] |= 0x00002000u;
}
inline void Player::clear_has_practice() {
  _has_bits_[2] &= ~0x00002000u;
}
inline void Player::clear_practice() {
  practice_ = GOOGLE_ULONGLONG(0);
  clear_has_practice();
}
inline ::google::protobuf::uint64 Player::practice() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.practice)
  return practice_;
}
inline void Player::set_practice(::google::protobuf::uint64 value) {
  set_has_practice();
  practice_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.practice)
}

// optional uint32 flower_rank = 79;
inline bool Player::has_flower_rank() const {
  return (_has_bits_[2] & 0x00004000u) != 0;
}
inline void Player::set_has_flower_rank() {
  _has_bits_[2] |= 0x00004000u;
}
inline void Player::clear_has_flower_rank() {
  _has_bits_[2] &= ~0x00004000u;
}
inline void Player::clear_flower_rank() {
  flower_rank_ = 0u;
  clear_has_flower_rank();
}
inline ::google::protobuf::uint32 Player::flower_rank() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.flower_rank)
  return flower_rank_;
}
inline void Player::set_flower_rank(::google::protobuf::uint32 value) {
  set_has_flower_rank();
  flower_rank_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.flower_rank)
}

// optional uint64 daily_points = 80;
inline bool Player::has_daily_points() const {
  return (_has_bits_[2] & 0x00008000u) != 0;
}
inline void Player::set_has_daily_points() {
  _has_bits_[2] |= 0x00008000u;
}
inline void Player::clear_has_daily_points() {
  _has_bits_[2] &= ~0x00008000u;
}
inline void Player::clear_daily_points() {
  daily_points_ = GOOGLE_ULONGLONG(0);
  clear_has_daily_points();
}
inline ::google::protobuf::uint64 Player::daily_points() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.daily_points)
  return daily_points_;
}
inline void Player::set_daily_points(::google::protobuf::uint64 value) {
  set_has_daily_points();
  daily_points_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.daily_points)
}

// optional uint64 tower = 81;
inline bool Player::has_tower() const {
  return (_has_bits_[2] & 0x00010000u) != 0;
}
inline void Player::set_has_tower() {
  _has_bits_[2] |= 0x00010000u;
}
inline void Player::clear_has_tower() {
  _has_bits_[2] &= ~0x00010000u;
}
inline void Player::clear_tower() {
  tower_ = GOOGLE_ULONGLONG(0);
  clear_has_tower();
}
inline ::google::protobuf::uint64 Player::tower() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.tower)
  return tower_;
}
inline void Player::set_tower(::google::protobuf::uint64 value) {
  set_has_tower();
  tower_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.tower)
}

// optional uint32 start_stheno = 82;
inline bool Player::has_start_stheno() const {
  return (_has_bits_[2] & 0x00020000u) != 0;
}
inline void Player::set_has_start_stheno() {
  _has_bits_[2] |= 0x00020000u;
}
inline void Player::clear_has_start_stheno() {
  _has_bits_[2] &= ~0x00020000u;
}
inline void Player::clear_start_stheno() {
  start_stheno_ = 0u;
  clear_has_start_stheno();
}
inline ::google::protobuf::uint32 Player::start_stheno() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.start_stheno)
  return start_stheno_;
}
inline void Player::set_start_stheno(::google::protobuf::uint32 value) {
  set_has_start_stheno();
  start_stheno_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.start_stheno)
}

// optional uint64 tavern = 83;
inline bool Player::has_tavern() const {
  return (_has_bits_[2] & 0x00040000u) != 0;
}
inline void Player::set_has_tavern() {
  _has_bits_[2] |= 0x00040000u;
}
inline void Player::clear_has_tavern() {
  _has_bits_[2] &= ~0x00040000u;
}
inline void Player::clear_tavern() {
  tavern_ = GOOGLE_ULONGLONG(0);
  clear_has_tavern();
}
inline ::google::protobuf::uint64 Player::tavern() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.tavern)
  return tavern_;
}
inline void Player::set_tavern(::google::protobuf::uint64 value) {
  set_has_tavern();
  tavern_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.tavern)
}

// optional uint64 fish = 84;
inline bool Player::has_fish() const {
  return (_has_bits_[2] & 0x00080000u) != 0;
}
inline void Player::set_has_fish() {
  _has_bits_[2] |= 0x00080000u;
}
inline void Player::clear_has_fish() {
  _has_bits_[2] &= ~0x00080000u;
}
inline void Player::clear_fish() {
  fish_ = GOOGLE_ULONGLONG(0);
  clear_has_fish();
}
inline ::google::protobuf::uint64 Player::fish() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.fish)
  return fish_;
}
inline void Player::set_fish(::google::protobuf::uint64 value) {
  set_has_fish();
  fish_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.fish)
}

// optional uint64 dodge = 85;
inline bool Player::has_dodge() const {
  return (_has_bits_[2] & 0x00100000u) != 0;
}
inline void Player::set_has_dodge() {
  _has_bits_[2] |= 0x00100000u;
}
inline void Player::clear_has_dodge() {
  _has_bits_[2] &= ~0x00100000u;
}
inline void Player::clear_dodge() {
  dodge_ = GOOGLE_ULONGLONG(0);
  clear_has_dodge();
}
inline ::google::protobuf::uint64 Player::dodge() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.dodge)
  return dodge_;
}
inline void Player::set_dodge(::google::protobuf::uint64 value) {
  set_has_dodge();
  dodge_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.dodge)
}

// optional uint32 guild_icon = 86;
inline bool Player::has_guild_icon() const {
  return (_has_bits_[2] & 0x00200000u) != 0;
}
inline void Player::set_has_guild_icon() {
  _has_bits_[2] |= 0x00200000u;
}
inline void Player::clear_has_guild_icon() {
  _has_bits_[2] &= ~0x00200000u;
}
inline void Player::clear_guild_icon() {
  guild_icon_ = 0u;
  clear_has_guild_icon();
}
inline ::google::protobuf::uint32 Player::guild_icon() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.guild_icon)
  return guild_icon_;
}
inline void Player::set_guild_icon(::google::protobuf::uint32 value) {
  set_has_guild_icon();
  guild_icon_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.guild_icon)
}

// repeated uint64 wifes = 87;
inline int Player::wifes_size() const {
  return wifes_.size();
}
inline void Player::clear_wifes() {
  wifes_.Clear();
}
inline ::google::protobuf::uint64 Player::wifes(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.wifes)
  return wifes_.Get(index);
}
inline void Player::set_wifes(int index, ::google::protobuf::uint64 value) {
  wifes_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.wifes)
}
inline void Player::add_wifes(::google::protobuf::uint64 value) {
  wifes_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.wifes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::wifes() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.wifes)
  return wifes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_wifes() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.wifes)
  return &wifes_;
}

// optional uint64 player_wife = 88;
inline bool Player::has_player_wife() const {
  return (_has_bits_[2] & 0x00800000u) != 0;
}
inline void Player::set_has_player_wife() {
  _has_bits_[2] |= 0x00800000u;
}
inline void Player::clear_has_player_wife() {
  _has_bits_[2] &= ~0x00800000u;
}
inline void Player::clear_player_wife() {
  player_wife_ = GOOGLE_ULONGLONG(0);
  clear_has_player_wife();
}
inline ::google::protobuf::uint64 Player::player_wife() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.player_wife)
  return player_wife_;
}
inline void Player::set_player_wife(::google::protobuf::uint64 value) {
  set_has_player_wife();
  player_wife_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.player_wife)
}

// optional uint64 player_activies = 89;
inline bool Player::has_player_activies() const {
  return (_has_bits_[2] & 0x01000000u) != 0;
}
inline void Player::set_has_player_activies() {
  _has_bits_[2] |= 0x01000000u;
}
inline void Player::clear_has_player_activies() {
  _has_bits_[2] &= ~0x01000000u;
}
inline void Player::clear_player_activies() {
  player_activies_ = GOOGLE_ULONGLONG(0);
  clear_has_player_activies();
}
inline ::google::protobuf::uint64 Player::player_activies() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.player_activies)
  return player_activies_;
}
inline void Player::set_player_activies(::google::protobuf::uint64 value) {
  set_has_player_activies();
  player_activies_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.player_activies)
}

// optional uint64 last_energy_reward_time = 90;
inline bool Player::has_last_energy_reward_time() const {
  return (_has_bits_[2] & 0x02000000u) != 0;
}
inline void Player::set_has_last_energy_reward_time() {
  _has_bits_[2] |= 0x02000000u;
}
inline void Player::clear_has_last_energy_reward_time() {
  _has_bits_[2] &= ~0x02000000u;
}
inline void Player::clear_last_energy_reward_time() {
  last_energy_reward_time_ = GOOGLE_ULONGLONG(0);
  clear_has_last_energy_reward_time();
}
inline ::google::protobuf::uint64 Player::last_energy_reward_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_energy_reward_time)
  return last_energy_reward_time_;
}
inline void Player::set_last_energy_reward_time(::google::protobuf::uint64 value) {
  set_has_last_energy_reward_time();
  last_energy_reward_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_energy_reward_time)
}

// optional uint32 left_energy_reward = 91;
inline bool Player::has_left_energy_reward() const {
  return (_has_bits_[2] & 0x04000000u) != 0;
}
inline void Player::set_has_left_energy_reward() {
  _has_bits_[2] |= 0x04000000u;
}
inline void Player::clear_has_left_energy_reward() {
  _has_bits_[2] &= ~0x04000000u;
}
inline void Player::clear_left_energy_reward() {
  left_energy_reward_ = 0u;
  clear_has_left_energy_reward();
}
inline ::google::protobuf::uint32 Player::left_energy_reward() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.left_energy_reward)
  return left_energy_reward_;
}
inline void Player::set_left_energy_reward(::google::protobuf::uint32 value) {
  set_has_left_energy_reward();
  left_energy_reward_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.left_energy_reward)
}

// optional uint64 maze = 92;
inline bool Player::has_maze() const {
  return (_has_bits_[2] & 0x08000000u) != 0;
}
inline void Player::set_has_maze() {
  _has_bits_[2] |= 0x08000000u;
}
inline void Player::clear_has_maze() {
  _has_bits_[2] &= ~0x08000000u;
}
inline void Player::clear_maze() {
  maze_ = GOOGLE_ULONGLONG(0);
  clear_has_maze();
}
inline ::google::protobuf::uint64 Player::maze() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.maze)
  return maze_;
}
inline void Player::set_maze(::google::protobuf::uint64 value) {
  set_has_maze();
  maze_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.maze)
}

// optional uint64 open_activity = 93;
inline bool Player::has_open_activity() const {
  return (_has_bits_[2] & 0x10000000u) != 0;
}
inline void Player::set_has_open_activity() {
  _has_bits_[2] |= 0x10000000u;
}
inline void Player::clear_has_open_activity() {
  _has_bits_[2] &= ~0x10000000u;
}
inline void Player::clear_open_activity() {
  open_activity_ = GOOGLE_ULONGLONG(0);
  clear_has_open_activity();
}
inline ::google::protobuf::uint64 Player::open_activity() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.open_activity)
  return open_activity_;
}
inline void Player::set_open_activity(::google::protobuf::uint64 value) {
  set_has_open_activity();
  open_activity_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.open_activity)
}

// optional uint64 open_act = 94;
inline bool Player::has_open_act() const {
  return (_has_bits_[2] & 0x20000000u) != 0;
}
inline void Player::set_has_open_act() {
  _has_bits_[2] |= 0x20000000u;
}
inline void Player::clear_has_open_act() {
  _has_bits_[2] &= ~0x20000000u;
}
inline void Player::clear_open_act() {
  open_act_ = GOOGLE_ULONGLONG(0);
  clear_has_open_act();
}
inline ::google::protobuf::uint64 Player::open_act() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.open_act)
  return open_act_;
}
inline void Player::set_open_act(::google::protobuf::uint64 value) {
  set_has_open_act();
  open_act_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.open_act)
}

// optional uint64 coin_guid = 95;
inline bool Player::has_coin_guid() const {
  return (_has_bits_[2] & 0x40000000u) != 0;
}
inline void Player::set_has_coin_guid() {
  _has_bits_[2] |= 0x40000000u;
}
inline void Player::clear_has_coin_guid() {
  _has_bits_[2] &= ~0x40000000u;
}
inline void Player::clear_coin_guid() {
  coin_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_coin_guid();
}
inline ::google::protobuf::uint64 Player::coin_guid() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.coin_guid)
  return coin_guid_;
}
inline void Player::set_coin_guid(::google::protobuf::uint64 value) {
  set_has_coin_guid();
  coin_guid_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.coin_guid)
}

// optional string last_logoff_time_str = 96;
inline bool Player::has_last_logoff_time_str() const {
  return (_has_bits_[2] & 0x80000000u) != 0;
}
inline void Player::set_has_last_logoff_time_str() {
  _has_bits_[2] |= 0x80000000u;
}
inline void Player::clear_has_last_logoff_time_str() {
  _has_bits_[2] &= ~0x80000000u;
}
inline void Player::clear_last_logoff_time_str() {
  if (last_logoff_time_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_logoff_time_str_->clear();
  }
  clear_has_last_logoff_time_str();
}
inline const ::std::string& Player::last_logoff_time_str() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.last_logoff_time_str)
  return *last_logoff_time_str_;
}
inline void Player::set_last_logoff_time_str(const ::std::string& value) {
  set_has_last_logoff_time_str();
  if (last_logoff_time_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_logoff_time_str_ = new ::std::string;
  }
  last_logoff_time_str_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.last_logoff_time_str)
}
inline void Player::set_last_logoff_time_str(const char* value) {
  set_has_last_logoff_time_str();
  if (last_logoff_time_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_logoff_time_str_ = new ::std::string;
  }
  last_logoff_time_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.last_logoff_time_str)
}
inline void Player::set_last_logoff_time_str(const char* value, size_t size) {
  set_has_last_logoff_time_str();
  if (last_logoff_time_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_logoff_time_str_ = new ::std::string;
  }
  last_logoff_time_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.last_logoff_time_str)
}
inline ::std::string* Player::mutable_last_logoff_time_str() {
  set_has_last_logoff_time_str();
  if (last_logoff_time_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    last_logoff_time_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.last_logoff_time_str)
  return last_logoff_time_str_;
}
inline ::std::string* Player::release_last_logoff_time_str() {
  clear_has_last_logoff_time_str();
  if (last_logoff_time_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = last_logoff_time_str_;
    last_logoff_time_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_last_logoff_time_str(::std::string* last_logoff_time_str) {
  if (last_logoff_time_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete last_logoff_time_str_;
  }
  if (last_logoff_time_str) {
    set_has_last_logoff_time_str();
    last_logoff_time_str_ = last_logoff_time_str;
  } else {
    clear_has_last_logoff_time_str();
    last_logoff_time_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.last_logoff_time_str)
}

// repeated uint32 give_equip = 97;
inline int Player::give_equip_size() const {
  return give_equip_.size();
}
inline void Player::clear_give_equip() {
  give_equip_.Clear();
}
inline ::google::protobuf::uint32 Player::give_equip(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.give_equip)
  return give_equip_.Get(index);
}
inline void Player::set_give_equip(int index, ::google::protobuf::uint32 value) {
  give_equip_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.give_equip)
}
inline void Player::add_give_equip(::google::protobuf::uint32 value) {
  give_equip_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.give_equip)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::give_equip() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.give_equip)
  return give_equip_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_give_equip() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.give_equip)
  return &give_equip_;
}

// repeated uint32 equip_reward = 98;
inline int Player::equip_reward_size() const {
  return equip_reward_.size();
}
inline void Player::clear_equip_reward() {
  equip_reward_.Clear();
}
inline ::google::protobuf::uint32 Player::equip_reward(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.equip_reward)
  return equip_reward_.Get(index);
}
inline void Player::set_equip_reward(int index, ::google::protobuf::uint32 value) {
  equip_reward_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.equip_reward)
}
inline void Player::add_equip_reward(::google::protobuf::uint32 value) {
  equip_reward_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.equip_reward)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::equip_reward() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.equip_reward)
  return equip_reward_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_equip_reward() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.equip_reward)
  return &equip_reward_;
}

// optional uint32 follow_role_id = 99;
inline bool Player::has_follow_role_id() const {
  return (_has_bits_[3] & 0x00000004u) != 0;
}
inline void Player::set_has_follow_role_id() {
  _has_bits_[3] |= 0x00000004u;
}
inline void Player::clear_has_follow_role_id() {
  _has_bits_[3] &= ~0x00000004u;
}
inline void Player::clear_follow_role_id() {
  follow_role_id_ = 0u;
  clear_has_follow_role_id();
}
inline ::google::protobuf::uint32 Player::follow_role_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.follow_role_id)
  return follow_role_id_;
}
inline void Player::set_follow_role_id(::google::protobuf::uint32 value) {
  set_has_follow_role_id();
  follow_role_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.follow_role_id)
}

// optional uint32 max_power = 100;
inline bool Player::has_max_power() const {
  return (_has_bits_[3] & 0x00000008u) != 0;
}
inline void Player::set_has_max_power() {
  _has_bits_[3] |= 0x00000008u;
}
inline void Player::clear_has_max_power() {
  _has_bits_[3] &= ~0x00000008u;
}
inline void Player::clear_max_power() {
  max_power_ = 0u;
  clear_has_max_power();
}
inline ::google::protobuf::uint32 Player::max_power() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.max_power)
  return max_power_;
}
inline void Player::set_max_power(::google::protobuf::uint32 value) {
  set_has_max_power();
  max_power_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.max_power)
}

// repeated uint32 item_id = 101;
inline int Player::item_id_size() const {
  return item_id_.size();
}
inline void Player::clear_item_id() {
  item_id_.Clear();
}
inline ::google::protobuf::uint32 Player::item_id(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.item_id)
  return item_id_.Get(index);
}
inline void Player::set_item_id(int index, ::google::protobuf::uint32 value) {
  item_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.item_id)
}
inline void Player::add_item_id(::google::protobuf::uint32 value) {
  item_id_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.item_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::item_id() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.item_id)
  return item_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_item_id() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.item_id)
  return &item_id_;
}

// repeated uint32 item_num = 102;
inline int Player::item_num_size() const {
  return item_num_.size();
}
inline void Player::clear_item_num() {
  item_num_.Clear();
}
inline ::google::protobuf::uint32 Player::item_num(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.item_num)
  return item_num_.Get(index);
}
inline void Player::set_item_num(int index, ::google::protobuf::uint32 value) {
  item_num_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.item_num)
}
inline void Player::add_item_num(::google::protobuf::uint32 value) {
  item_num_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.item_num)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::item_num() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.item_num)
  return item_num_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_item_num() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.item_num)
  return &item_num_;
}

// repeated uint32 current_title = 103;
inline int Player::current_title_size() const {
  return current_title_.size();
}
inline void Player::clear_current_title() {
  current_title_.Clear();
}
inline ::google::protobuf::uint32 Player::current_title(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.current_title)
  return current_title_.Get(index);
}
inline void Player::set_current_title(int index, ::google::protobuf::uint32 value) {
  current_title_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.current_title)
}
inline void Player::add_current_title(::google::protobuf::uint32 value) {
  current_title_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.current_title)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::current_title() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.current_title)
  return current_title_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_current_title() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.current_title)
  return &current_title_;
}

// optional uint32 enable_title = 104;
inline bool Player::has_enable_title() const {
  return (_has_bits_[3] & 0x00000080u) != 0;
}
inline void Player::set_has_enable_title() {
  _has_bits_[3] |= 0x00000080u;
}
inline void Player::clear_has_enable_title() {
  _has_bits_[3] &= ~0x00000080u;
}
inline void Player::clear_enable_title() {
  enable_title_ = 0u;
  clear_has_enable_title();
}
inline ::google::protobuf::uint32 Player::enable_title() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.enable_title)
  return enable_title_;
}
inline void Player::set_enable_title(::google::protobuf::uint32 value) {
  set_has_enable_title();
  enable_title_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.enable_title)
}

// repeated uint32 push_id_list = 105;
inline int Player::push_id_list_size() const {
  return push_id_list_.size();
}
inline void Player::clear_push_id_list() {
  push_id_list_.Clear();
}
inline ::google::protobuf::uint32 Player::push_id_list(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.push_id_list)
  return push_id_list_.Get(index);
}
inline void Player::set_push_id_list(int index, ::google::protobuf::uint32 value) {
  push_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.push_id_list)
}
inline void Player::add_push_id_list(::google::protobuf::uint32 value) {
  push_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.push_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::push_id_list() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.push_id_list)
  return push_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_push_id_list() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.push_id_list)
  return &push_id_list_;
}

// repeated uint32 push_status_list = 106;
inline int Player::push_status_list_size() const {
  return push_status_list_.size();
}
inline void Player::clear_push_status_list() {
  push_status_list_.Clear();
}
inline ::google::protobuf::uint32 Player::push_status_list(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.push_status_list)
  return push_status_list_.Get(index);
}
inline void Player::set_push_status_list(int index, ::google::protobuf::uint32 value) {
  push_status_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.push_status_list)
}
inline void Player::add_push_status_list(::google::protobuf::uint32 value) {
  push_status_list_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.push_status_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Player::push_status_list() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.push_status_list)
  return push_status_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Player::mutable_push_status_list() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.push_status_list)
  return &push_status_list_;
}

// optional uint32 jifen = 107;
inline bool Player::has_jifen() const {
  return (_has_bits_[3] & 0x00000400u) != 0;
}
inline void Player::set_has_jifen() {
  _has_bits_[3] |= 0x00000400u;
}
inline void Player::clear_has_jifen() {
  _has_bits_[3] &= ~0x00000400u;
}
inline void Player::clear_jifen() {
  jifen_ = 0u;
  clear_has_jifen();
}
inline ::google::protobuf::uint32 Player::jifen() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.jifen)
  return jifen_;
}
inline void Player::set_jifen(::google::protobuf::uint32 value) {
  set_has_jifen();
  jifen_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.jifen)
}

// optional uint64 total_money_cost = 108;
inline bool Player::has_total_money_cost() const {
  return (_has_bits_[3] & 0x00000800u) != 0;
}
inline void Player::set_has_total_money_cost() {
  _has_bits_[3] |= 0x00000800u;
}
inline void Player::clear_has_total_money_cost() {
  _has_bits_[3] &= ~0x00000800u;
}
inline void Player::clear_total_money_cost() {
  total_money_cost_ = GOOGLE_ULONGLONG(0);
  clear_has_total_money_cost();
}
inline ::google::protobuf::uint64 Player::total_money_cost() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.total_money_cost)
  return total_money_cost_;
}
inline void Player::set_total_money_cost(::google::protobuf::uint64 value) {
  set_has_total_money_cost();
  total_money_cost_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.total_money_cost)
}

// optional uint64 total_coin_cost = 109;
inline bool Player::has_total_coin_cost() const {
  return (_has_bits_[3] & 0x00001000u) != 0;
}
inline void Player::set_has_total_coin_cost() {
  _has_bits_[3] |= 0x00001000u;
}
inline void Player::clear_has_total_coin_cost() {
  _has_bits_[3] &= ~0x00001000u;
}
inline void Player::clear_total_coin_cost() {
  total_coin_cost_ = GOOGLE_ULONGLONG(0);
  clear_has_total_coin_cost();
}
inline ::google::protobuf::uint64 Player::total_coin_cost() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.total_coin_cost)
  return total_coin_cost_;
}
inline void Player::set_total_coin_cost(::google::protobuf::uint64 value) {
  set_has_total_coin_cost();
  total_coin_cost_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.total_coin_cost)
}

// optional uint64 total_seni_cost = 110;
inline bool Player::has_total_seni_cost() const {
  return (_has_bits_[3] & 0x00002000u) != 0;
}
inline void Player::set_has_total_seni_cost() {
  _has_bits_[3] |= 0x00002000u;
}
inline void Player::clear_has_total_seni_cost() {
  _has_bits_[3] &= ~0x00002000u;
}
inline void Player::clear_total_seni_cost() {
  total_seni_cost_ = GOOGLE_ULONGLONG(0);
  clear_has_total_seni_cost();
}
inline ::google::protobuf::uint64 Player::total_seni_cost() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.total_seni_cost)
  return total_seni_cost_;
}
inline void Player::set_total_seni_cost(::google::protobuf::uint64 value) {
  set_has_total_seni_cost();
  total_seni_cost_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.total_seni_cost)
}

// optional uint32 charge_quest = 111;
inline bool Player::has_charge_quest() const {
  return (_has_bits_[3] & 0x00004000u) != 0;
}
inline void Player::set_has_charge_quest() {
  _has_bits_[3] |= 0x00004000u;
}
inline void Player::clear_has_charge_quest() {
  _has_bits_[3] &= ~0x00004000u;
}
inline void Player::clear_charge_quest() {
  charge_quest_ = 0u;
  clear_has_charge_quest();
}
inline ::google::protobuf::uint32 Player::charge_quest() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.charge_quest)
  return charge_quest_;
}
inline void Player::set_charge_quest(::google::protobuf::uint32 value) {
  set_has_charge_quest();
  charge_quest_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.charge_quest)
}

// optional uint64 trial = 112;
inline bool Player::has_trial() const {
  return (_has_bits_[3] & 0x00008000u) != 0;
}
inline void Player::set_has_trial() {
  _has_bits_[3] |= 0x00008000u;
}
inline void Player::clear_has_trial() {
  _has_bits_[3] &= ~0x00008000u;
}
inline void Player::clear_trial() {
  trial_ = GOOGLE_ULONGLONG(0);
  clear_has_trial();
}
inline ::google::protobuf::uint64 Player::trial() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.trial)
  return trial_;
}
inline void Player::set_trial(::google::protobuf::uint64 value) {
  set_has_trial();
  trial_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.trial)
}

// optional uint64 runes = 113;
inline bool Player::has_runes() const {
  return (_has_bits_[3] & 0x00010000u) != 0;
}
inline void Player::set_has_runes() {
  _has_bits_[3] |= 0x00010000u;
}
inline void Player::clear_has_runes() {
  _has_bits_[3] &= ~0x00010000u;
}
inline void Player::clear_runes() {
  runes_ = GOOGLE_ULONGLONG(0);
  clear_has_runes();
}
inline ::google::protobuf::uint64 Player::runes() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.runes)
  return runes_;
}
inline void Player::set_runes(::google::protobuf::uint64 value) {
  set_has_runes();
  runes_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.runes)
}

// optional uint64 shl_switch = 114;
inline bool Player::has_shl_switch() const {
  return (_has_bits_[3] & 0x00020000u) != 0;
}
inline void Player::set_has_shl_switch() {
  _has_bits_[3] |= 0x00020000u;
}
inline void Player::clear_has_shl_switch() {
  _has_bits_[3] &= ~0x00020000u;
}
inline void Player::clear_shl_switch() {
  shl_switch_ = GOOGLE_ULONGLONG(0);
  clear_has_shl_switch();
}
inline ::google::protobuf::uint64 Player::shl_switch() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.shl_switch)
  return shl_switch_;
}
inline void Player::set_shl_switch(::google::protobuf::uint64 value) {
  set_has_shl_switch();
  shl_switch_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.shl_switch)
}

// optional uint64 doubleexp = 115;
inline bool Player::has_doubleexp() const {
  return (_has_bits_[3] & 0x00040000u) != 0;
}
inline void Player::set_has_doubleexp() {
  _has_bits_[3] |= 0x00040000u;
}
inline void Player::clear_has_doubleexp() {
  _has_bits_[3] &= ~0x00040000u;
}
inline void Player::clear_doubleexp() {
  doubleexp_ = GOOGLE_ULONGLONG(0);
  clear_has_doubleexp();
}
inline ::google::protobuf::uint64 Player::doubleexp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.doubleexp)
  return doubleexp_;
}
inline void Player::set_doubleexp(::google::protobuf::uint64 value) {
  set_has_doubleexp();
  doubleexp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.doubleexp)
}

// optional uint64 soul_pve_guid = 116;
inline bool Player::has_soul_pve_guid() const {
  return (_has_bits_[3] & 0x00080000u) != 0;
}
inline void Player::set_has_soul_pve_guid() {
  _has_bits_[3] |= 0x00080000u;
}
inline void Player::clear_has_soul_pve_guid() {
  _has_bits_[3] &= ~0x00080000u;
}
inline void Player::clear_soul_pve_guid() {
  soul_pve_guid_ = GOOGLE_ULONGLONG(0);
  clear_has_soul_pve_guid();
}
inline ::google::protobuf::uint64 Player::soul_pve_guid() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.soul_pve_guid)
  return soul_pve_guid_;
}
inline void Player::set_soul_pve_guid(::google::protobuf::uint64 value) {
  set_has_soul_pve_guid();
  soul_pve_guid_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.soul_pve_guid)
}

// optional uint64 soul = 117;
inline bool Player::has_soul() const {
  return (_has_bits_[3] & 0x00100000u) != 0;
}
inline void Player::set_has_soul() {
  _has_bits_[3] |= 0x00100000u;
}
inline void Player::clear_has_soul() {
  _has_bits_[3] &= ~0x00100000u;
}
inline void Player::clear_soul() {
  soul_ = GOOGLE_ULONGLONG(0);
  clear_has_soul();
}
inline ::google::protobuf::uint64 Player::soul() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.soul)
  return soul_;
}
inline void Player::set_soul(::google::protobuf::uint64 value) {
  set_has_soul();
  soul_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.soul)
}

// optional uint32 soul_frag = 118;
inline bool Player::has_soul_frag() const {
  return (_has_bits_[3] & 0x00200000u) != 0;
}
inline void Player::set_has_soul_frag() {
  _has_bits_[3] |= 0x00200000u;
}
inline void Player::clear_has_soul_frag() {
  _has_bits_[3] &= ~0x00200000u;
}
inline void Player::clear_soul_frag() {
  soul_frag_ = 0u;
  clear_has_soul_frag();
}
inline ::google::protobuf::uint32 Player::soul_frag() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.soul_frag)
  return soul_frag_;
}
inline void Player::set_soul_frag(::google::protobuf::uint32 value) {
  set_has_soul_frag();
  soul_frag_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.soul_frag)
}

// optional uint64 login_gift = 119;
inline bool Player::has_login_gift() const {
  return (_has_bits_[3] & 0x00400000u) != 0;
}
inline void Player::set_has_login_gift() {
  _has_bits_[3] |= 0x00400000u;
}
inline void Player::clear_has_login_gift() {
  _has_bits_[3] &= ~0x00400000u;
}
inline void Player::clear_login_gift() {
  login_gift_ = GOOGLE_ULONGLONG(0);
  clear_has_login_gift();
}
inline ::google::protobuf::uint64 Player::login_gift() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.login_gift)
  return login_gift_;
}
inline void Player::set_login_gift(::google::protobuf::uint64 value) {
  set_has_login_gift();
  login_gift_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.login_gift)
}

// optional uint64 super_power = 120;
inline bool Player::has_super_power() const {
  return (_has_bits_[3] & 0x00800000u) != 0;
}
inline void Player::set_has_super_power() {
  _has_bits_[3] |= 0x00800000u;
}
inline void Player::clear_has_super_power() {
  _has_bits_[3] &= ~0x00800000u;
}
inline void Player::clear_super_power() {
  super_power_ = GOOGLE_ULONGLONG(0);
  clear_has_super_power();
}
inline ::google::protobuf::uint64 Player::super_power() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.super_power)
  return super_power_;
}
inline void Player::set_super_power(::google::protobuf::uint64 value) {
  set_has_super_power();
  super_power_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.super_power)
}

// optional string platform = 121;
inline bool Player::has_platform() const {
  return (_has_bits_[3] & 0x01000000u) != 0;
}
inline void Player::set_has_platform() {
  _has_bits_[3] |= 0x01000000u;
}
inline void Player::clear_has_platform() {
  _has_bits_[3] &= ~0x01000000u;
}
inline void Player::clear_platform() {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_->clear();
  }
  clear_has_platform();
}
inline const ::std::string& Player::platform() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.platform)
  return *platform_;
}
inline void Player::set_platform(const ::std::string& value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.platform)
}
inline void Player::set_platform(const char* value) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.platform)
}
inline void Player::set_platform(const char* value, size_t size) {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  platform_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.platform)
}
inline ::std::string* Player::mutable_platform() {
  set_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    platform_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.platform)
  return platform_;
}
inline ::std::string* Player::release_platform() {
  clear_has_platform();
  if (platform_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = platform_;
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_platform(::std::string* platform) {
  if (platform_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete platform_;
  }
  if (platform) {
    set_has_platform();
    platform_ = platform;
  } else {
    clear_has_platform();
    platform_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.platform)
}

// optional uint64 goldcard = 122;
inline bool Player::has_goldcard() const {
  return (_has_bits_[3] & 0x02000000u) != 0;
}
inline void Player::set_has_goldcard() {
  _has_bits_[3] |= 0x02000000u;
}
inline void Player::clear_has_goldcard() {
  _has_bits_[3] &= ~0x02000000u;
}
inline void Player::clear_goldcard() {
  goldcard_ = GOOGLE_ULONGLONG(0);
  clear_has_goldcard();
}
inline ::google::protobuf::uint64 Player::goldcard() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.goldcard)
  return goldcard_;
}
inline void Player::set_goldcard(::google::protobuf::uint64 value) {
  set_has_goldcard();
  goldcard_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.goldcard)
}

// optional uint32 special_right = 123;
inline bool Player::has_special_right() const {
  return (_has_bits_[3] & 0x04000000u) != 0;
}
inline void Player::set_has_special_right() {
  _has_bits_[3] |= 0x04000000u;
}
inline void Player::clear_has_special_right() {
  _has_bits_[3] &= ~0x04000000u;
}
inline void Player::clear_special_right() {
  special_right_ = 0u;
  clear_has_special_right();
}
inline ::google::protobuf::uint32 Player::special_right() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.special_right)
  return special_right_;
}
inline void Player::set_special_right(::google::protobuf::uint32 value) {
  set_has_special_right();
  special_right_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.special_right)
}

// optional uint64 talent = 124;
inline bool Player::has_talent() const {
  return (_has_bits_[3] & 0x08000000u) != 0;
}
inline void Player::set_has_talent() {
  _has_bits_[3] |= 0x08000000u;
}
inline void Player::clear_has_talent() {
  _has_bits_[3] &= ~0x08000000u;
}
inline void Player::clear_talent() {
  talent_ = GOOGLE_ULONGLONG(0);
  clear_has_talent();
}
inline ::google::protobuf::uint64 Player::talent() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.talent)
  return talent_;
}
inline void Player::set_talent(::google::protobuf::uint64 value) {
  set_has_talent();
  talent_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.talent)
}

// optional uint32 turntable_accrun = 125;
inline bool Player::has_turntable_accrun() const {
  return (_has_bits_[3] & 0x10000000u) != 0;
}
inline void Player::set_has_turntable_accrun() {
  _has_bits_[3] |= 0x10000000u;
}
inline void Player::clear_has_turntable_accrun() {
  _has_bits_[3] &= ~0x10000000u;
}
inline void Player::clear_turntable_accrun() {
  turntable_accrun_ = 0u;
  clear_has_turntable_accrun();
}
inline ::google::protobuf::uint32 Player::turntable_accrun() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.turntable_accrun)
  return turntable_accrun_;
}
inline void Player::set_turntable_accrun(::google::protobuf::uint32 value) {
  set_has_turntable_accrun();
  turntable_accrun_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.turntable_accrun)
}

// repeated uint64 touch_times = 126;
inline int Player::touch_times_size() const {
  return touch_times_.size();
}
inline void Player::clear_touch_times() {
  touch_times_.Clear();
}
inline ::google::protobuf::uint64 Player::touch_times(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.touch_times)
  return touch_times_.Get(index);
}
inline void Player::set_touch_times(int index, ::google::protobuf::uint64 value) {
  touch_times_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.touch_times)
}
inline void Player::add_touch_times(::google::protobuf::uint64 value) {
  touch_times_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Player.touch_times)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Player::touch_times() const {
  // @@protoc_insertion_point(field_list:typed.entity.Player.touch_times)
  return touch_times_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Player::mutable_touch_times() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Player.touch_times)
  return &touch_times_;
}

// optional string validate_str = 127;
inline bool Player::has_validate_str() const {
  return (_has_bits_[3] & 0x40000000u) != 0;
}
inline void Player::set_has_validate_str() {
  _has_bits_[3] |= 0x40000000u;
}
inline void Player::clear_has_validate_str() {
  _has_bits_[3] &= ~0x40000000u;
}
inline void Player::clear_validate_str() {
  if (validate_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    validate_str_->clear();
  }
  clear_has_validate_str();
}
inline const ::std::string& Player::validate_str() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.validate_str)
  return *validate_str_;
}
inline void Player::set_validate_str(const ::std::string& value) {
  set_has_validate_str();
  if (validate_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    validate_str_ = new ::std::string;
  }
  validate_str_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.validate_str)
}
inline void Player::set_validate_str(const char* value) {
  set_has_validate_str();
  if (validate_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    validate_str_ = new ::std::string;
  }
  validate_str_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.validate_str)
}
inline void Player::set_validate_str(const char* value, size_t size) {
  set_has_validate_str();
  if (validate_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    validate_str_ = new ::std::string;
  }
  validate_str_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.validate_str)
}
inline ::std::string* Player::mutable_validate_str() {
  set_has_validate_str();
  if (validate_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    validate_str_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.validate_str)
  return validate_str_;
}
inline ::std::string* Player::release_validate_str() {
  clear_has_validate_str();
  if (validate_str_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = validate_str_;
    validate_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_validate_str(::std::string* validate_str) {
  if (validate_str_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete validate_str_;
  }
  if (validate_str) {
    set_has_validate_str();
    validate_str_ = validate_str;
  } else {
    clear_has_validate_str();
    validate_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.validate_str)
}

// optional uint32 vip_level_init = 128;
inline bool Player::has_vip_level_init() const {
  return (_has_bits_[3] & 0x80000000u) != 0;
}
inline void Player::set_has_vip_level_init() {
  _has_bits_[3] |= 0x80000000u;
}
inline void Player::clear_has_vip_level_init() {
  _has_bits_[3] &= ~0x80000000u;
}
inline void Player::clear_vip_level_init() {
  vip_level_init_ = 0u;
  clear_has_vip_level_init();
}
inline ::google::protobuf::uint32 Player::vip_level_init() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.vip_level_init)
  return vip_level_init_;
}
inline void Player::set_vip_level_init(::google::protobuf::uint32 value) {
  set_has_vip_level_init();
  vip_level_init_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.vip_level_init)
}

// optional uint32 year_card = 129;
inline bool Player::has_year_card() const {
  return (_has_bits_[4] & 0x00000001u) != 0;
}
inline void Player::set_has_year_card() {
  _has_bits_[4] |= 0x00000001u;
}
inline void Player::clear_has_year_card() {
  _has_bits_[4] &= ~0x00000001u;
}
inline void Player::clear_year_card() {
  year_card_ = 0u;
  clear_has_year_card();
}
inline ::google::protobuf::uint32 Player::year_card() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.year_card)
  return year_card_;
}
inline void Player::set_year_card(::google::protobuf::uint32 value) {
  set_has_year_card();
  year_card_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.year_card)
}

// optional uint32 time_stamp = 130;
inline bool Player::has_time_stamp() const {
  return (_has_bits_[4] & 0x00000002u) != 0;
}
inline void Player::set_has_time_stamp() {
  _has_bits_[4] |= 0x00000002u;
}
inline void Player::clear_has_time_stamp() {
  _has_bits_[4] &= ~0x00000002u;
}
inline void Player::clear_time_stamp() {
  time_stamp_ = 0u;
  clear_has_time_stamp();
}
inline ::google::protobuf::uint32 Player::time_stamp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.time_stamp)
  return time_stamp_;
}
inline void Player::set_time_stamp(::google::protobuf::uint32 value) {
  set_has_time_stamp();
  time_stamp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.time_stamp)
}

// optional uint64 horse = 131;
inline bool Player::has_horse() const {
  return (_has_bits_[4] & 0x00000004u) != 0;
}
inline void Player::set_has_horse() {
  _has_bits_[4] |= 0x00000004u;
}
inline void Player::clear_has_horse() {
  _has_bits_[4] &= ~0x00000004u;
}
inline void Player::clear_horse() {
  horse_ = GOOGLE_ULONGLONG(0);
  clear_has_horse();
}
inline ::google::protobuf::uint64 Player::horse() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.horse)
  return horse_;
}
inline void Player::set_horse(::google::protobuf::uint64 value) {
  set_has_horse();
  horse_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.horse)
}

// optional string robot_validate = 132;
inline bool Player::has_robot_validate() const {
  return (_has_bits_[4] & 0x00000008u) != 0;
}
inline void Player::set_has_robot_validate() {
  _has_bits_[4] |= 0x00000008u;
}
inline void Player::clear_has_robot_validate() {
  _has_bits_[4] &= ~0x00000008u;
}
inline void Player::clear_robot_validate() {
  if (robot_validate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    robot_validate_->clear();
  }
  clear_has_robot_validate();
}
inline const ::std::string& Player::robot_validate() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.robot_validate)
  return *robot_validate_;
}
inline void Player::set_robot_validate(const ::std::string& value) {
  set_has_robot_validate();
  if (robot_validate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    robot_validate_ = new ::std::string;
  }
  robot_validate_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.robot_validate)
}
inline void Player::set_robot_validate(const char* value) {
  set_has_robot_validate();
  if (robot_validate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    robot_validate_ = new ::std::string;
  }
  robot_validate_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.robot_validate)
}
inline void Player::set_robot_validate(const char* value, size_t size) {
  set_has_robot_validate();
  if (robot_validate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    robot_validate_ = new ::std::string;
  }
  robot_validate_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.robot_validate)
}
inline ::std::string* Player::mutable_robot_validate() {
  set_has_robot_validate();
  if (robot_validate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    robot_validate_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.robot_validate)
  return robot_validate_;
}
inline ::std::string* Player::release_robot_validate() {
  clear_has_robot_validate();
  if (robot_validate_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = robot_validate_;
    robot_validate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_robot_validate(::std::string* robot_validate) {
  if (robot_validate_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete robot_validate_;
  }
  if (robot_validate) {
    set_has_robot_validate();
    robot_validate_ = robot_validate;
  } else {
    clear_has_robot_validate();
    robot_validate_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.robot_validate)
}

// optional uint32 robot_id = 133;
inline bool Player::has_robot_id() const {
  return (_has_bits_[4] & 0x00000010u) != 0;
}
inline void Player::set_has_robot_id() {
  _has_bits_[4] |= 0x00000010u;
}
inline void Player::clear_has_robot_id() {
  _has_bits_[4] &= ~0x00000010u;
}
inline void Player::clear_robot_id() {
  robot_id_ = 0u;
  clear_has_robot_id();
}
inline ::google::protobuf::uint32 Player::robot_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.robot_id)
  return robot_id_;
}
inline void Player::set_robot_id(::google::protobuf::uint32 value) {
  set_has_robot_id();
  robot_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.robot_id)
}

// optional uint32 horse_id = 134;
inline bool Player::has_horse_id() const {
  return (_has_bits_[4] & 0x00000020u) != 0;
}
inline void Player::set_has_horse_id() {
  _has_bits_[4] |= 0x00000020u;
}
inline void Player::clear_has_horse_id() {
  _has_bits_[4] &= ~0x00000020u;
}
inline void Player::clear_horse_id() {
  horse_id_ = 0u;
  clear_has_horse_id();
}
inline ::google::protobuf::uint32 Player::horse_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.horse_id)
  return horse_id_;
}
inline void Player::set_horse_id(::google::protobuf::uint32 value) {
  set_has_horse_id();
  horse_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.horse_id)
}

// optional uint32 wife_follow = 135;
inline bool Player::has_wife_follow() const {
  return (_has_bits_[4] & 0x00000040u) != 0;
}
inline void Player::set_has_wife_follow() {
  _has_bits_[4] |= 0x00000040u;
}
inline void Player::clear_has_wife_follow() {
  _has_bits_[4] &= ~0x00000040u;
}
inline void Player::clear_wife_follow() {
  wife_follow_ = 0u;
  clear_has_wife_follow();
}
inline ::google::protobuf::uint32 Player::wife_follow() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.wife_follow)
  return wife_follow_;
}
inline void Player::set_wife_follow(::google::protobuf::uint32 value) {
  set_has_wife_follow();
  wife_follow_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.wife_follow)
}

// optional uint32 is_yellow_vip = 136;
inline bool Player::has_is_yellow_vip() const {
  return (_has_bits_[4] & 0x00000080u) != 0;
}
inline void Player::set_has_is_yellow_vip() {
  _has_bits_[4] |= 0x00000080u;
}
inline void Player::clear_has_is_yellow_vip() {
  _has_bits_[4] &= ~0x00000080u;
}
inline void Player::clear_is_yellow_vip() {
  is_yellow_vip_ = 0u;
  clear_has_is_yellow_vip();
}
inline ::google::protobuf::uint32 Player::is_yellow_vip() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.is_yellow_vip)
  return is_yellow_vip_;
}
inline void Player::set_is_yellow_vip(::google::protobuf::uint32 value) {
  set_has_is_yellow_vip();
  is_yellow_vip_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.is_yellow_vip)
}

// optional uint32 is_yelow_year_vip = 137;
inline bool Player::has_is_yelow_year_vip() const {
  return (_has_bits_[4] & 0x00000100u) != 0;
}
inline void Player::set_has_is_yelow_year_vip() {
  _has_bits_[4] |= 0x00000100u;
}
inline void Player::clear_has_is_yelow_year_vip() {
  _has_bits_[4] &= ~0x00000100u;
}
inline void Player::clear_is_yelow_year_vip() {
  is_yelow_year_vip_ = 0u;
  clear_has_is_yelow_year_vip();
}
inline ::google::protobuf::uint32 Player::is_yelow_year_vip() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.is_yelow_year_vip)
  return is_yelow_year_vip_;
}
inline void Player::set_is_yelow_year_vip(::google::protobuf::uint32 value) {
  set_has_is_yelow_year_vip();
  is_yelow_year_vip_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.is_yelow_year_vip)
}

// optional uint32 yellow_vip_level = 138;
inline bool Player::has_yellow_vip_level() const {
  return (_has_bits_[4] & 0x00000200u) != 0;
}
inline void Player::set_has_yellow_vip_level() {
  _has_bits_[4] |= 0x00000200u;
}
inline void Player::clear_has_yellow_vip_level() {
  _has_bits_[4] &= ~0x00000200u;
}
inline void Player::clear_yellow_vip_level() {
  yellow_vip_level_ = 0u;
  clear_has_yellow_vip_level();
}
inline ::google::protobuf::uint32 Player::yellow_vip_level() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.yellow_vip_level)
  return yellow_vip_level_;
}
inline void Player::set_yellow_vip_level(::google::protobuf::uint32 value) {
  set_has_yellow_vip_level();
  yellow_vip_level_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.yellow_vip_level)
}

// optional uint32 is_yellow_high_vip = 139;
inline bool Player::has_is_yellow_high_vip() const {
  return (_has_bits_[4] & 0x00000400u) != 0;
}
inline void Player::set_has_is_yellow_high_vip() {
  _has_bits_[4] |= 0x00000400u;
}
inline void Player::clear_has_is_yellow_high_vip() {
  _has_bits_[4] &= ~0x00000400u;
}
inline void Player::clear_is_yellow_high_vip() {
  is_yellow_high_vip_ = 0u;
  clear_has_is_yellow_high_vip();
}
inline ::google::protobuf::uint32 Player::is_yellow_high_vip() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.is_yellow_high_vip)
  return is_yellow_high_vip_;
}
inline void Player::set_is_yellow_high_vip(::google::protobuf::uint32 value) {
  set_has_is_yellow_high_vip();
  is_yellow_high_vip_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.is_yellow_high_vip)
}

// optional string open_id_qq = 140;
inline bool Player::has_open_id_qq() const {
  return (_has_bits_[4] & 0x00000800u) != 0;
}
inline void Player::set_has_open_id_qq() {
  _has_bits_[4] |= 0x00000800u;
}
inline void Player::clear_has_open_id_qq() {
  _has_bits_[4] &= ~0x00000800u;
}
inline void Player::clear_open_id_qq() {
  if (open_id_qq_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_qq_->clear();
  }
  clear_has_open_id_qq();
}
inline const ::std::string& Player::open_id_qq() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.open_id_qq)
  return *open_id_qq_;
}
inline void Player::set_open_id_qq(const ::std::string& value) {
  set_has_open_id_qq();
  if (open_id_qq_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_qq_ = new ::std::string;
  }
  open_id_qq_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.open_id_qq)
}
inline void Player::set_open_id_qq(const char* value) {
  set_has_open_id_qq();
  if (open_id_qq_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_qq_ = new ::std::string;
  }
  open_id_qq_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.open_id_qq)
}
inline void Player::set_open_id_qq(const char* value, size_t size) {
  set_has_open_id_qq();
  if (open_id_qq_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_qq_ = new ::std::string;
  }
  open_id_qq_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.open_id_qq)
}
inline ::std::string* Player::mutable_open_id_qq() {
  set_has_open_id_qq();
  if (open_id_qq_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_qq_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.open_id_qq)
  return open_id_qq_;
}
inline ::std::string* Player::release_open_id_qq() {
  clear_has_open_id_qq();
  if (open_id_qq_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = open_id_qq_;
    open_id_qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_open_id_qq(::std::string* open_id_qq) {
  if (open_id_qq_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete open_id_qq_;
  }
  if (open_id_qq) {
    set_has_open_id_qq();
    open_id_qq_ = open_id_qq;
  } else {
    clear_has_open_id_qq();
    open_id_qq_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.open_id_qq)
}

// optional string open_id_referrer = 141;
inline bool Player::has_open_id_referrer() const {
  return (_has_bits_[4] & 0x00001000u) != 0;
}
inline void Player::set_has_open_id_referrer() {
  _has_bits_[4] |= 0x00001000u;
}
inline void Player::clear_has_open_id_referrer() {
  _has_bits_[4] &= ~0x00001000u;
}
inline void Player::clear_open_id_referrer() {
  if (open_id_referrer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_referrer_->clear();
  }
  clear_has_open_id_referrer();
}
inline const ::std::string& Player::open_id_referrer() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.open_id_referrer)
  return *open_id_referrer_;
}
inline void Player::set_open_id_referrer(const ::std::string& value) {
  set_has_open_id_referrer();
  if (open_id_referrer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_referrer_ = new ::std::string;
  }
  open_id_referrer_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Player.open_id_referrer)
}
inline void Player::set_open_id_referrer(const char* value) {
  set_has_open_id_referrer();
  if (open_id_referrer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_referrer_ = new ::std::string;
  }
  open_id_referrer_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Player.open_id_referrer)
}
inline void Player::set_open_id_referrer(const char* value, size_t size) {
  set_has_open_id_referrer();
  if (open_id_referrer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_referrer_ = new ::std::string;
  }
  open_id_referrer_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Player.open_id_referrer)
}
inline ::std::string* Player::mutable_open_id_referrer() {
  set_has_open_id_referrer();
  if (open_id_referrer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    open_id_referrer_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Player.open_id_referrer)
  return open_id_referrer_;
}
inline ::std::string* Player::release_open_id_referrer() {
  clear_has_open_id_referrer();
  if (open_id_referrer_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = open_id_referrer_;
    open_id_referrer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Player::set_allocated_open_id_referrer(::std::string* open_id_referrer) {
  if (open_id_referrer_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete open_id_referrer_;
  }
  if (open_id_referrer) {
    set_has_open_id_referrer();
    open_id_referrer_ = open_id_referrer;
  } else {
    clear_has_open_id_referrer();
    open_id_referrer_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Player.open_id_referrer)
}

// optional uint64 qqspreadsen = 142;
inline bool Player::has_qqspreadsen() const {
  return (_has_bits_[4] & 0x00002000u) != 0;
}
inline void Player::set_has_qqspreadsen() {
  _has_bits_[4] |= 0x00002000u;
}
inline void Player::clear_has_qqspreadsen() {
  _has_bits_[4] &= ~0x00002000u;
}
inline void Player::clear_qqspreadsen() {
  qqspreadsen_ = GOOGLE_ULONGLONG(0);
  clear_has_qqspreadsen();
}
inline ::google::protobuf::uint64 Player::qqspreadsen() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.qqspreadsen)
  return qqspreadsen_;
}
inline void Player::set_qqspreadsen(::google::protobuf::uint64 value) {
  set_has_qqspreadsen();
  qqspreadsen_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.qqspreadsen)
}

// optional uint32 wf_fatepoint = 143;
inline bool Player::has_wf_fatepoint() const {
  return (_has_bits_[4] & 0x00004000u) != 0;
}
inline void Player::set_has_wf_fatepoint() {
  _has_bits_[4] |= 0x00004000u;
}
inline void Player::clear_has_wf_fatepoint() {
  _has_bits_[4] &= ~0x00004000u;
}
inline void Player::clear_wf_fatepoint() {
  wf_fatepoint_ = 0u;
  clear_has_wf_fatepoint();
}
inline ::google::protobuf::uint32 Player::wf_fatepoint() const {
  // @@protoc_insertion_point(field_get:typed.entity.Player.wf_fatepoint)
  return wf_fatepoint_;
}
inline void Player::set_wf_fatepoint(::google::protobuf::uint32 value) {
  set_has_wf_fatepoint();
  wf_fatepoint_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Player.wf_fatepoint)
}

// -------------------------------------------------------------------

// Role

// required uint64 guid = 1;
inline bool Role::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Role::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Role::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Role::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 Role::guid() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.guid)
  return guid_;
}
inline void Role::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.guid)
}

// required uint64 player = 2;
inline bool Role::has_player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Role::set_has_player() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Role::clear_has_player() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Role::clear_player() {
  player_ = GOOGLE_ULONGLONG(0);
  clear_has_player();
}
inline ::google::protobuf::uint64 Role::player() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.player)
  return player_;
}
inline void Role::set_player(::google::protobuf::uint64 value) {
  set_has_player();
  player_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.player)
}

// optional uint32 role_id = 3;
inline bool Role::has_role_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Role::set_has_role_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Role::clear_has_role_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Role::clear_role_id() {
  role_id_ = 0u;
  clear_has_role_id();
}
inline ::google::protobuf::uint32 Role::role_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.role_id)
  return role_id_;
}
inline void Role::set_role_id(::google::protobuf::uint32 value) {
  set_has_role_id();
  role_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.role_id)
}

// optional string name = 4;
inline bool Role::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Role::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Role::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Role::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Role::name() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.name)
  return *name_;
}
inline void Role::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.name)
}
inline void Role::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:typed.entity.Role.name)
}
inline void Role::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:typed.entity.Role.name)
}
inline ::std::string* Role::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:typed.entity.Role.name)
  return name_;
}
inline ::std::string* Role::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Role::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:typed.entity.Role.name)
}

// optional uint32 sex = 5;
inline bool Role::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Role::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Role::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Role::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 Role::sex() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.sex)
  return sex_;
}
inline void Role::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.sex)
}

// optional uint32 job = 6;
inline bool Role::has_job() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Role::set_has_job() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Role::clear_has_job() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Role::clear_job() {
  job_ = 0u;
  clear_has_job();
}
inline ::google::protobuf::uint32 Role::job() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.job)
  return job_;
}
inline void Role::set_job(::google::protobuf::uint32 value) {
  set_has_job();
  job_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.job)
}

// optional uint32 faction = 7;
inline bool Role::has_faction() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Role::set_has_faction() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Role::clear_has_faction() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Role::clear_faction() {
  faction_ = 0u;
  clear_has_faction();
}
inline ::google::protobuf::uint32 Role::faction() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.faction)
  return faction_;
}
inline void Role::set_faction(::google::protobuf::uint32 value) {
  set_has_faction();
  faction_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.faction)
}

// optional uint32 level = 8;
inline bool Role::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void Role::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void Role::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void Role::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 Role::level() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.level)
  return level_;
}
inline void Role::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.level)
}

// optional uint32 exp = 9;
inline bool Role::has_exp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void Role::set_has_exp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void Role::clear_has_exp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void Role::clear_exp() {
  exp_ = 0u;
  clear_has_exp();
}
inline ::google::protobuf::uint32 Role::exp() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.exp)
  return exp_;
}
inline void Role::set_exp(::google::protobuf::uint32 value) {
  set_has_exp();
  exp_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.exp)
}

// optional uint32 postion = 10;
inline bool Role::has_postion() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void Role::set_has_postion() {
  _has_bits_[0] |= 0x00000200u;
}
inline void Role::clear_has_postion() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void Role::clear_postion() {
  postion_ = 0u;
  clear_has_postion();
}
inline ::google::protobuf::uint32 Role::postion() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.postion)
  return postion_;
}
inline void Role::set_postion(::google::protobuf::uint32 value) {
  set_has_postion();
  postion_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.postion)
}

// optional uint32 normal_skill = 11;
inline bool Role::has_normal_skill() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void Role::set_has_normal_skill() {
  _has_bits_[0] |= 0x00000400u;
}
inline void Role::clear_has_normal_skill() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void Role::clear_normal_skill() {
  normal_skill_ = 0u;
  clear_has_normal_skill();
}
inline ::google::protobuf::uint32 Role::normal_skill() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.normal_skill)
  return normal_skill_;
}
inline void Role::set_normal_skill(::google::protobuf::uint32 value) {
  set_has_normal_skill();
  normal_skill_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.normal_skill)
}

// optional uint32 extremely_skill = 12;
inline bool Role::has_extremely_skill() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void Role::set_has_extremely_skill() {
  _has_bits_[0] |= 0x00000800u;
}
inline void Role::clear_has_extremely_skill() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void Role::clear_extremely_skill() {
  extremely_skill_ = 0u;
  clear_has_extremely_skill();
}
inline ::google::protobuf::uint32 Role::extremely_skill() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.extremely_skill)
  return extremely_skill_;
}
inline void Role::set_extremely_skill(::google::protobuf::uint32 value) {
  set_has_extremely_skill();
  extremely_skill_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.extremely_skill)
}

// optional uint32 char_ability = 13;
inline bool Role::has_char_ability() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void Role::set_has_char_ability() {
  _has_bits_[0] |= 0x00001000u;
}
inline void Role::clear_has_char_ability() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void Role::clear_char_ability() {
  char_ability_ = 0u;
  clear_has_char_ability();
}
inline ::google::protobuf::uint32 Role::char_ability() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.char_ability)
  return char_ability_;
}
inline void Role::set_char_ability(::google::protobuf::uint32 value) {
  set_has_char_ability();
  char_ability_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.char_ability)
}

// repeated uint32 culture = 14;
inline int Role::culture_size() const {
  return culture_.size();
}
inline void Role::clear_culture() {
  culture_.Clear();
}
inline ::google::protobuf::uint32 Role::culture(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.culture)
  return culture_.Get(index);
}
inline void Role::set_culture(int index, ::google::protobuf::uint32 value) {
  culture_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.culture)
}
inline void Role::add_culture(::google::protobuf::uint32 value) {
  culture_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.culture)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Role::culture() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.culture)
  return culture_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Role::mutable_culture() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.culture)
  return &culture_;
}

// repeated uint32 pellet1 = 15;
inline int Role::pellet1_size() const {
  return pellet1_.size();
}
inline void Role::clear_pellet1() {
  pellet1_.Clear();
}
inline ::google::protobuf::uint32 Role::pellet1(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.pellet1)
  return pellet1_.Get(index);
}
inline void Role::set_pellet1(int index, ::google::protobuf::uint32 value) {
  pellet1_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.pellet1)
}
inline void Role::add_pellet1(::google::protobuf::uint32 value) {
  pellet1_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.pellet1)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Role::pellet1() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.pellet1)
  return pellet1_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Role::mutable_pellet1() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.pellet1)
  return &pellet1_;
}

// repeated uint32 pellet_no = 16;
inline int Role::pellet_no_size() const {
  return pellet_no_.size();
}
inline void Role::clear_pellet_no() {
  pellet_no_.Clear();
}
inline ::google::protobuf::uint32 Role::pellet_no(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.pellet_no)
  return pellet_no_.Get(index);
}
inline void Role::set_pellet_no(int index, ::google::protobuf::uint32 value) {
  pellet_no_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.pellet_no)
}
inline void Role::add_pellet_no(::google::protobuf::uint32 value) {
  pellet_no_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.pellet_no)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Role::pellet_no() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.pellet_no)
  return pellet_no_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Role::mutable_pellet_no() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.pellet_no)
  return &pellet_no_;
}

// repeated int32 attributes = 17;
inline int Role::attributes_size() const {
  return attributes_.size();
}
inline void Role::clear_attributes() {
  attributes_.Clear();
}
inline ::google::protobuf::int32 Role::attributes(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.attributes)
  return attributes_.Get(index);
}
inline void Role::set_attributes(int index, ::google::protobuf::int32 value) {
  attributes_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.attributes)
}
inline void Role::add_attributes(::google::protobuf::int32 value) {
  attributes_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.attributes)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Role::attributes() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.attributes)
  return attributes_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Role::mutable_attributes() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.attributes)
  return &attributes_;
}

// repeated uint64 buffers = 18;
inline int Role::buffers_size() const {
  return buffers_.size();
}
inline void Role::clear_buffers() {
  buffers_.Clear();
}
inline ::google::protobuf::uint64 Role::buffers(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.buffers)
  return buffers_.Get(index);
}
inline void Role::set_buffers(int index, ::google::protobuf::uint64 value) {
  buffers_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.buffers)
}
inline void Role::add_buffers(::google::protobuf::uint64 value) {
  buffers_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.buffers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Role::buffers() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.buffers)
  return buffers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Role::mutable_buffers() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.buffers)
  return &buffers_;
}

// repeated uint64 equipments = 19;
inline int Role::equipments_size() const {
  return equipments_.size();
}
inline void Role::clear_equipments() {
  equipments_.Clear();
}
inline ::google::protobuf::uint64 Role::equipments(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.equipments)
  return equipments_.Get(index);
}
inline void Role::set_equipments(int index, ::google::protobuf::uint64 value) {
  equipments_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.equipments)
}
inline void Role::add_equipments(::google::protobuf::uint64 value) {
  equipments_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.equipments)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Role::equipments() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.equipments)
  return equipments_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Role::mutable_equipments() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.equipments)
  return &equipments_;
}

// repeated uint64 hunt = 20;
inline int Role::hunt_size() const {
  return hunt_.size();
}
inline void Role::clear_hunt() {
  hunt_.Clear();
}
inline ::google::protobuf::uint64 Role::hunt(int index) const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.hunt)
  return hunt_.Get(index);
}
inline void Role::set_hunt(int index, ::google::protobuf::uint64 value) {
  hunt_.Set(index, value);
  // @@protoc_insertion_point(field_set:typed.entity.Role.hunt)
}
inline void Role::add_hunt(::google::protobuf::uint64 value) {
  hunt_.Add(value);
  // @@protoc_insertion_point(field_add:typed.entity.Role.hunt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
Role::hunt() const {
  // @@protoc_insertion_point(field_list:typed.entity.Role.hunt)
  return hunt_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
Role::mutable_hunt() {
  // @@protoc_insertion_point(field_mutable_list:typed.entity.Role.hunt)
  return &hunt_;
}

// optional uint32 hire_id = 21;
inline bool Role::has_hire_id() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void Role::set_has_hire_id() {
  _has_bits_[0] |= 0x00100000u;
}
inline void Role::clear_has_hire_id() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void Role::clear_hire_id() {
  hire_id_ = 0u;
  clear_has_hire_id();
}
inline ::google::protobuf::uint32 Role::hire_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.hire_id)
  return hire_id_;
}
inline void Role::set_hire_id(::google::protobuf::uint32 value) {
  set_has_hire_id();
  hire_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.hire_id)
}

// optional uint32 avatar_id = 22;
inline bool Role::has_avatar_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void Role::set_has_avatar_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void Role::clear_has_avatar_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void Role::clear_avatar_id() {
  avatar_id_ = 0u;
  clear_has_avatar_id();
}
inline ::google::protobuf::uint32 Role::avatar_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.avatar_id)
  return avatar_id_;
}
inline void Role::set_avatar_id(::google::protobuf::uint32 value) {
  set_has_avatar_id();
  avatar_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.avatar_id)
}

// optional uint64 educate = 23;
inline bool Role::has_educate() const {
  return (_has_bits_[0] & 0x00400000u) != 0;
}
inline void Role::set_has_educate() {
  _has_bits_[0] |= 0x00400000u;
}
inline void Role::clear_has_educate() {
  _has_bits_[0] &= ~0x00400000u;
}
inline void Role::clear_educate() {
  educate_ = GOOGLE_ULONGLONG(0);
  clear_has_educate();
}
inline ::google::protobuf::uint64 Role::educate() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.educate)
  return educate_;
}
inline void Role::set_educate(::google::protobuf::uint64 value) {
  set_has_educate();
  educate_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.educate)
}

// optional uint32 stomach_start_time = 24;
inline bool Role::has_stomach_start_time() const {
  return (_has_bits_[0] & 0x00800000u) != 0;
}
inline void Role::set_has_stomach_start_time() {
  _has_bits_[0] |= 0x00800000u;
}
inline void Role::clear_has_stomach_start_time() {
  _has_bits_[0] &= ~0x00800000u;
}
inline void Role::clear_stomach_start_time() {
  stomach_start_time_ = 0u;
  clear_has_stomach_start_time();
}
inline ::google::protobuf::uint32 Role::stomach_start_time() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.stomach_start_time)
  return stomach_start_time_;
}
inline void Role::set_stomach_start_time(::google::protobuf::uint32 value) {
  set_has_stomach_start_time();
  stomach_start_time_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.stomach_start_time)
}

// optional uint32 quality = 25;
inline bool Role::has_quality() const {
  return (_has_bits_[0] & 0x01000000u) != 0;
}
inline void Role::set_has_quality() {
  _has_bits_[0] |= 0x01000000u;
}
inline void Role::clear_has_quality() {
  _has_bits_[0] &= ~0x01000000u;
}
inline void Role::clear_quality() {
  quality_ = 0u;
  clear_has_quality();
}
inline ::google::protobuf::uint32 Role::quality() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.quality)
  return quality_;
}
inline void Role::set_quality(::google::protobuf::uint32 value) {
  set_has_quality();
  quality_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.quality)
}

// optional uint32 training_level = 26;
inline bool Role::has_training_level() const {
  return (_has_bits_[0] & 0x02000000u) != 0;
}
inline void Role::set_has_training_level() {
  _has_bits_[0] |= 0x02000000u;
}
inline void Role::clear_has_training_level() {
  _has_bits_[0] &= ~0x02000000u;
}
inline void Role::clear_training_level() {
  training_level_ = 0u;
  clear_has_training_level();
}
inline ::google::protobuf::uint32 Role::training_level() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.training_level)
  return training_level_;
}
inline void Role::set_training_level(::google::protobuf::uint32 value) {
  set_has_training_level();
  training_level_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.training_level)
}

// optional uint32 dodge_skill_id = 27;
inline bool Role::has_dodge_skill_id() const {
  return (_has_bits_[0] & 0x04000000u) != 0;
}
inline void Role::set_has_dodge_skill_id() {
  _has_bits_[0] |= 0x04000000u;
}
inline void Role::clear_has_dodge_skill_id() {
  _has_bits_[0] &= ~0x04000000u;
}
inline void Role::clear_dodge_skill_id() {
  dodge_skill_id_ = 0u;
  clear_has_dodge_skill_id();
}
inline ::google::protobuf::uint32 Role::dodge_skill_id() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.dodge_skill_id)
  return dodge_skill_id_;
}
inline void Role::set_dodge_skill_id(::google::protobuf::uint32 value) {
  set_has_dodge_skill_id();
  dodge_skill_id_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.dodge_skill_id)
}

// optional uint64 wife = 28;
inline bool Role::has_wife() const {
  return (_has_bits_[0] & 0x08000000u) != 0;
}
inline void Role::set_has_wife() {
  _has_bits_[0] |= 0x08000000u;
}
inline void Role::clear_has_wife() {
  _has_bits_[0] &= ~0x08000000u;
}
inline void Role::clear_wife() {
  wife_ = GOOGLE_ULONGLONG(0);
  clear_has_wife();
}
inline ::google::protobuf::uint64 Role::wife() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.wife)
  return wife_;
}
inline void Role::set_wife(::google::protobuf::uint64 value) {
  set_has_wife();
  wife_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.wife)
}

// optional uint64 pellet = 29;
inline bool Role::has_pellet() const {
  return (_has_bits_[0] & 0x10000000u) != 0;
}
inline void Role::set_has_pellet() {
  _has_bits_[0] |= 0x10000000u;
}
inline void Role::clear_has_pellet() {
  _has_bits_[0] &= ~0x10000000u;
}
inline void Role::clear_pellet() {
  pellet_ = GOOGLE_ULONGLONG(0);
  clear_has_pellet();
}
inline ::google::protobuf::uint64 Role::pellet() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.pellet)
  return pellet_;
}
inline void Role::set_pellet(::google::protobuf::uint64 value) {
  set_has_pellet();
  pellet_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.pellet)
}

// optional uint32 inherit_to = 30;
inline bool Role::has_inherit_to() const {
  return (_has_bits_[0] & 0x20000000u) != 0;
}
inline void Role::set_has_inherit_to() {
  _has_bits_[0] |= 0x20000000u;
}
inline void Role::clear_has_inherit_to() {
  _has_bits_[0] &= ~0x20000000u;
}
inline void Role::clear_inherit_to() {
  inherit_to_ = 0u;
  clear_has_inherit_to();
}
inline ::google::protobuf::uint32 Role::inherit_to() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.inherit_to)
  return inherit_to_;
}
inline void Role::set_inherit_to(::google::protobuf::uint32 value) {
  set_has_inherit_to();
  inherit_to_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.inherit_to)
}

// optional uint32 inherit_from = 31;
inline bool Role::has_inherit_from() const {
  return (_has_bits_[0] & 0x40000000u) != 0;
}
inline void Role::set_has_inherit_from() {
  _has_bits_[0] |= 0x40000000u;
}
inline void Role::clear_has_inherit_from() {
  _has_bits_[0] &= ~0x40000000u;
}
inline void Role::clear_inherit_from() {
  inherit_from_ = 0u;
  clear_has_inherit_from();
}
inline ::google::protobuf::uint32 Role::inherit_from() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.inherit_from)
  return inherit_from_;
}
inline void Role::set_inherit_from(::google::protobuf::uint32 value) {
  set_has_inherit_from();
  inherit_from_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.inherit_from)
}

// optional uint64 shl_owner = 32;
inline bool Role::has_shl_owner() const {
  return (_has_bits_[0] & 0x80000000u) != 0;
}
inline void Role::set_has_shl_owner() {
  _has_bits_[0] |= 0x80000000u;
}
inline void Role::clear_has_shl_owner() {
  _has_bits_[0] &= ~0x80000000u;
}
inline void Role::clear_shl_owner() {
  shl_owner_ = GOOGLE_ULONGLONG(0);
  clear_has_shl_owner();
}
inline ::google::protobuf::uint64 Role::shl_owner() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.shl_owner)
  return shl_owner_;
}
inline void Role::set_shl_owner(::google::protobuf::uint64 value) {
  set_has_shl_owner();
  shl_owner_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.shl_owner)
}

// optional uint64 update_fight_power = 33;
inline bool Role::has_update_fight_power() const {
  return (_has_bits_[1] & 0x00000001u) != 0;
}
inline void Role::set_has_update_fight_power() {
  _has_bits_[1] |= 0x00000001u;
}
inline void Role::clear_has_update_fight_power() {
  _has_bits_[1] &= ~0x00000001u;
}
inline void Role::clear_update_fight_power() {
  update_fight_power_ = GOOGLE_ULONGLONG(0);
  clear_has_update_fight_power();
}
inline ::google::protobuf::uint64 Role::update_fight_power() const {
  // @@protoc_insertion_point(field_get:typed.entity.Role.update_fight_power)
  return update_fight_power_;
}
inline void Role::set_update_fight_power(::google::protobuf::uint64 value) {
  set_has_update_fight_power();
  update_fight_power_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Role.update_fight_power)
}

// -------------------------------------------------------------------

// Coin

// required uint64 guid = 1;
inline bool Coin::has_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Coin::set_has_guid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Coin::clear_has_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Coin::clear_guid() {
  guid_ = GOOGLE_ULONGLONG(0);
  clear_has_guid();
}
inline ::google::protobuf::uint64 Coin::guid() const {
  // @@protoc_insertion_point(field_get:typed.entity.Coin.guid)
  return guid_;
}
inline void Coin::set_guid(::google::protobuf::uint64 value) {
  set_has_guid();
  guid_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Coin.guid)
}

// required uint64 player = 2;
inline bool Coin::has_player() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Coin::set_has_player() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Coin::clear_has_player() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Coin::clear_player() {
  player_ = GOOGLE_ULONGLONG(0);
  clear_has_player();
}
inline ::google::protobuf::uint64 Coin::player() const {
  // @@protoc_insertion_point(field_get:typed.entity.Coin.player)
  return player_;
}
inline void Coin::set_player(::google::protobuf::uint64 value) {
  set_has_player();
  player_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Coin.player)
}

// optional uint32 coin = 3;
inline bool Coin::has_coin() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Coin::set_has_coin() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Coin::clear_has_coin() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Coin::clear_coin() {
  coin_ = 0u;
  clear_has_coin();
}
inline ::google::protobuf::uint32 Coin::coin() const {
  // @@protoc_insertion_point(field_get:typed.entity.Coin.coin)
  return coin_;
}
inline void Coin::set_coin(::google::protobuf::uint32 value) {
  set_has_coin();
  coin_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Coin.coin)
}

// optional uint32 money = 4;
inline bool Coin::has_money() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Coin::set_has_money() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Coin::clear_has_money() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Coin::clear_money() {
  money_ = 0u;
  clear_has_money();
}
inline ::google::protobuf::uint32 Coin::money() const {
  // @@protoc_insertion_point(field_get:typed.entity.Coin.money)
  return money_;
}
inline void Coin::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:typed.entity.Coin.money)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace entity
}  // namespace typed

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_entity_2fplayer_2eproto__INCLUDED
